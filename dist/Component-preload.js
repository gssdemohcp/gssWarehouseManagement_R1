/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "gss/newWarehouseManage_R1/Component-preload",
	"modules": {
		"gss/newWarehouseManage_R1/model/utilities.js": "sap.ui.define([\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(Device, JSONModel) {\n\t\"use strict\";\n\n\t// class providing static utility methods.\n\n\t// the density class that should be used according to the environment (may be \"\")\n\tvar sContentDensityClass = (function() {\n\t\tvar sCozyClass = \"sapUiSizeCozy\",\n\t\t\tsCompactClass = \"sapUiSizeCompact\",\n\t\t\toBody = jQuery(document.body);\n\t\tif (oBody.hasClass(sCozyClass) || oBody.hasClass(sCompactClass)) { // density class is already set by the FLP\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn Device.support.touch ? sCozyClass : sCompactClass;\n\t\t}\n\t}());\n\n\treturn {\n\t\t// provide the density class that should be used according to the environment (may be \"\")\n\t\tgetContentDensityClass: function() {\n\t\t\treturn sContentDensityClass;\n\t\t},\n\n\t\t// defines a dependency from oControl to oView\n\t\tattachControlToView: function(oView, oControl) {\n\t\t\tjQuery.sap.syncStyleClass(sContentDensityClass, oView, oControl);\n\t\t\toView.addDependent(oControl);\n\t\t},\n\n\t\t// ********** Srini code to get seleced line item from table control begins **************\n\t\tgetObjects: function(oView) {\n\t\t\tvar controlId = oView.getGlobalModel().getProperty(\"/controlId\");\n\t\t\tvar model = oView.byId(controlId).getSelectedItem().getBindingContext(\"materialList\");\n\t\t\treturn model;\n\t\t},\n\n\t\tgetItems: function(oView, oControlId, oModel) {\n\n\t\t\treturn oView.byId(oControlId).getSelectedItem().getBindingContext(oModel);\n\t\t},\n\t\t// ********** Srini code to get seleced line item from table control ends **************\n\t\tnavigateChild: function(target, oView) {\n\t\t\tvar childScreens = oView.getChildScreens(),\n\t\t\t\tchildScreen = childScreens[target],\n\t\t\t\tcurrentScreen = oView.getGlobalModel().getProperty(\"/currentScreen\");\n\t\t\toView.getGlobalModel().setProperty(\"/parentScreen\", currentScreen);\n\t\t\toView.getGlobalModel().setProperty(\"/currentScreen\", childScreen);\n\t\t\toView.getRouter().navTo(\"\" + target + \"\");\n\n\t\t},\n\t\tsetParentScreen: function(screen, oView) {\n\t\t\tvar viewProperties = oView.getViewProperties();\n\t\t\tviewProperties.parentScreen = screen;\n\n\t\t},\n\t\tselectedItems: function(oView, controlId) {\n\t\t\treturn oView.byId(controlId).getSelectedItems();\n\t\t},\n\t\tremoveItems: function(oView, controlId) {\n\t\t\toView.getView().byId(controlId).removeSelections(true);\n\t\t},\n\t\tbarcodeReader: function(oView, fieldId, frag) {\n\t\t\tcordova.plugins.barcodeScanner.scan(function(barcodeData) {\n\t\t\t\tif (barcodeData.text !== null) {\n\t\t\t\t\tif (sap.ui.Device.os.name === \"Android\") {\n\t\t\t\t\t\tnavigator.vibrate(500);\n\t\t\t\t\t}\n\t\t\t\t\tif (sap.ui.Device.os.name === \"iOS\") {\n\n\t\t\t\t\t}\n\t\t\t\t\tvar inputvalue = barcodeData.text;\n\t\t\t\t\tif (!frag) {\n\t\t\t\t\t\toView.byId(fieldId).setValue(inputvalue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsap.ui.core.Fragment.byId(oView.getGlobalModel().getProperty(\"/viewId\") + frag, fieldId).setValue(inputvalue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t},\n\t\tcheckUiIndicator: function(oView) {\n\t\t\tvar uiInd = oView.getGlobalModel().getProperty(\"/uiInd\");\n\t\t\tvar controlModel = oView.getProcessModel(uiInd);\n\t\t\tfor (var i = 0; i <= Object.keys(controlModel).length; i++) {\n\t\t\t\tfor (var key in controlModel) {\n\t\t\t\t\toView.byId(key).setVisible(controlModel[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcheckVisible: function(oView) {\n\t\t\tvar controlId = oView.getControlId();\n\t\t\tif (oView.getGlobalModel().getProperty(\"/messageType\") === \"S\") {\n\t\t\t\toView.byId(controlId).setVisible(true);\n\t\t\t\toView.byId(controlId).setBusy(false);\n\t\t\t} else {\n\t\t\t\toView.byId(controlId).setVisible(false);\n\t\t\t\toView.byId(controlId).setBusy(false);\n\t\t\t}\n\t\t},\n\t\tbindMessagePop: function(oView, data) {\n\t\t\tvar data = {\n\t\t\t\tMsgtext: '',\n\t\t\t\tMsgtyp: ''\n\t\t\t};\n\t\t\tdata.Msgtext = oView.getGlobalModel().getProperty(\"/message\");\n\t\t\tdata.MsgTyp = oView.getGlobalModel().getProperty(\"/messageType\");\n\t\t\tvar messageModel = new JSONModel();\n\t\t\tvar oData = {\n\t\t\t\taItems: []\n\t\t\t};\n\t\t\toData.aItems.push(data);\n\t\t\tmessageModel.setData(oData);\n\t\t\toView.msgFragmentLoaded.setModel(messageModel, \"errorList\");\n\t\t},\n\t\tloadIndUpdate: function(data, oView) {\n\t\t\tif (oView.getGlobalModel().getProperty(\"/parentScreen\")) {\n\t\t\t\tif (data.LoadedHu === data.TotalHu || data.UnloadedHu === data.TotalHu) {\n\t\t\t\t\toView.getGlobalModel().setProperty(\"/load\", \"X\");\n\t\t\t\t} else {\n\t\t\t\t\toView.getGlobalModel().setProperty(\"/load\", \"Y\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t};\n});",
		"gss/newWarehouseManage_R1/modules/Difference.js": "sap.ui.define([\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/MessageBox\",\n\t\"gss/newWarehouseManage_R1/model/utilities\"\n\n], function(Object, Device, JSONModel, Filter, FilterOperator, MessageBox, utilities) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.model.GlobalWarehouseManage\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This cla\"ss has the following properties:\n\t\t// - _oList\"Selector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunni\"ngSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\n\t\tdiffCalculation: function(actualVal, targVal, fragmentLoaded,fragId) {\n\t\t\tvar diffVal = targVal - actualVal;\n\t\t\tif (diffVal >= 0 && diffVal <= targVal) {\n\t\t\t\tvar oData = fragmentLoaded.getModel(\"handleDiff\").getData();\n\t\t\t\t// sap.ui.getCore().byId(\"actual\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\toData.destDifa = diffVal;\n\t\t\t\toData.destActa = actualVal;\n\t\t\t\tfragmentLoaded.getModel(\"handleDiff\").setData(oData);\n\t\t\t\tsap.ui.core.Fragment.byId(fragId, \"onHandleDiff\").setEnabled(true);\n\t\t\t} else {\n\t\t\t\tsap.ui.core.Fragment.byId(fragId, \"onHandleDiff\").setEnabled(false);\n\t\t\t\t// sap.ui.getCore().byId(\"actual\").setValueState(sap.ui.core.ValueState.Error);\n\t\t\t}\n\t\t},\n\t\tdiffShipCalculation: function(actualVal, targVal, fragmentLoaded,fragId) {\n\t\t\tvar diffVal = targVal - actualVal;\n\t\t\tthis.diffaVal = diffVal;\n\t\t\tif (diffVal >= 0 && diffVal <= targVal) {\n\t\t\t\tvar oData = fragmentLoaded.getModel(\"handleDiff\").getData();\n// \t\t\t\tsap.ui.getCore().byId(\"actual\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\toData.destDifa = diffVal;\n\t\t\t\toData.destActa = actualVal;\n\t\t\t\toData.destTarget = targVal;\n\t\t\t\tfragmentLoaded.getModel(\"handleDiff\").setData(oData);\n\t\t\t\tsap.ui.core.Fragment.byId(fragId, \"onHandleDiff\").setEnabled(true);\n\t\t\t} else {\n\t\t\t\tsap.ui.core.Fragment.byId(fragId, \"onHandleDiff\").setEnabled(false);\n// \t\t\t\tsap.ui.getCore().byId(\"actual\").setValueState(sap.ui.core.ValueState.Error);\n\t\t\t}\n\t\t},\n\n\t\tsetDiffModel: function(oItem, diffFragment) {\n\t\t\t// for the putaway diff process\n\t\t\tvar dBin = oItem.Nltyp + \"  \" + oItem.Nlber + \"  \" + oItem.Nlpla;\n\t\t\tvar destTarget = oItem.DestTarga;\n\t\t\tvar destActa = oItem.DestActa;\n\t\t\tvar destDifa = oItem.DestDifa;\n\t\t\tvar oItemList = {\n\t\t\t\tmatId: oItem.Matnr,\n\t\t\t\tmatDesc: oItem.Maktx,\n\t\t\t\tdBin: dBin,\n\t\t\t\tdestActa: destActa,\n\t\t\t\tdestTarget: destTarget,\n\t\t\t\tdestDifa: destDifa\n\t\t\t};\n\t\t\treturn oItemList;\n\t\t},\n\t\t\n\t\tsetDelItemsDiffModel: function(oItem, diffragment) {\n\t\t\t\tvar destTarget = oItem.TargQty;\n\t\t\t\tif (oItem.TargQty === oItem.Lfimg) {\n\t\t\t\t\tvar oItemList = {\n\t\t\t\t\t\tdBin: \"\",\n\t\t\t\t\t\tdestTarget: destTarget,\n\t\t\t\t\t\tdestActa: \"0\",\n\t\t\t\t\t\tdestDifa: \"0\"\n\t\t\t\t\t};\n\t\t\t\t} else if (oItem.TargQty !== oItem.Lfimg) {\n\t\t\t\t\tvar diffaVal = oItem.TargQty - oItem.Lfimg;\n\t\t\t\t\toItemList = {\n\t\t\t\t\t\tdBin: \"\",\n\t\t\t\t\t\tdestTarget: destTarget,\n\t\t\t\t\t\tdestActa: oItem.Lfimg,\n\t\t\t\t\t\tdestDifa: diffaVal\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\treturn oItemList;\t\n\t\t},\n\t\tsetShipItemsDiffModel: function(oItem, diffragment) {\n\t\t\tvar destTarget = oItem.TargQty;\n\t\t\tvar destChang = oItem.Lfimg;\n\t\t\tvar changDiff = destTarget - destChang;\n\t\t\tvar destActual;\n\t\t\tvar destDiff;\n\t\t\tif (destTarget !== destChang) {\n\t\t\t\tdestActual = destChang;\n\t\t\t\tdestDiff = changDiff;\n\t\t\t} else {\n\t\t\t\tdestActual = 0;\n\t\t\t\tdestDiff = 0;\n\t\t\t}\n\t\t\tvar oItemList = {\n\t\t\t\tdestTarget: destTarget,\n\t\t\t\tdestActa: destActual,\n\t\t\t\tdestDifa: destDiff\n\t\t\t};\n\t\t\treturn oItemList;\n\t\t},\n\n\t\tcloseFragment: function(fragment) {\n\t\t\tfragment.close();\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/modules/CreateBreadCrumbs.js": "//By Sabari To get the Menu Filter for Dialog\nsap.ui.define([\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\"\n], function(Object, Device, JSONModel, History, BaseController) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.model.createBreadCrumbs\", {\n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\t\tBreadCrumbs: function(oSelectedItem, oView) {\n\t\t\tthis.MainView = oView;\n\t\t\toView.getGlobalModel().setProperty(\"/MainView\", this.MainView);\n\t\t\tif (oSelectedItem.Qmenu) {\n\t\t\t\toView.byId(\"breadCrumbs\").addLink(\n\t\t\t\t\tnew sap.m.Link({\n\t\t\t\t\t\ttext: oView.geti18n(\"mainMenu\"),\n\t\t\t\t\t\ttarget: oSelectedItem.Qmenu,\n\t\t\t\t\t\tpress: function(oSelect) {\n\t\t\t\t\t\t\tthis._openBreadcrumbLink(oSelect, oView); //Press function to open the bread crumb link\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toView.byId(\"breadCrumbs\").addLink(\n\t\t\t\t\tnew sap.m.Link({\n\t\t\t\t\t\ttext: oSelectedItem.Text,\n\t\t\t\t\t\ttarget: oSelectedItem.MenTrans,\n\t\t\t\t\t\tpress: function(oSelect) {\n\t\t\t\t\t\t\tthis._openBreadcrumbLink(oSelect, oView); //Press function to open the bread crumb link\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t_openBreadcrumbLink: function(oSelect, oView) {\n\t\t\tthis._pTarget = oSelect.getSource().getTarget(); //Get the selected link target\n\t\t\tthis._pText = oSelect.getSource().getText(); //Get the selected link text\n\t\t\tthis._pId = oSelect.getSource().getId(); //Get the selected link Id\n\t\t\toView.setModelData(\"\");\n\t\t\tthis.SecondView.byId(\"inputValue\").setValue(\"\");\n\t\t    this.SecondView.byId(oView.getControlId()).setVisible(false);\n\n\t\t\tthis._modifyBreadCrumbLink(this._pTarget, this._pText, this._pId, oView); //Call the modifybreadcrumblink with the selected link\n\t\t},\n\t\t// Description: Modify breadcrumb link based on target, text and id\n\t\t// ***********************************\t\n\t\t_modifyBreadCrumbLink: function(sTarget, sText, sId, oView) {\n\t\t\tif (History.length !== 0) {\n\t\t\t\tthis.MainView = oView.getGlobalModel().getProperty(\"/MainView\");\n\t\t\t\tthis.SecondView = oView.getGlobalModel().getProperty(\"/SecondView\");\n\t\t\t\tvar aLink = this.SecondView.byId(\"breadCrumbs\").getLinks();\n\t\t\t\taLink.forEach(function(mLink) {\n\t\t\t\t\tthis.MainView.byId(\"breadCrumbs\").addLink(mLink);\n\t\t\t\t}.bind(this));\n\t\t\t\tvar aLink = this.MainView.byId(\"breadCrumbs\").getLinks();\n\t\t\t\taLink.forEach(function(mLink) {\n\t\t\t\t\tif (mLink.getId() > sId) {\n\t\t\t\t\t\tthis.MainView.byId(\"breadCrumbs\").removeLink(mLink);\n\t\t\t\t\t}\n\t\t\t\t\toView.byId(\"breadCrumbs\").setCurrentLocationText(\"\");\n\t\t\t\t}.bind(this));\n\t\t\t\tthis._bindTarget(sTarget, sText, oView);\n\t\t\t} else {\n\t\t\t\tvar aLink = oView.byId(\"breadCrumbs\").getLinks();\n\t\t\t\taLink.forEach(function(mLink) {\n\t\t\t\t\tif (mLink.getId() > sId) {\n\t\t\t\t\t\toView.byId(\"breadCrumbs\").removeLink(mLink);\n\t\t\t\t\t}\n\t\t\t\t\toView.byId(\"breadCrumbs\").setCurrentLocationText(\"\");\n\t\t\t\t}.bind(this));\n\t\t\t\tthis._bindTarget(sTarget, sText, oView);\n\t\t\t}\n\t\t},\n\t\t// Description: Open the selected breadcrumb link\n\t\t// ***********************************\t\t\t\t\t\n\t\t_bindTarget: function(sTarget, sText, oView) {\n\t\t\tvar createBC = \"\";\n\t\t\tvar mData = {\n\t\t\t\tMenTrans: sTarget,\n\t\t\t\tProTyp: \"1\",\n\t\t\t\tText: sText\n\t\t\t};\n\t\t\tif (History.length !== 0) {\n\t\t\t\toView.getGlobalModel().setProperty(\"/MenuData\", mData);\n\t\t\t\toView.getGlobalModel().setProperty(\"/currentScreen\", \"LM999\");\n\t\t\t\toView.getApplication().navBack(History, \"\");\n\t\t\t} else {\n\t\t\t\toView._menuBinding(mData, createBC); //Call the filter method passing selected target and text data with create breadcrumb indicator\n\t\t\t}\n\t\t},\n\t\tgetMainBreadCrumb: function(oView) {\n\t\t\tthis.MainView = oView.getGlobalModel().getProperty(\"/MainView\");\n\t\t\tvar aLink = this.MainView.byId(\"breadCrumbs\").getLinks();\n\t\t\tthis.SecondView = oView;\n\t\t\toView.getGlobalModel().setProperty(\"/SecondView\", this.SecondView);\n\t\t\taLink.forEach(function(mLink) {\n\t\t\t\tthis.SecondView.byId(\"breadCrumbs\").addLink(mLink);\n\t\t\t}.bind(this));\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/modules/Fragments.js": "sap.ui.define([\"sap/ui/base/Object\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/MessageBox\",\n\t\"gss/newWarehouseManage_R1/model/utilities\"\n\n], function(Object, BaseController, Device, JSONModel, Filter, FilterOperator, MessageBox, utilities) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.model.GlobalWarehouseManage\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This cla\"ss has the following properties:\n\t\t// - _oList\"Selector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunni\"ngSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\t\tuiIndCheck: function(oView, indiTO, indiTOConf, indiPost,flag) {\n\t\t\tif (indiTO === \"\") {\n\t\t\t\toView.getGlobalModel().setProperty(\"/uiInd\", \"init\");\n\t\t\t} else if (indiTO === \"X\") {\n\t\t\t\toView.getGlobalModel().setProperty(\"/uiInd\", \"gTo\");\n\t\t\t\tif (indiTOConf === \"X\") {\n\t\t\t\t\toView.getGlobalModel().setProperty(\"/uiInd\", \"toEx\");\n\t\t\t\t\tif (indiPost === \"X\") {\n\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/uiInd\", \"post\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (indiTOConf === \"\") {\n\t\t\t\toView.getGlobalModel().setProperty(\"/uiInd\", \"toEx\");\n\t\t\t}\n\t\t\t\n\t\t\tutilities.checkUiIndicator(oView);\n\t\t\tif(flag === \"true\"){\n\t\t\t\tutilities.checkVisible(oView);\n\t\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tfragmentFalse: function(oView, flag) {\n\t\t\toView.byId(\"Lload\").setVisible(false);\n\t\t\toView.byId(\"more\").setVisible(false);\n\t\t\toView.byId(\"items\").setVisible(false);\n\t\t\tif (flag) {\n\t\t\t\toView.byId(\"ship\").setVisible(false);\n\t\t\t}\n\t\t\toView.byId(\"post\").setVisible(false);\n\t\t\toView.byId(\"TOEx\").setVisible(false);\n\t\t\toView.byId(\"GTO\").setVisible(false); //To display G.TO button\n\n\t\t},\n\n\t\tloadFragment: function(oView, fragmentName) {\n\t\t\tif (!this.fragment) {\n\t\t\t\tvar fragment = oView.getFragmentControllerModel().getProperty(\"/\" + fragmentName);\n\t\t\t}\n\t\t\treturn fragment;\n\t\t},\n\n\t\tcloseFragment: function(fragment) {\n\t\t\tfragment.close();\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/modules/CreateElements.js": "sap.ui.define([\"sap/ui/base/Object\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/MessageBox\",\n\t\"gss/newWarehouseManage_R1/model/utilities\"\n\n], function(Object, BaseController, Device, JSONModel, Filter, FilterOperator, MessageBox, utilities) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.model.GlobalWarehouseManage\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This cla\"ss has the following properties:\n\t\t// - _oList\"Selector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunni\"ngSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\t\thandleMoreButtons: function(event, oView) {\n\t\t\tvar popover = new sap.m.Popover({ // To build popup&nbsp;\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: sap.m.PlacementType.Top,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew sap.m.Button({ // To display Logout button inside popup\n\t\t\t\t\t\ttext: oView.geti18n(\"pack\"), // Text to be dispalyed for the button\n\t\t\t\t\t\ttype: sap.m.ButtonType.Transparent, // Button type\n\t\t\t\t\t\tpress: function() {\n\t\t\t\t\t\t\t\t// press functionality for the button\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/pack\", \"Packing\");\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/shipInd\", \"P\");\n\t\t\t\t\t\t\t\toView.setUpdateToast(\"packTst\");\n\t\t\t\t\t\t\t\tutilities.navigateChild(\"UnPack\", oView); // Call to exit() method\n\t\t\t\t\t\t\t}.bind(oView) // bind the popup to the view\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Button({ // To display Logout button inside popup\n\t\t\t\t\t\ttext: oView.geti18n(\"unpack\"), // Text to be dispalyed for the button\n\t\t\t\t\t\ttype: sap.m.ButtonType.Transparent, // Button type\n\t\t\t\t\t\tpress: function() { // press functionality for the button\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/pack\", \"UnPacking\");\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/shipInd\", \"U\");\n\t\t\t\t\t\t\t\toView.setUpdateToast(\"unpackTst\");\n\t\t\t\t\t\t\t\tutilities.navigateChild(\"UnPack\", oView); // Call to exit() method\n\t\t\t\t\t\t\t}.bind(oView) // bind the popup to the view\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t]\n\t\t\t}).addStyleClass('sapMOTAPopover sapTntToolHeaderPopover'); // CSS style for the popup\n\t\t\tpopover.openBy(event.getSource()); // To open popup event\n\t\t\tvar split =\tnew sap.m.Button({ // To display Split button inside popup\n\t\t\t\t\t\ttext: oView.geti18n(\"split\"), // Text to be dispalyed for the button\n\t\t\t\t\t\ttype: sap.m.ButtonType.Transparent, // Button type\n\t\t\t\t\t\tpress: function() { // press functionality for the button\n\t\t\t\t\t\t\t\toView.onHandleSplit(); // Call to exit() method\n\t\t\t\t\t\t\t}.bind(this) // bind the popup to the view\n\t\t\t\t\t});\n\t\t\tif(oView.getGlobalModel().getProperty(\"/currentQueue\") === \"OUTBOUND\"){\n\t\t\t\t     popover.addContent(split); \n\t\t\t\t\t}\n\t\t\t\n\t\t}\n\n\t});\n});",
		"gss/newWarehouseManage_R1/modules/MenuBinding.js": "//By Sabari To get the Menu Filter for Dialog\nsap.ui.define([\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\"\n\n], function(Object, Device, JSONModel) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.model.menuBinding\", {\n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\t\toMenu: function(oView, oSubMenu, oSelectedItem, createBC) {\n\t\t\tthis._rfMenu = [];\n\t\t\toSubMenu.forEach(function(mItem) {\n\t\t\t\tif (mItem.Qmenu && !oSelectedItem) {\n\t\t\t\t\t//Main menu itself a transaction\n\t\t\t\t\tif (mItem.Qmenu && mItem.ProTyp === \"2\") {\n\t\t\t\t\t\toView.byId(\"breadCrumbs\").setCurrentLocationText(mItem.Text);\n\t\t\t\t\t\toView.byId(\"inputValue\").setPlaceholder(\"Enter\" + \" \" + mItem.Text);\n\t\t\t\t\t\toView._oDialog.close();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Get the main menu\n\t\t\t\t\t\tthis._qMenu = mItem.Qmenu;\n\t\t\t\t\t\tthis.sUser = mItem.SyUname;\n\t\t\t\t\t\tthis.Queue = mItem.Queue;\n\t\t\t\t\t\tthis.Lgnum = mItem.Lgnum;\n\t\t\t\t\t\toView.byId(\"syuser\").setText(this.sUser);\n\t\t\t\t\t\toView._oDialog.setTitle(oView.geti18n(\"mainMenu\"));\n\t\t\t\t\t\t//Create Breadcrumb link\n\t\t\t\t\t\toView.gssCallBreadcrumbs().BreadCrumbs(mItem, oView);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//Bind Main Menu\n\t\t\t\telse if (mItem.Mmenu === this._qMenu && mItem.ProTyp === \"1\" && !oSelectedItem) {\n\t\t\t\t\tthis._rfMenu.push(mItem);\n\t\t\t\t}\n\t\t\t\t//Bind Sub Menus\n\t\t\t\telse if (oSelectedItem) {\n\t\t\t\t\tif (oSelectedItem.ProTyp === \"1\" && mItem.Mmenu === oSelectedItem.MenTrans) {\n\t\t\t\t\t\tthis._rfMenu.push(mItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t\tif (oSelectedItem && createBC === \"X\") {\n\t\t\t\toView._oDialog.setTitle(\" \");\n\t\t\t\toView._oDialog.setTitle(oSelectedItem.Text);\n\t\t\t\toView.gssCallBreadcrumbs().BreadCrumbs(oSelectedItem, oView); //Call function create breadcrumbs\n\t\t\t} else if (oSelectedItem && createBC === \"\") {\n\t\t\t\toView._oDialog.setTitle(\" \");\n\t\t\t\toView._oDialog.setTitle(oSelectedItem.Text);\n\t\t\t}\n\t\t\treturn this._rfMenu;\n\t\t},\n\t\tbindMenuModel: function(_rfMenu) {\n\t\t\tvar rfModel = new JSONModel();\n\t\t\tvar rfData = {\n\t\t\t\taItems: _rfMenu\n\t\t\t};\n\t\t\tthis._rfMenu = [];\n\t\t\trfModel.setData(rfData);\n\t\t\treturn rfModel;\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/view/fragments/split.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"split\" title=\"{i18n>splitDiaog}\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" icon=\"sap-icon://alert\" afterClose=\"onClose\">\n\t\t<content>\n\t\t\t<Input id=\"splitHU\" placeholder = \"{i18n>EnterHU}\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text = \"{i18n>save}\" press=\"onSaveSplit\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text = \"{i18n>cancel}\" press=\"onCancelSplit\"/>\n\t\t</endButton>\t\t\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"gss/newWarehouseManage_R1/controller/Application\",\n\t\"gss/newWarehouseManage_R1/model/models\"\n], function(UIComponent, Device, Application, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"gss.newWarehouseManage_R1.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tvar oApplication = new Application(this);\n\t\t\toApplication.init();\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/lib/GssWarehouseManage.js": "sap.ui.define([\"sap/ui/core/mvc/Controller\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\",\n\t\"gss/newWarehouseManage_R1/model/utilities\",\n\t\"gss/newWarehouseManage_R1/controller/errorHandling\",\n\t\"gss/newWarehouseManage_R1/lib/ODataModelInterface\",\n\t\"sap/m/MessageToast\"\n\n], function(Controller, BaseController, JSONModel, MessageBox, utilities, errorHandling, ODataModelInterface, MessageToast) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.lib.GssWarehouseManage\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This cla\"ss has the following properties:\n\t\t// - _oList\"Selector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunni\"ngSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t\tthis._bMessageOpen = false;\n\n\t\t\tthis._ODataModelInterface = new ODataModelInterface(this);\n\n\t\t},\n\n\t\tcheckNewBin: function(oView, sInputValue) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\toFilterFields.Nlpla = sInputValue;\n\t\t\toFilterFields.Nltyp = oView.getGlobalModel().getProperty(\"/currentNltyp\");\n\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\n\t\t\tvar oWhenCallReadIsDone = this._ODataModelInterface.filterModelPopulate(oView, \"\");\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallReadIsDone.done(function(oRfData) {\n\t\t\t\tpromise.resolve(oRfData);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tloadMenuConfiguration: function(oView) {\n\t\t\tvar promise = jQuery.Deferred(),\n\t\t\t\tpQueue = \"\",\n\t\t\t\tpLgnum = \"\";\n\n\t\t\tvar oWhenCallReadIsDone = this._ODataModelInterface.filterModelPopulate(oView);\n\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallReadIsDone.done(function(oRfModel) {\n\t\t\t\t//code start - selvan\n\t\t\t\t//capture queue number for filter option\n\t\t\t\tvar aRfMenu = oRfModel.getData().aItems;\n\t\t\t\taRfMenu.forEach(function(oRfMenu) {\n\t\t\t\t\tif (oRfMenu.Queue && oRfMenu.Lgnum) {\n\t\t\t\t\t\tpQueue = oRfMenu.Queue;\n\t\t\t\t\t\tpLgnum = oRfMenu.Lgnum;\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t\tvar oGlobalModel = oView.getModel(\"globalProperties\");\n\t\t\t\toGlobalModel.setProperty(\"/currentQueue\", pQueue);\n\t\t\t\toGlobalModel.setProperty(\"/currentLgnum\", pLgnum);\n\t\t\t\t//code end -selvan\n\n\t\t\t\tpromise.resolve();\n\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\t\t},\n\n\t\tgetMaterial: function(oView, sInputValue) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oFilterFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oFilterFields).length; i++) {\n\t\t\t\toFilterFields[_inpVal] = sInputValue;\n\t\t\t}\n\n\t\t\toFilterFields.Queue = oView.getGlobalModel().getProperty(\"/currentQueue\");\n\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\n\t\t\tvar whenOdataCall = this._ODataModelInterface.filterModelPopulate(oView, \"\");\n\t\t\twhenOdataCall.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\t\tgrKeyFields: function(oView, sInputValue, shipInd) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oKeyFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oKeyFields).length; i++) {\n\t\t\t\toKeyFields[_inpVal] = sInputValue;\n\t\t\t}\n\t\t\tif (shipInd) {\n\t\t\t\toKeyFields.ShipInd = shipInd;\n\t\t\t}\n\n\t\t\toKeyFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\n\t\t\tvar whenOdataCall = this._ODataModelInterface.keyFieldModelPopulate(oView);\n\t\t\twhenOdataCall.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\t\tgrPackKeyFields: function(oView, sInputValue, huVal) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oKeyFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oKeyFields).length; i++) {\n\t\t\t\toKeyFields[_inpVal] = sInputValue;\n\t\t\t}\n\n\t\t\tif (huVal) {\n\t\t\t\toKeyFields.Exidv = huVal;\n\t\t\t\toKeyFields.ShipInd = oView.getGlobalModel().getProperty(\"/shipInd\");\n\t\t\t}\n\t\t\tif (!oView.getGlobalModel().getProperty(\"/parentScreen\")) {\n\t\t\t\toKeyFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\t}\n\n\t\t\tvar whenOdataCall = this._ODataModelInterface.keyFieldModelPopulate(oView);\n\t\t\twhenOdataCall.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tgetLoadInq: function(oView, sInputValue, shipInd, Vbeln) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oFilterFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oFilterFields).length; i++) {\n\t\t\t\toFilterFields[_inpVal] = sInputValue;\n\t\t\t}\n\t\t\tif (!shipInd) {\n\n\t\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\t} else {\n\t\t\t\toFilterFields.ShipInd = shipInd;\n\t\t\t}\n\t\t\tif (Vbeln) {\n\t\t\t\toFilterFields.Vbeln = Vbeln;\n\t\t\t}\n\t\t\tvar whenOdataCall = this._ODataModelInterface.filterModelPopulate(oView, \"\");\n\t\t\twhenOdataCall.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\t\t},\n\n\t\tmaterialSave: function(oView, mat, quant, unit, controlId, model) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar oViewModel = new JSONModel();\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oFilterFields = {};\n\t\t\toFilterFields.Vbeln = oView.getGlobalModel().getProperty(\"/currentDelNo\");\n\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\toFilterFields.Matnr = mat;\n\t\t\toFilterFields.Lfimg = quant;\n\t\t\toFilterFields.Vrkme = unit;\n\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.filterModelPopulate(oView, oFilterFields);\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tvar data = oResult.getData();\n\t\t\t\tvar viewData = oView.byId(controlId).getModel(model).getData();\n\t\t\t\tfor (var i = 0; i < data.aItems.length; i++) {\n\t\t\t\t\tviewData.aItems.push(data.aItems[i]);\n\t\t\t\t}\n\t\t\t\toViewModel.setData(viewData);\n\t\t\t\tthis.getView().byId(controlId).setModel(oViewModel, model);\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\thuSave: function(oView, hu, controlId, model) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar oViewModel = new JSONModel();\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oFilterFields;\n\t\t\toFilterFields.Vbeln = oView.getGlobalModel().getProperty(\"/currentDelNo\");\n\t\t\toFilterFields.Exidv = oView.getGlobalModel().getProperty(\"/currentHuVal\");\n\t\t\toFilterFields.Unvel = hu;\n\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.filterModelPopulate(oView, oFilterFields);\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tvar data = oResult.getData();\n\t\t\t\tvar viewData = this.getView().byId(controlId).getModel(model).getData();\n\t\t\t\tfor (var i = 0; i < data.aItems.length; i++) {\n\t\t\t\t\tviewData.aItems.push(data.aItems[i]);\n\t\t\t\t}\n\t\t\t\toViewModel.setData(viewData);\n\t\t\t\tthis.getView().byId(controlId).setModel(oViewModel, model);\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\thandleSplit: function(oView, huVal) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\toKeyFields.Exidv = huVal;\n\t\t\toKeyFields.Vbeln = oView.getGlobalModel().getProperty(\"/currentDelNo\");\n\t\t\toKeyFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\tvar oWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelPopulate(oView);\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tLoadDetails: function(oView, sInputValue, huVal, procInd) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//SET INPUT VALUE\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oFilterFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oFilterFields).length; i++) {\n\t\t\t\toFilterFields[_inpVal] = sInputValue;\n\t\t\t}\n\t\t\toFilterFields.Exidv = huVal;\n\t\t\toFilterFields.ProcInd = procInd;\n\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.filterModelPopulate(oView, \"\");\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\t\t},\n\n\t\tLoadUnloadKeyFields: function(oView, modelData, HuStatus, loadInd) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\toKeyFields.Vbeln = modelData.aItems[0].Vbeln;\n\t\t\toKeyFields.Exidv = modelData.aItems[0].Exidv;\n\t\t\toKeyFields.Exida = modelData.aItems[0].Exida;\n\t\t\toKeyFields.Tknum = modelData.aItems[0].Tknum;\n\t\t\toKeyFields.LoadInd = loadInd;\n\t\t\toKeyFields.HuStatus = HuStatus;\n\t\t\toKeyFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\toKeyFields.ProcInd = \"\";\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelPopulate(oView);\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\t\t},\n\n\t\tUnloadDetails: function(oView, sInputValue, huVal, procInd, loadInd) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//SET INPUT VALUE\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\tvar property = \"\";\n\t\t\tvar _inpVal = 0;\n\t\t\tfor (property in oFilterFields) {\n\t\t\t\t_inpVal = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var i = 0; i < Object.keys(oFilterFields).length; i++) {\n\t\t\t\toFilterFields[_inpVal] = sInputValue;\n\t\t\t}\n\t\t\toFilterFields.Exidv = huVal;\n\t\t\toFilterFields.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\toFilterFields.ProcInd = procInd;\n\t\t\toFilterFields.LoadInd = loadInd;\n\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.filterModelPopulate(oView, \"\");\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\t\t},\n\n\t\tconfirmItems: function(oView, oSelectItems, controlId) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar activeModel = oView.getModelName();\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\n\t\t\toSelectItems.forEach(function(mItem) {\n\t\t\t\tvar updateItem = mItem.getBindingContext(activeModel).getObject();\n\t\t\t\toKeyFields.Queue = updateItem.Queue;\n\t\t\t\toKeyFields.Lgnum = updateItem.Lgnum;\n\t\t\t\toKeyFields.Tanum = updateItem.Tanum;\n\t\t\t\toKeyFields.Tapos = updateItem.Tapos;\n\t\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelUpdate(oView, updateItem);\n\t\t\t\toWhenOdataUpdateDone.done(function(oRfModel) {\n\t\t\t\t\tvar oNewModel = oView.byId(controlId).getModel(activeModel).getData().aItems;\n\t\t\t\t\tvar oStatText = {\n\t\t\t\t\t\tstat: \"\",\n\t\t\t\t\t\ttext: \"\",\n\t\t\t\t\t\tmItems: \"\"\n\t\t\t\t\t};\n\t\t\t\t\tthis.aTotStat = [];\n\t\t\t\t\tthis.errorOccured = \"\";\n\t\t\t\t\t// this.aFilter = [];\n\t\t\t\t\tthis.finalItem = updateItem.Tanum;\n\t\t\t\t\tthis.finalPos = updateItem.Tapos;\n\t\t\t\t\t// MessageToast.show(\"Transfer Order confirmed successfully\");\n\t\t\t\t\toStatText.stat = oView.getGlobalModel().getProperty(\"/messageType\");\n\t\t\t\t\toStatText.mItems = updateItem;\n\t\t\t\t\tthis.aTotStat.push(oStatText);\n\t\t\t\t\t//Check the filter message\n\t\t\t\t\tthis.currentItem = updateItem.Tanum;\n\t\t\t\t\tthis.currentPos = updateItem.Tapos;\n\t\t\t\t\tvar oStatMessage = {\n\t\t\t\t\t\tMsgtext: '',\n\t\t\t\t\t\tMsgtyp: ''\n\t\t\t\t\t};\n\t\t\t\t\tthis.aTotStat.forEach(function(oStat) {\n\t\t\t\t\t\toStatMessage = {\n\t\t\t\t\t\t\tMsgtext: '',\n\t\t\t\t\t\t\tMsgtyp: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (oStat.stat === \"E\") {\n\t\t\t\t\t\t\t// var errText = {\n\t\t\t\t\t\t\toStatMessage.Msgtext = oStat.mItems.Matnr + \" \" + oRfModel.getData().aItems[0].statusText;\n\t\t\t\t\t\t\toStatMessage.Msgtyp = \"Error\";\n\t\t\t\t\t\t\t// };\n\t\t\t\t\t\t\tif (this.itemNo) {\n\t\t\t\t\t\t\t\tvar aItems = this.getView().byId(controlId).getemSelectedItems();\n\t\t\t\t\t\t\t\taItems.forEach(function(mItem) {\n\t\t\t\t\t\t\t\t\tvar selectedItem = mItem.getBindingContext(activeModel).getObject();\n\t\t\t\t\t\t\t\t\tvar response = \"\";\n\t\t\t\t\t\t\t\t\tvar responseText = \"\";\n\t\t\t\t\t\t\t\t\tif (oRfModel.getData().aItems[0].responseText[0] === \"{\") {\n\t\t\t\t\t\t\t\t\t\tresponse = JSON.parse(oRfModel.getData().aItems[0].responseText).error.message.value;\n\t\t\t\t\t\t\t\t\t\tif (response[0] === \"~\") {\n\t\t\t\t\t\t\t\t\t\t\tvar aResponse = response.split(\"~\");\n\t\t\t\t\t\t\t\t\t\t\tMessageBox.error(\n\t\t\t\t\t\t\t\t\t\t\t\taResponse[2] + \" \" + aResponse[3]\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tdelete this.itemNo;\n\t\t\t\t\t\t\t\t\t\t\tdelete this.matnr;\n\t\t\t\t\t\t\t\t\t\t\tthis.itemNo = aResponse[1];\n\t\t\t\t\t\t\t\t\t\t\tthis.matnr = aResponse[2];\n\t\t\t\t\t\t\t\t\t\t\tresponseText = aResponse[2] + \" \" + aResponse[3];\n\t\t\t\t\t\t\t\t\t\t\toStatText.text = responseText;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (selectedItem.Tapos < this.itemNo) {\n\t\t\t\t\t\t\t\t\t\toStatMessage = {\n\t\t\t\t\t\t\t\t\t\t\tMsgtext: '',\n\t\t\t\t\t\t\t\t\t\t\tMsgtyp: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\toStatMessage.Msgtext = \"Material\" + \" \" + selectedItem.Matnr + \" \" + \"Confirmed Successfully\";\n\t\t\t\t\t\t\t\t\t\toStatMessage.Msgtyp = \"Success\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t\t\t\toStatMessage = {\n\t\t\t\t\t\t\t\t\tMsgtext: '',\n\t\t\t\t\t\t\t\t\tMsgtyp: ''\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\toStatMessage.Msgtext = \"Material\" + \" \" + oStat.text;\n\t\t\t\t\t\t\t\toStatMessage.Msgtyp = \"Error\";\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/message\", oStatMessage.Msgtext);\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/messageType\", oStatMessage.Msgtyp);\n\t\t\t\t\t\t\t\tutilities.bindMessagePop(oView, oStatMessage);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (oStat.stat === \"S\") {\n\t\t\t\t\t\t\t// var successText = {\n\t\t\t\t\t\t\tif (oStat.text === \"\") {\n\t\t\t\t\t\t\t\toStat.text = \"Confirmed successfully\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toStatMessage.Msgtext = \"Material\" + \" \" + oStat.mItems.Matnr + \" \" + oStat.text;\n\t\t\t\t\t\t\toStatMessage.Msgtyp = \"Success\";\n\t\t\t\t\t\t\tif (this.finalPos === this.currentPos) {\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/message\", oStatMessage.Msgtext);\n\t\t\t\t\t\t\t\toView.getGlobalModel().setProperty(\"/messageType\", oStatMessage.Msgtyp);\n\t\t\t\t\t\t\t\tutilities.bindMessagePop(oView, oStatMessage);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\tvar index;\n\t\t\t\t\tfor (var i = 0; i < oNewModel.length; i++) {\n\t\t\t\t\t\tif (oNewModel[i].Tanum === this.currentItem && oNewModel[i].Tapos === this.currentPos) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toNewModel.splice(index, 1);\n\t\t\t\t\tvar oJSONModel = new JSONModel();\n\t\t\t\t\toJSONModel.setData({\n\t\t\t\t\t\taItems: oNewModel\n\t\t\t\t\t});\n\t\t\t\t\toView.byId(controlId).setModel(oJSONModel, activeModel);\n\t\t\t\t\tvar tabLen = oView.byId(controlId).getItems().length;\n\t\t\t\t\tif (tabLen === 0) {\n\t\t\t\t\t\tif (oView.getGlobalModel().getProperty(\"/parentScreen\")) {\n\t\t\t\t\t\t\tsap.ui.getCore().byId(oView.getGlobalModel().getProperty(\"/viewCid\") + \"--TOEx\").setVisible(false);\n\t\t\t\t\t\t\tsap.ui.getCore().byId(oView.getGlobalModel().getProperty(\"/viewCid\") + \"--post\").setVisible(true);\n\n\t\t\t\t\t\t\toView.onNavBack();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpromise.resolve(oRfModel);\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\tacceptItems: function(oView, oSelectItems, controlId, shipInd) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar activeModel = oView.getModelName();\n\n\t\t\toSelectItems.forEach(function(mItem) {\n\t\t\t\tvar updateItem = mItem.getBindingContext(activeModel).getObject();\n\t\t\t\tupdateItem.ShipInd = shipInd;\n\t\t\t\tupdateItem.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\t\tupdateItem.Exidv = oView.getGlobalModel().getProperty(\"/currentHuVal\");\n\t\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelUpdate(oView, updateItem);\n\t\t\t\toWhenOdataUpdateDone.done(function(oRfModel) {\n\t\t\t\t\tvar oStatMessage = {\n\t\t\t\t\t\tMsgtext: oView.getGlobalModel().getProperty(\"/message\"),\n\t\t\t\t\t\tMsgtyp: oView.getGlobalModel().getProperty(\"/messageType\")\n\t\t\t\t\t};\n\t\t\t\t\tutilities.bindMessagePop(oView, oStatMessage);\n\t\t\t\t\tvar oNewModel = oView.byId(controlId).getModel(activeModel).getData().aItems;\n\t\t\t\t\tvar index;\n\t\t\t\t\tfor (var i = 0; i < oNewModel.length; i++) {\n\t\t\t\t\t\tif (oNewModel[i].Matnr === oNewModel[i].Matnr) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (shipInd === \"U\") {\n\t\t\t\t\t\toNewModel.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t\tvar oJSONModel = new JSONModel();\n\t\t\t\t\toJSONModel.setData({\n\t\t\t\t\t\taItems: oNewModel\n\t\t\t\t\t});\n\t\t\t\t\toView.setModel(oJSONModel, activeModel);\n\t\t\t\t\tpromise.resolve(oRfModel);\n\t\t\t\t\tutilities.removeItems(oView, controlId);\n\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\tonSaveItems: function(oView, oSelectItems, controlId, shipInd) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar activeModel = oView.getModelName();\n\t\t\toSelectItems.forEach(function(mItems) {\n\t\t\t\tvar updateItem = mItems.getBindingContext(activeModel).getObject();\n\t\t\t\tupdateItem.ShipInd = shipInd;\n\t\t\t\tupdateItem.Vbeln = oView.getGlobalModel().getProperty(\"/currentDelNo\");\n\t\t\t\tupdateItem.Lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelUpdate(oView, updateItem);\n\t\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\t\tpromise.resolve(oResult);\n\t\t\t\t\tutilities.bindMessagePop(oView, \"\");\n\t\t\t\t\tutilities.removeItems(oView, controlId);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\tgiShipUpdate: function(oView, startDate, endDate, startTime, endTime, tkNum) {\n\t\t\tvar oWhenOdataUpdateDone;\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oEntry = {};\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\toKeyFields.Vbeln = \"\";\n\t\t\toKeyFields.Lgnum = \"\";\n\t\t\toKeyFields.ShipInd = \"\";\n\t\t\toEntry.StartDate = startDate;\n\t\t\toEntry.StartTime = startTime;\n\t\t\toEntry.EndDate = endDate;\n\t\t\toEntry.EndTime = endTime;\n\t\t\toEntry.Tknum = tkNum;\n\t\t\toWhenOdataUpdateDone = this._ODataModelInterface.keyFieldModelUpdate(oView, oEntry);\n\t\t\toWhenOdataUpdateDone.done(function(oResult) {\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\thandleShipTO: function(oView, controlId, model, shipInd) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar vbeln = oView.byId(controlId).getSelectedItem().getBindingContext(model).getObject().Vbeln;\n\t\t\tvar lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\tvar objects = {\n\t\t\t\t\"Vbeln\": vbeln,\n\t\t\t\t\"Lgnum\": lgnum,\n\t\t\t\t\"ShipInd\": shipInd\n\t\t\t};\n\t\t\tvar oWhenCallCreateIsDone = this._ODataModelInterface.keyFieldModelCreate(oView, objects);\n\t\t\toWhenCallCreateIsDone.done(function(oResult) {\n\t\t\t\tif (shipInd === \"T\") {\n\t\t\t\t\tvar shipTabModel = oView.byId(controlId).getModel(model).getData().aItems;\n\t\t\t\t\tshipTabModel.forEach(function(shItems) {\n\t\t\t\t\t\tif (vbeln === shItems.Vbeln) {\n\t\t\t\t\t\t\tshItems.ToInd = \"X\";\n\t\t\t\t\t\t\tvar data = oView.getModelData(oView.getModelName());\n\t\t\t\t\t\t\tdata.aItems[0].ToInd = \"X\";\n\t\t\t\t\t\t\toView.getModel(oView.getModelName()).setData(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this));\n\t\t\t\t\toView.checkInd(shipTabModel, \"false\");\n\n\t\t\t\t} else {\n\t\t\t\t\toView.gssFragmentsFunction().fragmentFalse(oView, \"S\");\n\t\t\t\t\tutilities.bindMessagePop(oView, \"\");\n\n\t\t\t\t}\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\t\thandleDelTO: function(oView, controlId, model, shipInd) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar vbeln = oView.getGlobalModel().getProperty(\"/currentDelNo\");\n\t\t\tvar lgnum = oView.getGlobalModel().getProperty(\"/currentLgnum\");\n\t\t\tvar objects = {\n\t\t\t\t\"Vbeln\": vbeln,\n\t\t\t\t\"Lgnum\": lgnum,\n\t\t\t\t\"ShipInd\": shipInd\n\t\t\t};\n\t\t\tvar oWhenCallCreateIsDone = this._ODataModelInterface.keyFieldModelCreate(oView, objects);\n\t\t\toWhenCallCreateIsDone.done(function(oResult) {\n\t\t\t\tif (shipInd === \"T\") {\n\t\t\t\t\tvar GIDelData = oView.byId(controlId).getModel(model).getData().aItems;\n\t\t\t\t\tGIDelData.ToInd = \"X\";\n\t\t\t\t\tvar data = oView.getModelData(oView.getModelName());\n\t\t\t\t\tdata.aItems[0].ToInd = \"X\";\n\t\t\t\t\toView.getModel(oView.getModelName()).setData(data);\n\t\t\t\t\toView.checkInd(GIDelData, \"false\");\n\t\t\t\t} else {\n\t\t\t\t\toView.gssFragmentsFunction().fragmentFalse(oView, \"S\");\n\t\t\t\t\tutilities.bindMessagePop(oView, \"\");\n\n\t\t\t\t}\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/lib/ODataModelInterface.js": "sap.ui.define([\"sap/ui/base/Object\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"gss/newWarehouseManage_R1/model/utilities\",\n\t\"gss/newWarehouseManage_R1/controller/errorHandling\",\n\t\"gss/newWarehouseManage_R1/lib/ODATAService\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/MessageToast\"\n\n], function(Object, JSONModel, utilities, errorHandling, ODATAService, Filter, FilterOperator, MessageToast) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.lib.ODataModelInterface\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This cla\"ss has the following properties:\n\t\t// - _oList\"Selector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunni\"ngSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t\tthis._bMessageOpen = false;\n\n\t\t\t//CREAT OBJECT FOR ODATA SERVICE\n\t\t\t//GET GLOBAL VARIABLE VALUES FROM BASE CONTROLLER/GLOBAL MODEL\n\n\t\t\tthis._oODATAService = new ODATAService(this);\n\t\t\tthis._oRfModel = new JSONModel();\n\t\t},\n\n\t\tfilterModelPopulate: function(oView, oFilterFields) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//GET VIEW ENTITY SET NAME FROM CONFIQURATION JSON MODEL\n\t\t\tvar sEntitySet = oView.getEntitySet();\n\t\t\t//GET FILTER FIELDS FROM CONFIGURATION JSON MODEL\n\t\t\tif (!oFilterFields) {\n\t\t\t\toFilterFields = oView.getFilterFields();\n\t\t\t}\n\t\t\t//SETUP FILTER STRING\n\t\t\tvar aFilterValues = this.setFilter(oFilterFields);\n\t\t\t//CALL ODATA SERVICE\n\t\t\tvar oWhenCallReadIsDone = this._oODATAService.oCallReadDeferred(sEntitySet, oView, aFilterValues);\n\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallReadIsDone.done(function(oResult, oFailed) {\n\t\t\t\tvar oRfData;\n\t\t\t\toRfData = oResult.results;\n\t\t\t\toRfData = {\n\t\t\t\t\taItems: oRfData\n\t\t\t\t};\n\n\t\t\t\tthis.errorHandlingDelegate(oView, oRfData, true);\n\n\t\t\t\tpromise.resolve(this._oRfModel);\n\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tkeyFieldModelPopulate: function(oView) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//GET VIEW ENTITY SET NAME FROM CONFIQURATION JSON MODEL\n\t\t\tvar sEntitySet = oView.getEntitySet();\n\t\t\t//GET KEY FIELDS FROM CONFIGURATION JSON MODEL\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\t//Setup filter string\n\t\t\tvar sPath = this.setKeyField(oKeyFields);\n\n\t\t\tvar oWhenCallReadIsDone = this._oODATAService.oCallReadDeferred(sEntitySet + sPath, oView, \"\");\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallReadIsDone.done(function(oResult, oFailed) {\n\t\t\t\tvar oRfData;\n\t\t\t\toRfData = oResult;\n\t\t\t\toRfData = {\n\t\t\t\t\taItems: [oRfData]\n\t\t\t\t};\n\t\t\t\tthis.errorHandlingDelegate(oView, oRfData, true);\n\n\t\t\t\tpromise.resolve(this._oRfModel);\n\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\t\tkeyFieldModelUpdate: function(oView, oUpdateItem) {\n\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//GET VIEW ENTITY SET NAME FROM CONFIQURATION JSON MODEL\n\t\t\tvar sEntitySet = oView.getEntitySet();\n\t\t\t//GET KEY FIELDS FROM CONFIGURATION JSON MODEL\n\t\t\tvar oKeyFields = oView.getKeyFields();\n\t\t\t//Setup filter string\n\t\t\tvar sPath = this.setKeyField(oKeyFields);\n\t\t\tvar oWhenCallUpdateIsDone = this._oODATAService.oCallUpdateDeferred(sEntitySet + sPath, oUpdateItem, oView);\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallUpdateIsDone.done(function(oResult, oFailed) {\n\t\t\t\tvar oRfData;\n\t\t\t\toRfData = oResult;\n\t\t\t\toRfData = {\n\t\t\t\t\taItems: [oRfData]\n\t\t\t\t};\n\t\t\t\tthis.buildMessage(oView, oResult);\n\t\t\t\tthis.errorHandlingDelegate(oView, oRfData, false);\n\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tkeyFieldModelCreate: function(oView, oUpdateItem) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//GET VIEW ENTITY SET NAME FROM CONFIQURATION JSON MODEL\n\t\t\tvar sEntitySet = oView.getEntitySet();\n\t\t\t//GET KEY FIELDS FROM CONFIGURATION JSON MODEL\n\t\t\t/*var oKeyFields = oView.getKeyFields();*/\n\t\t\t//Setup filter string\n\t\t\t/*var sPath = this.setKeyField(oKeyFields);*/\n\t\t\tvar oWhenCallCreateIsDone = this._oODATAService.oCallCreateDeferred(sEntitySet, oUpdateItem, oView);\n\t\t\t//Handle response from oData Call\n\t\t\toWhenCallCreateIsDone.done(function(oResult, oFailed) {\n\t\t\t\tvar oRfData;\n\t\t\t\toRfData = oResult;\n\t\t\t\toRfData = {\n\t\t\t\t\taItems: [oRfData]\n\t\t\t\t};\n\t\t\t\tthis.errorHandlingDelegate(oView, oRfData, false);\n\t\t\t\tpromise.resolve(oResult);\n\t\t\t}.bind(this));\n\t\t\treturn promise;\n\t\t},\n\t\tbuildMessage: function(oView, oResult) {\n\t\t\tvar oGlobalModel = oView.getModel(\"globalProperties\");\n\t\t\tif (!oResult) {\n\t\t\t\toGlobalModel.setProperty(\"/messageType\", \"S\");\n\t\t\t\tvar sMessage = oView.geti18n(oView.getUpdateToast());\n\t\t\t\toGlobalModel.setProperty(\"/message\", sMessage);\n\t\t\t} else {\n\t\t\t\toGlobalModel.setProperty(\"/messageType\", \"E\");\n\t\t\t}\n\n\t\t},\n\n\t\terrorHandlingDelegate: function(oView, oRfData, setModelFlag) {\n\t\t\tvar oGlobalModel = oView.getModel(\"globalProperties\");\n\n\t\t\tif (oRfData.aItems.length !== 0) {\n\n\t\t\t\t//SET MODEL TO CURRENT VIEW\n\t\t\t\tvar sModelName = oView.getModelName();\n\t\t\t\tif (sModelName.length !== 0 && setModelFlag === true ) {\n\t\t\t\t\tthis._oRfModel.setData(oRfData);\n\t\t\t\t\toView.setModelData(oRfData);\n\t\t\t\t\toView.setModel(this._oRfModel, oView.getModelName());\n\t\t\t\t}\n\n\t\t\t\t//Before call errorhandling delegates\n\t\t\t\t//Set Response Message and message Type to trigger message box\n\t\t\t\tif (oRfData.aItems[0]) {\n\t\t\t\t\toGlobalModel.setProperty(\"/message\", oRfData.aItems[0].Msgtext);\n\t\t\t\t\toGlobalModel.setProperty(\"/messageType\", oRfData.aItems[0].Msgtyp);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t/*else {\n\t\t\t\t//Set Response Message and message Type to trigger message box\n\t\t\t\toGlobalModel.setProperty(\"/message\", \"Invalid Input\");\n\t\t\t\toGlobalModel.setProperty(\"/messageType\", \"E\");\n\n\t\t\t}*/\n\t\t\t// delegate error handling\n\t\t\terrorHandling.register(oView.getApplication(), oView.getComponent());\n\t\t},\n\n\t\t// ************* Srini code to get selected items from table begins ************\n\t\tselectedItems: function(oView, controlId) {\n\t\t\treturn oView.byId(controlId).getSelectedItems();\n\t\t},\n\t\tfunctionCallByFilter: function(oView) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\t//GET VIEW ENTITY SET NAME FROM CONFIQURATION JSON MODEL\n\t\t\tvar sEntitySet = oView.getEntitySet();\n\t\t\t//GET FILTER FIELDS FROM CONFIGURATION JSON MODEL\n\t\t\tvar oFilterFields = oView.getFilterFields();\n\t\t\t//SETUP FILTER STRING\n\t\t\tvar aFilterValues = this.setFilter(oFilterFields);\n\t\t\t//CALL ODATA SERVICE\n\t\t\tthis._oODATAService.oCallFunctionPromise(sEntitySet, oView, aFilterValues)\n\t\t\t\t.then(function(oResult, response) {\n\t\t\t\t\tvar oRfData;\n\t\t\t\t\toRfData = oResult;\n\t\t\t\t\toRfData = {\n\t\t\t\t\t\taItems: [oRfData]\n\t\t\t\t\t};\n\t\t\t\t\tthis.errorHandlingDelegate(oView, oRfData, true);\n\t\t\t\t\tpromise.resolve(oRfData);\n\t\t\t\t});\n\n\t\t\treturn promise;\n\n\t\t},\n\n\t\tsetUrlFilter: function(oFilterFields) {\n\t\t\t/*\t[{\"Lgnum\":oView.getGlobalModel().getProperty(\"/currentLgnum\"),\n\t\t\t\t\"Nltyp\":oView.getGlobalModel().getProperty(\"/currentNltyp\"),\n\t\t\t\t\"Nlpla\": sInputValue}];*/\n\t\t\tvar index = 0,\n\t\t\t\tproperty = \"\",\n\t\t\t\taFilterValues = [];\n\t\t\tvar inputValues = [],\n\t\t\t\tfieldValues = [];\n\t\t\tif (oFilterFields !== null) {\n\t\t\t\tfor (index in oFilterFields) {\n\t\t\t\t\tinputValues.push(oFilterFields[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tfor (property in oFilterFields) {\n\t\t\t\t\tfieldValues.push(property);\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < fieldValues.length; i++) {\n\t\t\t\t\taFilterValues.push(this.buildFilter(fieldValues[i], inputValues[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aFilterValues;\n\n\t\t},\n\n\t\tbuildFilter: function(field, value) {\n\t\t\tvar aFilter = new Filter(field, FilterOperator.EQ, value);\n\t\t\treturn aFilter;\n\t\t},\n\n\t\tsetFilter: function(oFilterFields) {\n\t\t\tvar index = 0,\n\t\t\t\tproperty = \"\",\n\t\t\t\taFilterValues = [];\n\t\t\tvar inputValues = [],\n\t\t\t\tfieldValues = [];\n\t\t\tif (oFilterFields !== null) {\n\t\t\t\tfor (index in oFilterFields) {\n\t\t\t\t\tinputValues.push(oFilterFields[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tfor (property in oFilterFields) {\n\t\t\t\t\tfieldValues.push(property);\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < fieldValues.length; i++) {\n\t\t\t\t\taFilterValues.push(this.buildFilter(fieldValues[i], inputValues[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aFilterValues;\n\t\t},\n\t\tsetKeyField: function(oKeyFields) {\n\t\t\tvar index = 0,\n\t\t\t\tmodelArray = [],\n\t\t\t\tfieldArray = [];\n\t\t\tvar path = \"\",\n\t\t\t\tproperty = \"\",\n\t\t\t\tcommaVar = \",\";\n\n\t\t\tif (oKeyFields !== null) {\n\t\t\t\tfor (index in oKeyFields) {\n\t\t\t\t\tmodelArray.push(oKeyFields[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\tfor (property in oKeyFields) {\n\t\t\t\t\tfieldArray.push(property);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < fieldArray.length; i++) {\n\t\t\t\t\tif (i === fieldArray.length - 1) {\n\t\t\t\t\t\tcommaVar = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tpath = path + fieldArray[i] + \"='\" + modelArray[i] + \"'\" + commaVar;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar sPath = \"(\" + path + \")\";\n\t\t\treturn sPath;\n\t\t}\n\n\t});\n});\n// ************* Srini code to get confirm items ends ************",
		"gss/newWarehouseManage_R1/lib/ODATAService.js": "sap.ui.define([\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\"\n\n], function(Object, Device, JSONModel) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.lib.GlobalWarehouseManage\", {\n\t\t// This class provides the service of sending approve/reject requests to the backend. Moreover, it deals with concurrency handling and success dialogs.\n\t\t// For this purpose, a singleton instance is created and attached to the application controller as public property oApprover.\n\t\t// This is used by the instances of SubControllerForApproval and by the S2-controller (for swipe approve).\n\t\t// Note that approvals that are caused by SubControllerForApproval make the app busy while approvals done by swiping do not.\n\t\t// This class has the following properties:\n\t\t// - _oListSelector: helper class to interact with the master list (fixed)\n\t\t// - iOpenCallsCount: number of running approve/reject calls. This attribute is needed because swipe approvals may cause parallel calls.\n\t\t// - _mRunningSwipes: maps the IDs of those POs for which a swipe approve is still in process onto true\n\t\t// - _bOneWaitingSuccess: true, if at least one approve/reject operation was successfully performed since the last refresh of the master list \n\t\tconstructor: function(oApplication) {\n\t\t\tthis._iOpenCallsCount = 0;\n\t\t\tthis._mRunningSwipes = {};\n\t\t\tthis._bOneWaitingSuccess = false;\n\t\t},\n\t\toCallFunctionService: function(sEntityName, oView, oUriParameters) {\n\t\t\tvar promise = jQuery.Deferred();\n\t\t\tvar oModel = oView.getModel(); //To get the Model data//\n\t\t\tvar para = oUriParameters[0];\n\t\t\toModel.callFunction(sEntityName, { // function import name //\n\t\t\t\tmethod: \"GET\", // http method //\n\t\t\t\turlParameters: para,\n\t\t\t\tsuccess: function(oData, response) { //Success Function //\n\t\t\t\t\tpromise.resolve(oData);\n\t\t\t\t}.bind(this), // callback function for success\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tpromise.reject(oError);\n\t\t\t\t}.bind(this)\n\t\t\t}); // callback function for error\n\t\t\treturn promise;\n\t\t},\n\n\t\t//reference example url https://blogs.sap.com/2014/05/06/promises-in-native-javascript/\n\t\toCallFunctionPromise: function(sEntityName, oView, oUriParameters) {\n\t\t\treturn new Promise(function(fnResolve, fnReject) {\n\t\t\t\tvar oModel = oView.getModel();\n\t\t\t\tvar para = oUriParameters[0];\n\t\t\t\tvar fnOnError = function(oError) {\n\t\t\t\t\tthis._callEnded(false, oView);\n\t\t\t\t\tfnReject(oError);\n\t\t\t\t}.bind(this);\n\t\t\t\tvar fnOnSuccess = function(oData, response) {\n\t\t\t\t\tthis._callEnded(true, oView);\n\t\t\t\t\tfnResolve(oData, response);\n\t\t\t\t}.bind(this);\n\t\t\t\toModel.callFunction(sEntityName, { // function import name //\n\t\t\t\t\tmethod: \"GET\", // http method //\n\t\t\t\t\turlParameters: para,\n\t\t\t\t\tsuccess: fnOnSuccess,\n\t\t\t\t\terror: fnOnError\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\t\t//The Deferred object, introduced in jQuery 1.5, \n\t\t//is a chainable utility object created by calling the jQuery.Deferred() method.\n\t\toCallReadDeferred: function(sEntityName, oComponent, aFilters) {\n\t\t\tvar promise = jQuery.Deferred(),\n\t\t\t\toDataModel = oComponent.getModel();\n\n\t\t\toDataModel.read(sEntityName, {\n\t\t\t\tfilters: aFilters,\n\t\t\t\tsuccess: function(oData) {\n\t\t\t\t\tpromise.resolve(oData);\n\t\t\t\t}.bind(this),\n\t\t\t\terror: function(oData) {\n\t\t\t\t\tpromise.reject(oData);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t\treturn promise;\n\t\t},\n\t\t\n\n\t\toCallUpdateDeferred: function(sEntityset, oItems, oView) {\n\t\t\tvar promise = jQuery.Deferred(),\n\t\t\t\toDataModel = oView.getModel();\n\n\t\t\toDataModel.update(sEntityset, oItems, {\n\t\t\t\tsuccess: function(oData,oResponse) {\n\t\t\t\t\tpromise.resolve(oData);\n\t\t\t\t}.bind(this),\n\t\t\t\terror: function(oData,oResponse) {\n\t\t\t\t\tpromise.reject(oData);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t\t\treturn promise;\n\t\t},\n\n\t\toCallCreateDeferred: function(sEntityset, oItems, oView) {\n\t\t\tvar promise = jQuery.Deferred(),\n\t\t\t\toDataModel = oView.getModel();\n\n\t\t\toDataModel.create(sEntityset, oItems, {\n\t\t\t\tsuccess: function(oData) {\n\t\t\t\t\tpromise.resolve(oData);\n\t\t\t\t\t\n\t\t\t\t}.bind(this),\n\t\t\t\terror: function(oData) {\n\t\t\t\t\tpromise.reject(oData);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t\t\treturn promise;\n\t\t},\n\n\t\t//This odata read function write return value into global variable to handle later in UI\n\t\toCallRead: function(sFunction, oOwnerComponent, oGlobalModel) {\n\t\t\t//var oModel = oOwnerComponent.getModel();\n\t\t\tvar oRfData;\n\t\t\toOwnerComponent.read(sFunction, {\n\t\t\t\tsuccess: function(oRetrievedResult) {\n\t\t\t\t\t//return odata result \n\t\t\t\t\toRfData = oRetrievedResult.results;\n\t\t\t\t\toGlobalModel.setProperty(\"/oDataResult\", oRfData);\n\t\t\t\t\t// this.oCallEnd(oGlobalModel);\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn oRfData;\n\t\t},\n\t\t\n\t\toCallCreate: function(sFunction, oOwnerComponent, oGlobalModel) {\n\t\t\tvar oRfData;\n\t\t\toOwnerComponent.create(sFunction, {\n\t\t\t\tsuccess: function(oRetrievedResult) {\n\t\t\t\t\t//return odata result \n\t\t\t\t\toRfData = oRetrievedResult.results;\n\t\t\t\t\toGlobalModel.setProperty(\"/oDataResult\", oRfData);\n\t\t\t\t\t// this.oCallEnd(oGlobalModel);\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn oRfData;\n\t\t},\n\n\t\toCallEnd: function(oGlobalModel) {\n\t\t\toGlobalModel.setProperty(\"/oDataResult\", this._oResultData);\n\n\t\t},\n\n\t\t//handl multiple request\n\t\toCallDifferedMultiple: function(sFunction, oOwnerComponent) {\n\t\t\treturn new Promise(function(fnResolve, fnReject) {\n\t\t\t\tvar oRfData;\n\t\t\t\t//var sFunction = \"/configurationsSet\",\n\t\t\t\t//\toModel = oOwnerComponent.getModel();\n\t\t\t\tvar oModel = oOwnerComponent;\n\t\t\t\tthis._iOpenCallsCount++;\n\t\t\t\tvar fnOnError = function() {\n\t\t\t\t\tfnReject();\n\t\t\t\t}.bind(this);\n\t\t\t\tvar fnOnSuccess = function(oRetrievedResult) {\n\t\t\t\t\t//return odata result \n\t\t\t\t\toRfData = oRetrievedResult.results;\n\t\t\t\t\tvar oGlobalModel = oOwnerComponent.getModel(\"globalProperties\");\n\t\t\t\t\toGlobalModel.setProperty(\"/oDataResult\", oRfData);\n\t\t\t\t\t// this.oCallEnd(oGlobalModel);\n\t\t\t\t\t//\tthis._callEnded(true, oGlobalModel);\n\t\t\t\t\t// A success message is only sent when the last request has returned. Thus, when the user sents several requests via swipe, only one\n\t\t\t\t\t// message toast is sent; this represents the request that came back as last.\n\t\t\t\t\tif (this._iOpenCallsCount === 0) {\n\t\t\t\t\t\tvar oResourceBundle = oOwnerComponent.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\t\t\t\tsSuccessMessage = \"\";\n\t\t\t\t\t\tsSuccessMessage = oResourceBundle.getText(\"ymsg.sucssfullCallMessageToast\");\n\t\t\t\t\t\tsap.ui.require([\"sap/m/MessageToast\"], function(MessageToast) {\n\t\t\t\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfnResolve();\n\t\t\t\t}.bind(this);\n\t\t\t\toModel.callFunction(sFunction, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tgroupId: \"oDataCall\"\n\t\t\t\t});\n\n\t\t\t\toModel.submitChanges({\n\t\t\t\t\tgroupId: \"oDataCall\",\n\t\t\t\t\tsuccess: fnOnSuccess,\n\t\t\t\t\terror: fnOnError\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t// This method is called when a backend call has finished.\n\t\t// bSuccess states whether the call was successful\n\t\t// oGlobalModel is the global JSON model of the app\n\t\t_callEnded: function(bSuccess, oGlobalModel) {\n\t\t\t// Book-keeping:\n\t\t\tthis._iOpenCallsCount--;\n\t\t\tthis._bOneWaitingSuccess = bSuccess || this._bOneWaitingSuccess;\n\t\t\tif (this._iOpenCallsCount === 0) { // When we are not waiting for another call\n\t\t\t\tif (this._bOneWaitingSuccess) { // At least one PO was approved/rejected successfully, therefore the list should be refreshed\n\t\t\t\t\tthis._bOneWaitingSuccess = false;\n\t\t\t\t} else {\n\t\t\t\t\toGlobalModel.setProperty(\"/isBusyApproving\", false); // As no refresh is triggered in this case, we reset the busy status immediately.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/controller/Application.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t//\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/BindingMode\",\n\t\"sap/ui/core/routing/History\",\n\t\"gss/newWarehouseManage_R1/modules/MenuBinding\",\n\t\"gss/newWarehouseManage_R1/modules/Fragments\",\n\t\"gss/newWarehouseManage_R1/modules/Difference\",\n\t\"gss/newWarehouseManage_R1/modules/CreateElements\",\n\t\"gss/newWarehouseManage_R1/modules/CreateBreadCrumbs\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\n\t\"gss/newWarehouseManage_R1/controller/ErrorHandler\",\n\t\"./errorHandling\",\n\t\"gss/newWarehouseManage_R1/lib/GssWarehouseManage\"\n\t// \"gss/newWarehouseManage_R1/lib/WMConfiguration\"\n\n], function(Object, Device, BindingMode, History, MENUBinding, Fragments, Difference, CreateElements, CreateBreadCrumbs, BaseController,\n\tErrorHandler, errorHandling, GssWarehouseManage) {\n\t\"use strict\";\n\n\treturn Object.extend(\"gss.newWarehouseManage_R1.controller.Application\", {\n\t\t// Attributes of this class:\n\t\t// _oComponent: the component representing this app\n\t\t// _oRootView: the main view hosting the app\n\t\t// _oResourceBundle: the resource bundle for this app\n\t\t// _oODataModel: the ODataModel used by this app\n\t\t// _oGlobalModel: model 'globalProperties' (see below)\n\t\t// _oRouter: the router for this app\n\t\t// _fnWhenMetadataIsFinished: When metadata loading for the OData model finishes and this parameter is truthy,\n\t\t//                            it is assumed that this parameter is a function. In this case this function is called\n\t\t//                            passing the information whether the metadata loading finished successfully as parameter.                          \n\n\t\t/**\n\t\t * This class serves as controller for the whole app. It is a singleton that is instantiated and initialized by\n\t\t * the Component.\n\t\t * Note that during initialization a json-model is created and attached to the component (name 'globalProperties').\n\t\t * This json-model serves as storage for the global state of the app. In detail, it possesses the following attributes:\n\t\t * - application: this instance\n\t\t * - listNoDataText: the no data text currently used by the master list\n\t\t * - isMultiSelect: boolean indicating whether the app is in multi-select mode\n\t\t * - selectedPurchaseOrders: in multi select mode, this is an array containing purchase order objects representing the selected list items\n\t\t * - currentPOId: if this attribute is truthy it specifies the ID of the purchase order that should be displayed on the detail screen\n\t\t * - preferredIds: This attribute is only evaluated if currentPOId is faulty and the app is not running on a phone.\n\t\t *                 In this case, the app must determine a PO that should be displayed in the detail area.\n\t\t *                 Therefore the PO IDs in the array preferredIds are checked one after the other.\n\t\t *                 The first one that can be found in the master list is taken. If this procedure does not lead to a match,\n\t\t *                 the first entry in the master list is selected. This logic is implemented in method _findItemToDisplay of the S2 controller.\n\t\t * - isMetaDataLoading: information about whether the app is currently loading metadata of the OData service\n\t\t * - isBusyApproving: information about whether the app is currently busy with approving POs (note that quick approvals do not put the app into the 'busy' state).\n\t\t *                    Note that the busy indication will not be set back when the approval process itself has ended. The app\n\t\t *                    remains busy until the follow-up actions (refreshing the list, loading a new item in the detail area) are completed.\n\t\t * - metaDataLoaded: information about whether the metadata of the OData service have already been loaded successfully\n\t\t * - isSwipeRunning: information about whether a swipe approval is currently being processed. In order to avoid inconsistencies, the multi-select-button\n\t\t *                is disabled meanwhile.\n\t\t * - originalBusyDelay: the default delay for busy indication of the root view\n\t\t * - masterImmediateBusy/detailImmediateBusy: Normally busy indication appears with a delay. However, if the master list or\n\t\t *                                            controls on the detail page become busy directly after the whole app has been busy, this delay\n\t\t *                                            should be suppressed in order to avoid a flickering of busy states.\n\t\t * - emptyPage: only relevant when EmptyPage view is displayed. In this case, it contains the data that this view displays. For more information, see\n\t\t *              the declarative definition of this view.\n\t\t * Moreover, a json-model is created and attached to the component (name 'device') providing access to sap.ui.Device in declarative definitions.\n\t\t * Note that the OData model used by this app is automatically created according to the app descriptor.\n\t\t * For this ODataModel exactly one deferred batch group (namely \"POMassApproval\") is set.\n\t\t * @class\n\t\t * @public\n\t\t * @param {object} oComponent the component representing this app\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oComponent = oComponent;\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Lifecycle methods                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called by component in order to launch the app.\n\t\t * In this method, the json models are set and the router is initialized.\n\t\t * @public\n\t\t */\n\t\tinit: function() {\n\t\t\tvar JSONModel = sap.ui.require(\"sap/ui/model/json/JSONModel\");\n\n\t\t\tthis._oResourceBundle = this._oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t// Globalsoft warehouse management\n\t\t\tthis._oGssWarehouseManage = new GssWarehouseManage(this);\n\t\t\t//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\t\t\t//By Sabari to Create object for Menu and Sub Menu Binding \n\t\t\t//*******************************************************************************\n\t\t\tthis._omenuBinding = new MENUBinding(this);\n\t\t\t//*******************************************************************************\n\t\t\t//End of Code Sabari to Create object for Menu and Sub Menu Binding \n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\t\t\t//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\t\t\t//By Sabari to Create Bread Crumbs\n\t\t\t//*******************************************************************************\n\t\t\tthis._ocreateBreadCrumbs = new CreateBreadCrumbs(this);\n\t\t\t//*******************************************************************************\n\t\t\t//End of Code Sabari to Create Bread Crumbs \n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\t\t\t// *************** Srini Code to display fragments begins ***************\n\t\t\tthis._ofragments = new Fragments(this);\n\t\t\t// *************** Srini Code to display fragments ends *****************\n\n\t\t\t// *************** Srini Code to display difference begins ***************\n\t\t\tthis._odifference = new Difference(this);\n\t\t\t// *************** Srini Code to display difference ends *****************\n\t\t\tthis._oGssCreateElements = new CreateElements(this);\n\t\t\t// set the device model\n\t\t\t//this._oComponent.setModel(new JSONModel(Device), \"device\");\n\t\t\t//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\t\t\t// set the globalProperties model\n\t\t\tthis._oGlobalModel = new JSONModel({\n\t\t\t\tapplication: this,\n\t\t\t\tfragments: this._ofragments,\n\t\t\t\tdifference: this._odifference,\n\t\t\t\tgsswm: this._oGssWarehouseManage,\n\t\t\t\tgsscb: this._oGssCreateElements,\n\t\t\t\tbreadcrumbs: this._ocreateBreadCrumbs,\n\t\t\t\tmenu: this._omenuBinding,\n\t\t\t\tcurrentScreen: \"LM999\",\n\t\t\t\tparentScreen: \"\",\n\t\t\t\tcurrentModel: \"\",\n\t\t\t\tcontrolId: \"\",\n\t\t\t\tmessage: \"\",\n\t\t\t\tmessageType: \"\",\n\t\t\t\tisOdataLoading: false,\n\t\t\t\tisMultiSelect: false,\n\t\t\t\tisMetaDataLoading: true,\n\t\t\t\tisBusyApproving: false,\n\t\t\t\tmetaDataLoaded: false,\n\t\t\t\tisSwipeRunning: false,\n\t\t\t\tmasterImmediateBusy: true,\n\t\t\t\tdetailImmediateBusy: true,\n\t\t\t\tcurrentQueue: \"\",\n\t\t\t\tcurrentLgnum: \"\",\n\t\t\t\tcurrentNltyp: \"\",\n\t\t\t\tcurrentDelNo: \"\",\n\t\t\t\tcurrentHuVal: \"\",\n\t\t\t\tcurrentShip:\"\",\n\t\t\t\tlastModelSetName: \"\",\n\t\t\t\tMenuData: \"\",\n\t\t\t\tMainView: \"\",\n\t\t\t\tSecondView: \"\",\n\t\t\t\tlastSubModelSetName: \"\",\n\t\t\t\tpack: \"\",\n\t\t\t\tshipInd: \"\",\n\t\t\t\tindiTO: \"\",\n\t\t\t\tviewId: \"\",\n\t\t\t\tuiInd: \"\",\n\t\t\t\tviewCid: \"\",\n\t\t\t\tload:\"\"\n\t\t\t});\n\t\t\tthis._oGlobalModel.setDefaultBindingMode(BindingMode.TwoWay);\n\t\t\tthis._oComponent.setModel(this._oGlobalModel, \"globalProperties\");\n\n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\t\t\t//  to Add the Fragment Controller Model \n\t\t\t//*******************************************************************************************\n\t\t\t// set the Fragment Properties Model\n\t\t\tthis._oFragmentControllerModel = new JSONModel({\n\t\t\t\tputAway: \"gss.newWarehouseManage_R1.controller.putAway\",\n\t\t\t\tmainMenu: \"gss.newWarehouseManage_R1.view.fragments.rfMenu\",\n\t\t\t\tnewBin: \"gss.newWarehouseManage_R1.view.fragments.newBin\",\n\t\t\t\tdifference: \"gss.newWarehouseManage_R1.view.fragments.difference\",\n\t\t\t\tconfirmation: \"gss.newWarehouseManage_R1.view.fragments.confirmation\",\n\t\t\t\taddHu: \"gss.newWarehouseManage_R1.view.fragments.addHU\",\n\t\t\t\taddMaterial: \"gss.newWarehouseManage_R1.view.fragments.addMaterial\",\n\t\t\t\tmsgPopOver: \"gss.newWarehouseManage_R1.view.fragments.MessagePopover\",\n\t\t\t\tsplitPop:\"gss.newWarehouseManage_R1.view.fragments.split\"\n\n\t\t\t});\n\n\t\t\tthis._oFragmentControllerModel.setDefaultBindingMode(BindingMode.TwoWay);\n\t\t\tthis._oComponent.setModel(this._oFragmentControllerModel, \"fragmentControllerProperties\");\n\t\t\t//*******************************************************************************************\n\t\t\t// End of Code Sabari to Add the Fragment Controller Model \n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\t\t\t//*******************************************************************************************\n\t\t\t// Warehouse configuration model\n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\t\t\tthis._oMenuTransactionModelNew = new JSONModel(jQuery.sap.getModulePath(\"gss.newWarehouseManage_R1\",\"/lib/WMConfiguration.json\"));\n\t\t\t\n\t\t\tthis._oComponent.setModel(this._oMenuTransactionModelNew, \"MenuTransactionProperties\");\n\t\t\t\n\t\t\t//*******************************************************************************************\n\t\t\t// Process configuration model\n\t\t\t//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n            \n\t\t\tthis._oProcessControlModel = new JSONModel(jQuery.sap.getModulePath(\"gss.newWarehouseManage_R1\",\"/lib/ProcessConfiguration.json\"));\n\t\t\tthis._oComponent.setModel(this._oProcessControlModel, \"ProcessControlProperties\");\n\n\t\t\t// delegate error handling\n\t\t\terrorHandling.register(this, this._oComponent, \"\");\n\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Route handlers (attached during initialization)             */\n\t\t/* =========================================================== */\n\n\t\t/* =========================================================== */\n\t\t/* Master handling                                             */\n\t\t/* =========================================================== */\n\n\t\t// Handling of back functionality.\n\t\t// bPreferHistory: Information whether back should be realized via browser-history if browser history is available.\n\t\t//                 This should be true with the exception of those views which do not have an own url (like the summary page in our example)\n\t\t// bFromDetailScreen: Information whether back is called from master or from detail screen. This is used to decide where to go when history\n\t\t// cannot be used. The 'merged header' calls the navButtonPress-handler of the sap.m.semantic.MasterPage when the master list is shown in full\n\t\t// screen mode (happens only on phones). Otherwise the the navButtonPress-handler of the sap.m.semantic.DetailPage is called:\n\t\t// When coming from a detail screen on a phone go to master, when coming from master or from the detail but not on a phone, go back to previous app/shell.\n\t\tnavBack: function(bPreferHistory, bFromDetailScreen) {\n\t\t\t// this._oGlobalModel.setProperty(\"/currentPOId\", null);\n\t\t\tif (bPreferHistory) {\n\t\t\t\tvar oHistory = History.getInstance(),\n\t\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bFromDetailScreen && sap.ui.Device.system.phone) {\n\t\t\t\tthis._oRootView.getController().backMaster();\n\t\t\t\tthis._oRouter.navTo(\"Main\", {}, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// var oCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\t\t\t// oCrossAppNavigator.backToPreviousApp();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Empty view handling                                         */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Show view EmptyPage in the detail area\n\t\t * @public\n\t\t * @param {string} sReason the reason for showing the empty view. The following reasons can be used:\n\t\t * - bypassed: invalid url hash\n\t\t * - noObjects: master list is empty (and attribute currentPOId in the global model is faulty)\n\t\t * - objectNotFound: attribute currentPOId in the global model is truthy but does not specify a valid PO\n\t\t */\n\t\tshowEmptyView: function(sReason) {\n\t\t\tvar oEmptyPageSettings = {\n\t\t\t\ttitle: this._oResourceBundle.getText(this._getEmptyTitleKey(sReason)),\n\t\t\t\ttext: this._getEmptyText(sReason),\n\t\t\t\ticon: sReason === \"bypassed\" ? \"sap-icon://document\" : null,\n\t\t\t\tdescription: \"\"\n\t\t\t};\n\t\t\tthis._oGlobalModel.setProperty(\"/emptyPage\", oEmptyPageSettings);\n\t\t\tthis._oGlobalModel.setProperty(\"/isBusyApproving\", false);\n\t\t\tthis._oGlobalModel.setProperty(\"/detailImmediateBusy\", false);\n\t\t\t//this._oRouter.getTargets().display(\"empty\");\n\t\t},\n\n\t\t_getEmptyTitleKey: function(sReason) {\n\t\t\tswitch (sReason) {\n\t\t\t\tcase \"bypassed\":\n\t\t\t\t\treturn \"notFoundTitle\";\n\t\t\t\tcase \"noObjects\":\n\t\t\t\t\treturn \"masterTitle\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"detailTitle\";\n\t\t\t}\n\t\t},\n\n\t\t_getEmptyText: function(sReason) {\n\t\t\t\tif (sReason === \"noObjects\") {\n\t\t\t\t\treturn this._oGlobalModel.getProperty(\"/listNoDataText\");\n\t\t\t\t}\n\t\t\t\treturn this._oResourceBundle.getText(sReason === \"bypassed\" ? \"notFoundText\" : \"noObjectFoundText\");\n\t\t\t}\n\t\t\t/* =========================================================== */\n\t\t\t/* OData metadata handling                                     */\n\t\t\t/* =========================================================== */\n\n\t});\n});",
		"gss/newWarehouseManage_R1/controller/putAway.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, formatter, JSONModel, MessageBox, MessageToast, utilities, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.putAway\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.setPageTitle(); // to set page title for the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) { // to get parent screen properties from Global model\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentDelNo\")); // to set input value to global model property\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput(); // odata function call to get backend response\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\r\n\t\t// ==========================================\r\n\t\t// method call to bind fragment to that view\r\n\t\t// ==========================================\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId(); // to get the id of the view\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId); // to set the view id to the corresponding global model property\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"newBin\"); // to load fragments\r\n\t\t\tthis.fragmentNewBinLoaded = sap.ui.xmlfragment(viewId + \"newBin\", loadFragment, this); // to set id to the fragment\r\n\t\t\tthis.getView().addDependent(this.fragmentNewBinLoaded); // to add the loaded fragment to the view\r\n\r\n\t\t\tvar callFragment = this.gssFragmentsFunction().loadFragment(this, \"difference\"); // to load fragments\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"diff\", callFragment, this); // to set id to the fragment\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded); // to add the loaded fragment to the view\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // to get input field value \r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getMaterial(this, _inputValue); // odata function call with input field to get response from backend\r\n\t\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\t\tthis.getView().byId(\"toTable\").setVisible(true);\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t\r\n\t\t// ====================================\r\n\t\t// method to display response messages\r\n\t\t// ====================================\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t// =================================================================\r\n\t\t// method to confirm materials from table and display response text\r\n\t\t// =================================================================\r\n\t\tputAwayConfirm: function() {\r\n\t\t\tvar tableRowSelectedItems = utilities.selectedItems(this, \"toTable\"); // function call to get selected items from table\r\n\t\t\tvar whenOdataCall = this.callOdataService().confirmItems(this, tableRowSelectedItems, \"toTable\"); // function call to confirm the selected items\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\tMessageToast.show(this.geti18n(this.getUpdateToast())); // to display success message from odata response\r\n\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\t\r\n\t\t// ===================================================================\r\n\t\t// method to change difference quantities for selected items in table\r\n\t\t// ===================================================================\r\n\t\tonHandleDifference: function() {\r\n\t\t\tvar items = utilities.selectedItems(this, \"toTable\"); // function call to get selected items from table\r\n\t\t\tif (items.length === 1) {\r\n\t\t\t\tvar objects = utilities.getObjects(this), // function call to get object details\r\n\t\t\t\t\toItem = objects.getProperty(); // function call to get properties of the objects\r\n\t\t\t\tif (oItem.Tapos !== this._item) {\r\n\t\t\t\t\tvar newItemSelected = \"X\";\r\n\t\t\t\t\tthis._item = oItem.Tapos;\r\n\t\t\t\t}\r\n\t\t\t\tvar oItemList = this.gssDifferenceFunction().setDiffModel(oItem, this.fragmentLoaded); // function to set data to difference fragment\r\n\t\t\t\tvar oModel = new JSONModel(oItemList);\r\n\t\t\t\tthis.fragmentLoaded.setModel(oModel, \"handleDiff\"); // set model to loaded fragment\r\n\t\t\t\tthis.fragmentLoaded.open(); // to open initialised fragment\r\n\t\t\t} else if (items.length === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastItemSel\"));\r\n\t\t\t} else if (items.length > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastSelMat\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ======================================================\r\n\t\t// method to calculate difference values in the fragment\r\n\t\t// ======================================================\r\n\t\tonHandleActual: function(oEvent) {\r\n\t\t\tvar actualVal = oEvent.getParameter(\"newValue\"); // get parameter details of the selected row\r\n\t\t\tvar objects = utilities.getObjects(this); // function call to get object details \r\n\t\t\tthis.modelObjects = objects.getProperty(); // function call to get properties of the objects\r\n\t\t\tthis.gssDifferenceFunction().diffCalculation(actualVal, this.modelObjects.DestTarga, this.fragmentLoaded, this.getView().getId() + \"diff\"); // function call to calculate data for difference fragment\r\n\t\t},\r\n\r\n\t\t// ===================================================================\r\n\t\t// method to confirm the differernce value and update values to table\r\n\t\t// ===================================================================\r\n\t\tonDiffConfirm: function() {\r\n\t\t\tvar destActa = this.fragmentLoaded.getModel(\"handleDiff\").getData().destActa, // get particular field property from fragment model\r\n\t\t\t\tdestDifa = this.fragmentLoaded.getModel(\"handleDiff\").getData().destDifa, // get particular field property from fragment model\r\n\t\t\t\tdestTarget = this.fragmentLoaded.getModel(\"handleDiff\").getData().destTarget; // get particular field property from fragment model\r\n\t\t\tthis.destDifa = \"X\";\r\n\t\t\tvar sValInd = \"DestTarga\";\r\n\t\t\tthis._updateTable(destActa, destDifa, destTarget, sValInd); //function call to display updated value to table\r\n\t\t},\r\n\r\n\t\t// ===============================================\r\n\t\t// method to close the opened difference fragment\r\n\t\t// ===============================================\r\n\t\tonDiffCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // function call to close the loaded fragment\r\n\t\t},\r\n\r\n\t\t// ===============================================================\r\n\t\t// method to update the calculated difference values to the table\r\n\t\t// ===============================================================\r\n\t\t_updateTable: function(destActa, destDifa, destTarget, sProperty, sValue) {\r\n\t\t\tvar aItems = this.getView().byId(\"toTable\").getModel(\"materialList\").getData().aItems; // to get line item details from model\r\n\t\t\taItems.forEach(function(oLineData) { // looping through line item\r\n\t\t\t\tif (oLineData.Tapos === this.modelObjects.Tapos && // line item value comparison\r\n\t\t\t\t\toLineData.Tanum === this.modelObjects.Tanum) { // line item value comparison\r\n\t\t\t\t\tif (sProperty === \"DestTarga\") {\r\n\t\t\t\t\t\tvar destActual = parseFloat(destActa); //initialising value to variable\r\n\t\t\t\t\t\tvar destActualStr = destActual.toFixed(3); // value with round off to 3 decimal places\r\n\t\t\t\t\t\toLineData.DestActa = destActualStr.toString(); // convert value to string\r\n\t\t\t\t\t\toLineData.DestQuantity = destActa;\r\n\t\t\t\t\t\toLineData.DestDifa = destDifa.toString(); // convert value to string\r\n\t\t\t\t\t\toLineData.DestTarga = destTarget;\r\n\t\t\t\t\t} else if (sProperty === \"newBin\") {\r\n\t\t\t\t\t\toLineData.Nlpla = sValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(this));\r\n\t\t\tvar aData = this.getView().byId(\"toTable\").getModel(\"materialList\").getData(); // to get data from model bound to table\r\n\t\t\taData.aItems = aItems;\r\n\t\t\tthis.getView().byId(\"toTable\").getModel(\"materialList\").setData(aData); // binding new data to the model & table control\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // close the loaded fragment\r\n\t\t},\r\n\r\n\t\t// ========================================================\r\n\t\t// method to provide new bin values for stocking materials\r\n\t\t// ========================================================\r\n\t\tonHandleNewBin: function() {\r\n\t\t\tvar objects = utilities.getObjects(this); // function call to get objects \r\n\t\t\tthis.modelObjects = objects.getProperty(); // function call to get property details from object\r\n\t\t\tvar DestBinChg = this.modelObjects.DestBinChg; // get specific field value from model objects\r\n\t\t\tif (this.getView().byId(\"toTable\").getSelectedItems().length === 1 && DestBinChg === \"1\") {\r\n\t\t\t\tthis.getModel(\"globalProperties\").setProperty(\"/currentNltyp\", this.modelObjects.Nltyp); // set property to global model properties\r\n\t\t\t\tthis.Nltyp = this.modelObjects.Nltyp;\r\n\t\t\t\tthis.getModel(\"globalProperties\").setProperty(\"/currentLgnum\", this.modelObjects.Lgnum); // set property to global model properties\r\n\t\t\t\tvar Lgnum = this.modelObjects.Lgnum;\r\n\t\t\t\t//Fragment code is Move to onInit function\r\n\t\t\t\tthis.fragmentNewBinLoaded.open();\r\n\t\t\t\tvar newBinData = {\r\n\t\t\t\t\tmatDesc: this.modelObjects.Maktx,\r\n\t\t\t\t\tnewBin: \"\"\r\n\t\t\t\t};\r\n\t\t\t\tvar oModel = new JSONModel();\r\n\t\t\t\toModel.setData(newBinData); // set new data to model\r\n\t\t\t\tthis.fragmentNewBinLoaded.setModel(oModel, \"Bin\"); // set model to loaded fragment\r\n\t\t\t} else if (this.getView().byId(\"toTable\").getSelectedItems().length === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastItemSel\"));\r\n\t\t\t} else if (this.getView().byId(\"toTable\").getSelectedItems().length > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastSelTar\"));\r\n\t\t\t} else {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastSelNp\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// =================================================\r\n\t\t// method to check whether given bin value is valid\r\n\t\t// =================================================\r\n\t\tonHandleCheck: function() {\r\n\t\t\tvar binValue = sap.ui.core.Fragment.byId(this.getView().getId() + \"newBin\", \"newBinValue\").getValue(), //To get the New Bin Details //\r\n\t\t\t\toGlobalModel = this.getModel(\"globalProperties\"); // function call to get global model properties\r\n\t\t\toGlobalModel.setProperty(\"/currentNltyp\", this.Nltyp); \r\n\t\t\tvar oWhenCallReadIsDone;\r\n\t\t\tvar sParentTcode = this.getGlobalModel().getProperty(\"/currentScreen\");\r\n\t\t\tif (binValue) {\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentScreen\", \"LM111\");\r\n\t\t\t\toWhenCallReadIsDone = this.callOdataService().checkNewBin(this, binValue); // odata function call to check new bin value\r\n\t\t\t\toWhenCallReadIsDone.done(function() {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t\tif (oGlobalModel.getProperty(\"/messageType\") === \"S\") {\r\n\t\t\t\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"newBin\", \"newBinConfirm\").setEnabled(true); //Response Message Text //\r\n\t\t\t\t\t\tvar errorMessage = oGlobalModel.getProperty(\"/message\"); //Message Test //\r\n\t\t\t\t\t\tMessageBox.success( //MessageBox// \r\n\t\t\t\t\t\t\terrorMessage + \".\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentScreen\", sParentTcode);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t} else {\r\n\t\t\t\tMessageBox.information(this.geti18n(\"toastBinEmp\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// =========================================================\r\n\t\t// method to confirm the new bin value and display in table\r\n\t\t// =========================================================\r\n\t\tonNewBinConfirm: function() {\r\n\t\t\tvar newDbin = sap.ui.core.Fragment.byId(this.getView().getId() + \"newBin\", \"newBinValue\").getValue(); // get field value from fragment\r\n\t\t\tthis.oNewBin = \"\";\r\n\t\t\tif (this.oldBin === \"\") {\r\n\t\t\t\tthis.oldBin = this.modelObjects.Nlpla;\r\n\t\t\t} else if (this.oldBin !== newDbin) {\r\n\t\t\t\tthis.oNewBin = \"X\";\r\n\t\t\t}\r\n\t\t\tthis.modelObjects.Nlpla = newDbin;\r\n\t\t\tvar sValInd = \"newBin\";\r\n\t\t\tvar destActa = \"\",\r\n\t\t\t\tdestDifa = \"\",\r\n\t\t\t\tdestTarget = \"\";\r\n\t\t\tthis._updateTable(destActa, destDifa, destTarget, sValInd, newDbin); // to pass parameters to update table data\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentNewBinLoaded); // function call to close the loaded fragment\r\n\t\t},\r\n\t\t\r\n\t\t// ===================================================\r\n\t\t// method to get selected item details from the table\r\n\t\t// ===================================================\r\n\t\t/*onHandleSelection: function() {\r\n\t\t\tthis.getModel(\"globalProperties\").setProperty(\"/controlId\", \"toTable\");\r\n\t\t\tvar objects = utilities.getObjects(this); // function call to get object data from table\r\n\t\t},*/\r\n\r\n\t\t// ============================================\r\n\t\t// method to clode the opened new bin fragment\r\n\t\t// ============================================\r\n\t\tonNewBinCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentNewBinLoaded); // function call to close fragment\r\n\t\t},\r\n\r\n\t\t// ============================================================\r\n\t\t// method to destroy all the fragments initialised in the view\r\n\t\t// ============================================================\r\n\t\tonExit: function() {\r\n\t\t\tif (this.fragmentLoaded) {\r\n\t\t\t\tthis.fragmentLoaded.destroy(true); // function call to destroy the fragment loaded in the view\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/gidelivery.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n\t'sap/m/MessagePopover',\r\n\t'sap/m/MessageItem',\r\n\t'sap/ui/model/json/JSONModel'\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities, MessagePopover, MessageItem, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.gidelivery\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"giDel\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\r\n\t\t\tvar loadSplitPopFragment = this.gssFragmentsFunction().loadFragment(this, \"splitPop\");\r\n\t\t\tthis.splitFragmentLoaded = sap.ui.xmlfragment(viewId + \"split\", loadSplitPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.splitFragmentLoaded);\r\n\r\n\t\t},\r\n\r\n\t\tiGetInput: function() {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"GIDForm\").setBusy(true);\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().grKeyFields(this, _inputValue);\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", _inputValue);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"true\");\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource()); //opens fragment\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when load button pressed*/\r\n\t\t/*navigates to Load page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"loadDelivery\", this); // navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this); //createElements: function in BaseController to access CreateElements.js \r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items button pressed*/\r\n\t\t/*navigates to Items page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grDelItems\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items Ship pressed*/\r\n\t\t/*navigates to Shipment page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleShip: function(event) {\r\n\t\t\tutilities.navigateChild(\"giShip\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GI Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO(); //Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost(); //Performs GI Post\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel(); //closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\")); // To set text to confirmaton fragment\r\n\t\t},\r\n\t\tonHandleSplit: function() {\r\n\t\t\tthis.splitFragmentLoaded.open();\r\n\t\t},\r\n\r\n\t\tonSaveSplit: function() {\r\n\t\t\tvar splitHu = sap.ui.core.Fragment.byId(this.getView().getId() + \"split\", \"splitHU\").getValue();\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.splitFragmentLoaded);\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleSplit(this, splitHu); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\tonCancelSplit: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.splitFragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes the fragment\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleDelTO(this, \"GIDForm\", \"delList\", \"T\"); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"GItoInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Picking page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"picking\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGI: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\")); // To set text to confirmaton fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes the fragment\r\n\t\t\tthis.callOdataService().handleDelTO(this, \"tableGIS\", \"delList\", \"C\"); //function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/errorHandling.js": "// This class provides a static error-handling facility. Its only method (register) is called during application startup.\n// Suitable error handlers are attached to the OData model of this app.\n\nsap.ui.define([\n\t\t\"sap/ui/Device\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"gss/newWarehouseManage_R1/model/utilities\",\n\t\t\"sap/m/MessageToast\"\n\t], function(Device, MessageBox, utilities,MessageToast) {\n\t\"use strict\";\n\n\tfunction fnShowMetadataError(oApplication, oParams, oErrorTexts, oDisplayState) {\n\t\toDisplayState.bMessageOpen = true;\n\t\tMessageBox.error(\n\t\t\toErrorTexts.sErrorText, {\n\t\t\t\ttitle: oErrorTexts.sErrorTitle,\n\t\t\t\tdetails: oParams.response,\n\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\toDisplayState.bMessageOpen = false;\n\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\toApplication.whenMetadataIsFinished();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t}\n\t\t);\n\t}\n\n\tfunction fnShowServiceError(oParams, oErrorTexts, oDisplayState) {\n\t\tif (!oDisplayState.bMessageOpen) {\n\t\t\toDisplayState.bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\toErrorTexts.sErrorText, {\n\t\t\t\t\ttitle: oErrorTexts.sErrorTitle,\n\t\t\t\t\tdetails: oParams.response,\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\toDisplayState.bMessageOpen = false;\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tfunction fnShowServiceMessage(sDetails, oDisplayState) {\n\t\tif (!oDisplayState.bMessageOpen) {\n\t\t\toDisplayState.bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tsDetails, {\n\t\t\t\t\ttitle: \"Information\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\toDisplayState.bMessageOpen = false;\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\n\treturn {\n\t\tregister: function(oApplication, oComponent) {\n\t\t\tvar oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\toModel = oComponent.getModel(),\n\t\t\t\toGlobalModel = oComponent.getModel(\"globalProperties\"),\n\t\t\t\toErrorTexts = {\n\t\t\t\t\tsErrorText: oResourceBundle.getText(\"errorText\"),\n\t\t\t\t\tsErrorTitle: oResourceBundle.getText(\"errorTitle\")\n\t\t\t\t},\n\t\t\t\toDisplayState = {\n\t\t\t\t\tbMessageOpen: false\n\t\t\t\t};\n\t\t\toModel.attachEvent(\"metadataFailed\", function(oEvent) {\n\t\t\t\toGlobalModel.setProperty(\"/listNoDataText\", oErrorTexts.sErrorText);\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\tif (!Device.system.phone) {\n\t\t\t\t\toApplication.showEmptyView(\"noObjects\");\n\t\t\t\t}\n\t\t\t\tfnShowMetadataError(oApplication, oParams, oErrorTexts, oDisplayState);\n\t\t\t});\n\n\t\t\toModel.attachEvent(\"requestFailed\", function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though.\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\n\t\t\t\t\t\"Cannot POST\") === 0) || oParams.response.statusCode === \"404\") {\n\t\t\t\t\tfnShowServiceError(oParams, oErrorTexts, oDisplayState);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\toModel.attachEvent(\"dataReceived\", function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\tfnShowServiceError(oParams, oErrorTexts, oDisplayState);\n\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\t\tvar sMessage = oGlobalModel.getProperty(\"/message\"),\n\t\t\t\t    sMessageType = oGlobalModel.getProperty(\"/messageType\");\n\t\t\t\tif (sMessageType === \"E\" || sMessageType === \"W\") {\n\t\t\t\t\tfnShowServiceMessage(sMessage,oDisplayState);\n\t\t\t\t} else if(sMessageType === \"S\"){\n\t\t\t\t\tMessageToast.show(oGlobalModel.getProperty(\"/message\"));\n\t\t\t\t}\n\n\t\t\t\n\t\t\n\t\t}\n\t};\n});",
		"gss/newWarehouseManage_R1/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn Object.extend(\"gss.newWarehouseManage_R1.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias com.test.sap.putaway.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\t// this._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = \"test\";//this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\t// this._oModel.attachMetadataFailed(function (oEvent) {\n\t\t\t\t// \tvar oParams = oEvent.getParameters();\n\t\t\t\t// \tthis._showServiceError(oParams.response);\n\t\t\t\t// }, this);\n\n\t\t\t\t// this._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t// \tvar oParams = oEvent.getParameters();\n\t\t\t\t// \t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// \t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// \t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t// \tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t// \t\tthis._showServiceError(oParams.response);\n\t\t\t\t// \t}\n\t\t\t\t// }, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\ttest: function(sDetails){\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose: function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\t\n\t\t\t},\n\t\t\t\n\t\t\tshowServiceError: function(sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose: function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n);",
		"gss/newWarehouseManage_R1/controller/picking.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n\r\n], function(Controller, BaseController, formatter,MessageToast, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.picking\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.picking\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.setPageTitle(); // to set page title for the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) { // to get parent screen properties from Global model\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentDelNo\")); // to set input value to global model property\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput(); // odata function call to get backend response\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\t\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // to get input field value \r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getMaterial(this, _inputValue); // odata function call with input field to get response from backend\r\n\t\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t\tthis.getView().byId(\"toTable\").setVisible(true);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t// ====================================\r\n\t\t// method to display response messages\r\n\t\t// ====================================\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t// =================================================================\r\n\t\t// method to confirm materials from table and display response text\r\n\t\t// =================================================================\r\n\t\tpickingConfirm: function() {\r\n\t\t\tvar selItems = utilities.selectedItems(this, \"toTable\");\r\n\t\t\tvar whenOdataCall = this.callOdataService().confirmItems(this, selItems, \"toTable\"); // odata function call to confirm selected items from table\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\tMessageToast.show(this.geti18n(this.getUpdateToast())); // Message toast code to display success message from odata response\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ===================================================\r\n\t\t// method to destroy the loaded fragment for the view \r\n\t\t// ===================================================\r\n\t\tonExit: function() {\r\n\t\t\tif (this.fragmentLoaded) {\r\n\t\t\t\tthis.fragmentLoaded.destroy(true); // to destroy the fragments loaded for the view\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/giShipment.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n\r\n], function(Controller, BaseController, formatter, JSONModel, MessageBox, MessageToast, utilities, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.giShipment\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadSplitPopFragment = this.gssFragmentsFunction().loadFragment(this, \"splitPop\");\r\n\t\t\tthis.splitFragmentLoaded = sap.ui.xmlfragment(viewId + \"split\", loadSplitPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.splitFragmentLoaded);\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"giShip\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when an Item is selected in a table*/\r\n\t\t/*Checks the Indicators for the selected item */\r\n\t\t/* =========================================================== */\r\n\t\tonSingleSelectGI: function(oEvent) {\r\n\t\t\tvar len = this.getView().byId(\"tableGIS\").getSelectedItems().length; //length of the selected items\r\n\t\t\tif (len === 1) { //checks if only one item is selected\r\n\t\t\t\tvar vbeln = this.getView().byId(\"tableGIS\").getSelectedItem().getBindingContext(\"delList\").getObject().Vbeln; //get Delivery no of the selected item\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", vbeln);\r\n\t\t\t\tvar obj = this.getView().byId(\"tableGIS\").getSelectedItem().getBindingContext(\"delList\").getObject();\r\n\t\t\t\tthis.checkInd(obj, \"false\"); //function in BaseController to check Indicators\r\n\t\t\t} else if (len > 1) { //checks if more than one item is selected\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t} else if (len === 0) { //checks if no item is selected\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"tableGIS\").setBusy(true);\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\t\tutilities.checkVisible(this);\r\n\t\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"\");\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentShip\", _inputValue);\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource()); //opens fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Load button pressed*/\r\n\t\t/*navigates to Load page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"loadDelivery\", this); // navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Items button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grShipItems\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this); //createElements: function in BaseController to access CreateElements.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items Ship pressed*/\r\n\t\t/*navigates to Shipment page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleShip: function(event) {\r\n\t\t\tutilities.navigateChild(\"giShip\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GI Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO(); //Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost(); //Performs GI Post\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel(); //closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));\r\n\t\t},\r\n\t\tonHandleSplit:function(){\r\n\t\t\tthis.splitFragmentLoaded.open();\r\n\t\t},\r\n\t\t\r\n\t\tonSaveSplit:function(){\r\n\t\tvar splitHu =\tsap.ui.core.Fragment.byId(this.getView().getId() + \"split\", \"splitHU\").getValue();\r\n\t\tvar whenOdataCall = this.callOdataService().handleSplit(this,splitHu); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\t\t\t\t\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\tonCancelSplit:function(){\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.splitFragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleShipTO(this, \"tableGIS\", \"delList\", \"T\"); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() {//Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"GItoInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Picking page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"picking\", this);// navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGI: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\"));// To set text to confirmaton fragment\r\n\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"tableGIS\", \"delList\", \"C\");//function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t},\r\n\t\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/giStagingArea.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.giStagingArea\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"giBySa\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\r\n\t\t\tvar loadSplitPopFragment = this.gssFragmentsFunction().loadFragment(this, \"splitPop\");\r\n\t\t\tthis.splitFragmentLoaded = sap.ui.xmlfragment(viewId + \"split\", loadSplitPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.splitFragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when an Item is selected in a table*/\r\n\t\t/*Checks the Indicators for the selected item */\r\n\t\t/* =========================================================== */\r\n\t\tonSingleSelectGISA: function(oEvent) {\r\n\t\t\tvar len = this.getView().byId(\"tableGISA\").getSelectedItems().length;\r\n\t\t\tif (len === 1) {\r\n\t\t\t\tvar vbeln = this.getView().byId(\"tableGISA\").getSelectedItem().getBindingContext(\"delList\").getObject().Vbeln;\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", vbeln);\r\n\t\t\t\tvar obj = this.getView().byId(\"tableGISA\").getSelectedItem().getBindingContext(\"delList\").getObject();\r\n\t\t\t\tthis.checkInd(obj, \"false\");\r\n\t\t\t} else if (len > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t} else if (len === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue().toUpperCase();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"tableGISA\").setBusy(true);\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\t\tutilities.checkVisible(this);\r\n\t\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"\");\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource()); //opens fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Load button pressed*/\r\n\t\t/*navigates to Load page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"loadDelivery\", this); // navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Items button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grShipItems\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Ship button pressed*/\r\n\t\t/*navigates to Shipment page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleShip: function(event) {\r\n\t\t\tutilities.navigateChild(\"giShip\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GI Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO(); //Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost(); //Performs GI Post\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel(); //closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));\r\n\t\t},\r\n\t\tonHandleSplit: function() {\r\n\t\t\tthis.splitFragmentLoaded.open();\r\n\t\t},\r\n\r\n\t\tonSaveSplit: function() {\r\n\t\t\tvar splitHu = sap.ui.core.Fragment.byId(this.getView().getId() + \"split\", \"splitHU\").getValue();\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleSplit(this, splitHu); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\tonCancelSplit: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.splitFragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Picking page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"picking\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes the fragment\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleShipTO(this, \"tableGISA\", \"delList\", \"T\"); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"GItoInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GI*/\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonPostGI: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\")); // To set text to confirmaton fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes the fragment\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"tableGISA\", \"delList\", \"C\"); //function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/giHu.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.giHu\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"giByHu\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadSplitPopFragment = this.gssFragmentsFunction().loadFragment(this, \"splitPop\");\r\n\t\t\tthis.splitFragmentLoaded = sap.ui.xmlfragment(viewId + \"split\", loadSplitPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.splitFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.byId(\"inputValue\").getValue();\r\n\t\t\tvar whenOdataCall;\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"GIDForm\").setBusy(true);\r\n\t\t\t\twhenOdataCall = this.callOdataService().grKeyFields(this, _inputValue);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"true\");\r\n\t\t\t\t\t\tvar _delVal = this.byId(\"giDelField\").getText();\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", _delVal);\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentHuVal\", _inputValue);\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource()); //opens fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Load button pressed*/\r\n\t\t/*navigates to Load page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"loadDelivery\", this); // navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this); //createElements: function in BaseController to access CreateElements.js \r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items button pressed*/\r\n\t\t/*navigates to Items page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\r\n\t\t\tutilities.navigateChild(\"grDelItems\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items Ship pressed*/\r\n\t\t/*navigates to Shipment page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleShip: function(event) {\r\n\t\t\tutilities.navigateChild(\"giShip\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GI Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO(); //Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost(); //Performs GI Post\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel(); //closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment(); //To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open(); //opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\")); // To set text to confirmaton fragment\r\n\t\t},\r\n\t\tonHandleSplit:function(){\r\n\t\t\tthis.splitFragmentLoaded.open();\r\n\t\t},\r\n\t\t\r\n\t\tonSaveSplit:function(){\r\n\t\tvar splitHu =\tsap.ui.core.Fragment.byId(this.getView().getId() + \"split\", \"splitHU\").getValue();\r\n\t\tvar whenOdataCall = this.callOdataService().handleSplit(this,splitHu); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\t\t\t\t\r\n\t\t\t}.bind(this));\r\n\t\t\r\n\t\t\t\r\n\t\t},\r\n\t\tonCancelSplit:function(){\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.splitFragmentLoaded); //gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t\t\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes the fragment\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleDelTO(this, \"tableGIS\", \"delList\", \"T\"); //function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() { //Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"GItoInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Picking page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"picking\", this); // navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGI: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\"));// To set text to confirmaton fragment\r\n\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Post GI*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tthis.callOdataService().handleDelTO(this, \"tableGIS\", \"delList\", \"C\");//function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/BaseController.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\n\t\"sap/ui/model/resource/ResourceModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"gss/newWarehouseManage_R1/model/utilities\"\n], function(Controller, ResourceModel, History, utilities) {\n\n\t\"use strict\";\n\n\treturn Controller.extend(\"gss.newWarehouseManage_R1.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\t// onInit: function(){\n\t\t// \tthis.setModel(models.toList(), \"rfModel\");\t\t\n\t\t// },\t\t\t\t\t\t \n\t\tgetRouter: function() {\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name.\n\t\t * @public\n\t\t * @param {string} [sName] the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Getter for the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method to get the global model containing the global state of the app.\n\t\t * @returns {object} the global Propery model\n\t\t */\n\t\tgetGlobalModel: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"globalProperties\");\n\t\t},\n\t\t/**\n\t\t * Convenience method to get the fragment model containing the fragments used in the app.\n\t\t * @returns {object} the fragment model\n\t\t */\n\n\t\tgetFragmentControllerModel: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"fragmentControllerProperties\");\n\t\t},\n\t\t/**\n\t\t * Convenience method to get the screen model containing the necessary fields and filters for the view.\n\t\t * @returns {object} the screen Propery \n\t\t */\n\n\t\tgetScreenModel: function(currentScreen) {\n\t\t\tvar menuModel = this.getMenuTransactionModel(),\n\t\t\t\t//filterVal = menuModel.getProperty(\"/\" + currentScreen).split(\"@\").pop();\n\t\t\t\tScreenModel = menuModel.getProperty(\"/\" + currentScreen);\n\t\t\treturn ScreenModel;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get the WM configuration model containing the global state of the app.\n\t\t * @returns {object} the configuration Propery model\n\t\t */\n\t\tgetMenuTransactionModel: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"MenuTransactionProperties\");\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to get the process model containing .\n\t\t * @returns {object} the process Propery\n\t\t */\n\t\tgetProcessModel: function(uiIndicator) {\n\t\t\tvar processModel = this.getProsessControlModel(),\n\t\t\t\tcontrolModel = processModel.getProperty(\"/\" + uiIndicator);\n\t\t\treturn controlModel;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get the WM Process Configuration model containing the global state of the app.\n\t\t * @returns {object} the Process configuration Propery model\n\t\t */\n\t\tgetProsessControlModel: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"ProcessControlProperties\");\n\n\t\t},\n\t\t/**\n\t\t * Convenience method for getting Tcode\n\t\t * @returns {object} Tcode for the view\n\t\t */\n\t\tgetCurrentScrn: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/currentScreen\");\n\t\t},\n\t\t/**\n\t\t * Convenience method for getting data binded to the view\n\t\t * * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @returns {object} data from the model\n\t\t */\n\t\tgetModelData: function(oModel) {\n\t\t\treturn this.getView().getModel(oModel).getData();\n\t\t},\n\t\t//*************************************************************************************************\n\t\t//THESE METHODS ARE USED TO ACCESS LIBRARY,MODULES AND MODELS\n\t\t//***************************************************************************************************\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the GssWarehouseManage controller\n\t\t */\n\t\tcallOdataService: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/gsswm\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the CreateElements controller\n\t\t */\n\t\tcreateElements: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/gsscb\");\n\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the application controller\n\t\t */\n\n\t\tgetApplication: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/application\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the CreateBreadCrumbs controller\n\t\t */\n\t\tgssCallBreadcrumbs: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/breadcrumbs\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the fragments controller\n\t\t */\n\t\tgssFragmentsFunction: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/fragments\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the difference controller\n\t\t */\n\t\tgssDifferenceFunction: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/difference\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the menubinding controller\n\t\t */\n\t\tgssCallMenu: function() {\n\t\t\treturn this.getGlobalModel().getProperty(\"/menu\");\n\t\t},\n\t\t/**\n\t\t * Convenience method\n\t\t * @returns {object} the Component \n\t\t */\n\t\tgetComponent: function() {\n\t\t\treturn this.getOwnerComponent();\n\t\t},\n\t\t/**\n\t\t * Convenience method to set i18n model to the view\n\t\t */\n\n\t\tseti18nModel: function(oView) {\n\t\t\t// set i18n model on view\n\t\t\tvar i18nModel = new ResourceModel({\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\n\t\t\t});\n\t\t\toView.setModel(i18nModel, \"i18n\");\n\t\t},\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.getModel(\"worklistView\"));\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Event handler when back button has been clicked\n\t\t \n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tthis.destroyModel(); // destroys the model of the view\n\t\t\tthis.getGlobalModel().setProperty(\"/currentScreen\", this.getGlobalModel().getProperty(\"/parentScreen\")); //sets parentscreen as currentscreen\n\t\t\tthis.getGlobalModel().setProperty(\"/parentScreen\", this.getParentScreen()); //gets parentscreen and sets it to globalmodel\n\t\t\tthis.getApplication().navBack(History, \"\"); //standard back function in application controller\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to destroy model binded to the view\n\t\t */\n\t\tdestroyModel: function() {\n\t\t\tif(this.getView().getModel(this.getModelName())){\n\t\t\tthis.getView().getModel(this.getModelName()).setData(\"\");\n\t\t\t}\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to check indicators for the data\n\t\t * @param {object} data - oData instance\n\t\t * @param {boolean} flag  \n\t\t */\n\t\tcheckInd: function(data, flag) {\n\t\t\tif (flag) {\n\t\t\t\tthis.getGlobalModel().setProperty(\"/indiTO\", data.ToInd);\n\t\t\t\tthis.gssFragmentsFunction().uiIndCheck(this, data.ToInd, data.ToConfirmInd, data.PostInd, flag); //uiIndCheck:to perform ui operations with data\n\t\t\t\t\n\t\t\t\tutilities.bindMessagePop(this, data); //bindMessagePop:set message to messagepopover\n\t\t\t} else {\n\t\t\t\tutilities.bindMessagePop(this, data); //bindMessagePop:set message to messagepopover\n\t\t\t}\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to get controlId of the view\n\t\t */\n\t\tgetControlId: function() {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\treturn viewProperties.uiControl;\n\t\t},\n\t\t/**\n\t\t * Convenience method to set retrieved data to the global property\n\t\t * @param {object} data - oData instance\n\t\t */\n\t\tsetModelData: function(data) {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\tviewProperties.modelData = data;\n\t\t},\n\t\t/**\n\t\t * Convenience method to set retrieved data to the view from global property\n\t\t * @public\n\t\t */\n\t\tgetBackModelData: function() {\n\t\t\tvar viewProperties = this.getViewProperties(),\n\t\t\t\tjsonModel = new sap.ui.model.json.JSONModel(viewProperties.modelData);\n\t\t\tthis.setModel(jsonModel, this.getModelName());\n\t\t},\n\t\t/**\n\t\t * Convenience method to update load status to the data to the view from global property\n\t\t * @public\n\t\t */\n\t\tloadCheck: function() {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\tvar data = viewProperties.modelData;\n\t\t\tif (this.getGlobalModel().getProperty(\"/load\") === \"X\") {\n\t\t\t\tdata.aItems[0].LoadStat = \"X\";\n\t\t\t} else if (this.getGlobalModel().getProperty(\"/load\") === \"Y\") {\n\t\t\t\tdata.aItems[0].LoadStat = \"\";\n\t\t\t}\n\t\t\tthis.setModelData(data); //updated data set to global property of the view \n\t\t\tthis.getGlobalModel().setProperty(\"/load\", \"\"); //empty the global property for the next loadcheck process\n\t\t},\n\t\t/**\n\t\t * Convenience method to update title the view from global property\n\t\t * @public\n\t\t */\n\t\ttitleSet: function() {\n\t\t\tvar title = this.getGlobalModel().getProperty(\"/title\");\n\t\t\tthis.byId(\"title\").setTitle(title);\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to  title the view from global property\n\t\t * @public\n\t\t */\n\t\tsetPageTitle: function() {\n\t\t\tvar titleId = this.getPageTitle(), //to get pagetitle from globalproperty\n\t\t\t\ttitle = this.geti18n(titleId);\n\t\t\tthis.byId(\"title\").setProperty(\"title\", title);\n\t\t\tthis.byId(\"title\").setTitle(title);\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to show the current Queue  \n\t\t * @public\n\t\t */\n\t\thandleUserNamePress: function(event) {\n\t\t\tvar popover = new sap.m.Popover({ // To build popup&nbsp;\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: sap.m.PlacementType.Bottom,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew sap.m.Text({ // To display text field in the popover\n\t\t\t\t\t\ttext: this.geti18n(\"queue\") + \"- \" + this.getGlobalModel().getProperty(\"/currentQueue\"), // To display assigned queue to that user\n\t\t\t\t\t\ttype: sap.m.ButtonType.Transparent // Text type\n\t\t\t\t\t})\n\n\t\t\t\t]\n\t\t\t}).addStyleClass('sapMOTAPopover sapTntToolHeaderPopover'); // CSS style for the popup\n\n\t\t\tpopover.openBy(event.getSource()); // To open popup event\n\t\t},\n\t\t/**\n\t\t * Convenience method to update the toast message in the global property of the view \n\t\t * @public\n\t\t */\n\t\tsetUpdateToast: function(toast) {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\tproperties.toastMsg = toast;\n\t\t},\n\t\t/**\n\t\t * Convenience method to access i18n translated text\n\t\t * @public\n\t\t * * @param {string} key - i18n key\n\t\t */\n\t\tgeti18n: function(key) {\n\t\t\tvar oResourceBundle = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\treturn oResourceBundle.getText(key);\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to get global property\n\t\t * @public\n\t\t * * @param {string} property\n\t\t */\n\t\tgetGlobalProperty: function(property) {\n\t\t\treturn this.getGlobalModel().getProperty(\"/\" + property + \"\");\n\n\t\t},\n\t\t/**\n\t\t * Convenience method to set global property\n\t\t * @public\n\t\t * * @param {string} property\n\t\t * * @param {string} sValue\n\t\t */\n\t\tsetGlobalProperty: function(property, sValue) {\n\t\t\treturn this.getGlobalModel().setProperty(\"/\" + property + \"\", sValue);\n\n\t\t},\n\t\t//**********************************************************************************************\n\t\t//THESE METHODS ARE USED IN ODATASERVICE LIBRARY\n\t\t//**********************************************************************************************\n\t\t/**\n\t\t * Convenience method to get View property\n\t\t * @public\n\t\t * */\n\t\tgetViewProperties: function() {\n\t\t\tvar sCurrentScrnName = this.getCurrentScrn();\n\t\t\treturn this.getScreenModel(sCurrentScrnName);\n\t\t},\n\t\t/**\n\t\t * Convenience method to get entity set property\n\t\t * @public\n\t\t * */\n\t\tgetEntitySet: function() {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\treturn viewProperties.entitySet;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get modelname property\n\t\t * @public\n\t\t * */\n\t\tgetModelName: function() {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\treturn viewProperties.modelName;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get Filterfields property\n\t\t * @public\n\t\t * */\n\t\tgetFilterFields: function() {\n\t\t\tvar viewProperties = this.getViewProperties();\n\t\t\treturn viewProperties.filters;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get keyFields property\n\t\t * @public\n\t\t * */\n\t\tgetKeyFields: function() {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\treturn properties.keyFields;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get ChildScreen property of the view\n\t\t * @public\n\t\t * */\n\t\tgetChildScreens: function() {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\treturn properties.childScreens;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get Parent screen property of the view\n\t\t * @public\n\t\t * */\n\t\tgetParentScreen: function() {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\treturn properties.parentScreen;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get Page Title property of the view\n\t\t * @public\n\t\t * */\n\t\tgetPageTitle: function() {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\treturn properties.pageTitle;\n\t\t},\n\t\t/**\n\t\t * Convenience method to get Update toast property of the view\n\t\t * @public\n\t\t * */\n\t\tgetUpdateToast: function() {\n\t\t\tvar properties = this.getViewProperties();\n\t\t\treturn properties.toastMsg;\n\t\t}\n\n\t});\n\n});",
		"gss/newWarehouseManage_R1/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\tonInit: function() {\n\t\t\tthis.destSu = \"\";\n\t\t},\n\t\t/**\n\t\t * Rounds the number unit value to 2 digits\n\t\t * @public\n\t\t * @param {string} sValue the number string to be rounded\n\t\t * @returns {string} sValue with 2 digits rounded\n\t\t */\n\t\tnumberUnit: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t},\n\t\tremoveColumn: function(destSu) {\n\t\t\tif (destSu) {\n\t\t\t\tthis.getView().byId(\"column3\").setVisible(true);\n\t\t\t\tthis.destSu = \"X\";\n\t\t\t\treturn destSu;\n\t\t\t}\n\t\t\tif (this.destSu !== \"X\") {\n\t\t\t\tthis.getView().byId(\"column3\").setVisible(false);\n\t\t\t\treturn destSu;\n\t\t\t}\n\t\t},\n\t\tchangeColor: function(DestDifa) {\n\t\t\tif (this.destDifa === \"X\" && DestDifa !== \"0.000\" && DestDifa !== \"0\") {\n\t\t\t\tthis.destDifa = \"\";\n\t\t\t\treturn \"Error\";\n\t\t\t}\n\t\t\t// else if (this.destDifa === \"X\" && DestDifa !== \"0\") {\n\t\t\t// \tthis.destDifa = \"\";\n\t\t\t// \treturn \"Error\";\n\t\t\t// }\n\t\t\telse {\n\t\t\t\tthis.destDifa = \"\";\n\t\t\t\treturn \"None\";\n\t\t\t}\n\t\t},\n\t\tsu: function(sValue) {\n\t\t\t// var oResourceBundle = this.getView().getModel(\"i18n\").getResourceBundle(),\n\t\t\t// if(this.diffQuantityIndi = \"X\"){\n\n\t\t\t// };\n\t\t\tvar sResult = \"\";\n\t\t\tif (sValue === \"0\") {\n\t\t\t\tsResult = \"No SU Found\";\n\t\t\t}\n\t\t\treturn sResult;\n\t\t},\n\t\tstatus: function(a, b) {\n\t\t\tvar stsVal = \"\";\n\t\t\tif (b === \"X\") {\n\t\t\t\tstsVal = a + \"(Highest Level of Handling Unit)\";\n\t\t\t} else if (b === \"\") {\n\t\t\t\tstsVal = a;\n\t\t\t}\n\t\t\treturn stsVal;\n\t\t},\n\t\tgrIndicator: function(a) {\n\t\t\tvar grDLU = \"\";\n\t\t\tif (a === \"X\") {\n\t\t\t\tgrDLU = \"Unloaded\";\n\t\t\t} else if (a === \"\") {\n\t\t\t\tgrDLU = \"To be Unloaded\";\n\t\t\t}\n\t\t\treturn grDLU;\n\t\t},\n\t\tgiIndicator: function(a) {\n\t\t\tvar grDLU = \"\";\n\t\t\tif (a === \"X\") {\n\t\t\t\tgrDLU = \"Loaded\";\n\t\t\t} else if (a === \"\") {\n\t\t\t\tgrDLU = \"To be Loaded\";\n\t\t\t}\n\t\t\treturn grDLU;\n\t\t},\n\t\tgrDelShip: function(a) {\n\t\t\tvar shipStat = \"\";\n\t\t\tif (a === \"\") {\n\t\t\t\tshipStat = \"-\";\n\t\t\t}\n\t\t\treturn shipStat;\n\t\t},\n\t\thuIndicator: function(huInd) {\n\t\t\tvar huIndi = \"\";\n\t\t\tif (huInd === \"X\") {\n\t\t\t\thuIndi = \"Available\";\n\t\t\t} else if (huInd === \"\") {\n\t\t\t\thuIndi = \"Not Available\";\n\t\t\t}\n\t\t\treturn huIndi;\n\t\t},\n\t\tshipPoint: function(a) {\n\t\t\tvar shPoint = \"\";\n\t\t\tif (a === \"\") {\n\t\t\t\tshPoint = \"Not Available\";\n\t\t\t} else if (a) {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\treturn shPoint;\n\t\t},\n\t\tunpack: function(a) {\n\t\t\tvar up = \"\";\n\t\t\tif(a === \"\") {\n\t\t\t\tup = \"-\";\n\t\t\t} else if (a) {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\treturn up;\n\t\t},\n\t\tdelType: function(delindicator) {\n\t\t\tvar dIndicator = \"\";\n\t\t\tif (delindicator === \"01\") {\n\t\t\t\tdIndicator = \"Outbound\";\n\t\t\t} else if (delindicator === \"03\") {\n\t\t\t\tdIndicator = \"Inbound\";\n\t\t\t}\n\t\t\treturn dIndicator;\n\t\t},\n\t\tshipInfo : function(Ind) {\n\t\t\tvar sIndi = \"\";\n\t\t\tif (Ind === \"\") {\n\t\t\t\tsIndi = \"-\";\n\t\t\t} \n\t\t\treturn sIndi;\n\t\t}\n\t};\n\n});",
		"gss/newWarehouseManage_R1/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"gss/newWarehouseManage_R1/view/MainView.view.xml": "<mvc:View controllerName=\"gss.newWarehouseManage_R1.controller.MainView\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" displayBlock=\"true\" xmlns=\"sap.m\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title= \"{i18n>title}\" class=\"sapMPageHeader\" enableScrolling=\"false\">\n\t\t\t\t<!--<customHeader>-->\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<!--<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"Back\"/>-->\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>title}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<!--</customHeader>-->\n\t\t\t\t<!--<subHeader>-->\n\t\t\t\t<Toolbar id=\"toolbarheader\" visible=\"false\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"onHandleChange\"\n\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\" visible=\"false\"/>\n\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\t\tvisible=\"false\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<!--</subHeader>-->\n\t\t\t\t<content>\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"putAwayVL\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.putAway\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"loadInqByDel\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.loadInquiry_delivery\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"loadInqByShip\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.loadInquiry_shipment\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"loadInqByHU\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.loadInquiry_HU\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"loadByShip\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.loadShipment\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"loadByDel\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.loadDelivery\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"GRByDel\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.GRDelivery\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"GRByShip\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.GRShipment\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"GRByShipItems\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.GRShipItems\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"GRByDelItems\" width=\"100%\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.GRDelItems\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"grDelShip\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.grDelShip\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"Unpack\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.Unpack\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"UnpackMaterial\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.unpack_Material\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t\t<!--<l:VerticalLayout visible=\"false\" id=\"UnpackHU\">-->\n\t\t\t\t\t<!--\t<l:content>-->\n\t\t\t\t\t<!--\t\t<core:Fragment fragmentName=\"com.sap.wmwmApp.view.fragments.unpack_HU\" type=\"XML\"/>-->\n\t\t\t\t\t<!--\t</l:content>-->\n\t\t\t\t\t<!--</l:VerticalLayout>-->\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" visible=\"false\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"Back\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"Status\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"\n\t\t\t\t\t\t\t\tvisible=\"false\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"LUnload\" class=\"sapThemeHighlight-asOutlineColor\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"Load/Unload\"\n\t\t\t\t\t\t\t\tvisible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"More\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"Items\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" icon=\"sap-icon://create\" press=\"onHandleGTO\" tooltip=\"G.TO\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" tooltip=\"TOEx\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"accept\" press=\"onHandleAccept\" icon=\"sap-icon://accept\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"difference\" press=\"onHandleDifference\" icon=\"sap-icon://sys-minus\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"newBin\" press=\"onHandleNewBin\" tooltip=\"New Bin\" icon=\"sap-icon://shelf\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"undoDel\" icon=\"sap-icon://undo\" press=\"unLoad\" ariaLabelledBy=\"actionButtonLabel\" tooltip=\"Undo\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"Ship\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" icon=\"sap-icon://paper-plane\" press=\"onHandlePost\" tooltip=\"GR Post\" visible=\"false\" enabled=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"save\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"Save\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"print\" icon=\"sap-icon://print\" press=\"onHandlePrint\" tooltip=\"Print\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"byMat\" icon=\"sap-icon://product\" press=\"onHandleMat\" tooltip=\"By Material\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"byHU\" icon=\"sap-icon://suitcase\" press=\"onHandleHU\" tooltip=\"By HU\" visible=\"false\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/GRGIDelItems.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.GRGIDelItems\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"Title\">\n\t\t\t\t<content></content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/LoadInq_Shipment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.LoadInq_Shipment\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>LoadInqShiptitle}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>LoadInqShiptitle}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<l:VerticalLayout>\n\t\t\t\t\t\t<ObjectStatus id=\"shipmentText\" class=\"sapUiTinyMarginBegin Text\" text=\"{itemList>/aItems/0/ShipDesc} - {itemList>/aItems/0/ShipStat}\"/>\n\t\t\t\t\t\t<!--<ObjectStatus text=\"Loading end\"/>-->\n\t\t\t\t\t</l:VerticalLayout>\n\t\t\t\t\t<Table class=\"sapUiTinyMarginBegin\" id=\"shipmentTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"true\" growing=\"true\"\n\t\t\t\t\t\tgrowingScrollToLoad=\"true\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>Deliverytitle}\" level=\"H2\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column width=\"auto\"></Column>\n\t\t\t\t\t\t\t<Column width=\"auto\"></Column>\n\t\t\t\t\t\t\t<Column width=\"auto\"></Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Tprfo}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>DelStat}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/grDelItems.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:f=\"sap.ui.layout.form\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.grDelItems\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page >\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"title\" text=\"{i18n>items}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"DelItemForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>Delform1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"itemInput\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" width=\"100%\"\n\t\t\t\t\t\t\t\t\ttextAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"huScanBut\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onScanUnpack\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>itemsTot}\"/>\n\t\t\t\t\t\t\t\t\t<!--<Label class=\"sapUiTinyMarginTop\" text=\"Confirmed Item\"/>-->\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${itemList>/aItems/0/Anzpk})}\"/>\n\t\t\t\t\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Prtnr}\"/>-->\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<Table id=\"tableitems\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\t\t\t\t\titems=\"{itemList>/aItems}\" mode=\"MultiSelect\" selectionChange=\"onHandleSelection\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>matInfo}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>delItem}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"stock\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\" visible=\"false\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>stockNo}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>mat}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>desc}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>quantUnit}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"Batch\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Right\" visible=\"false\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>batch}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{= parseFloat(${itemList>Posnr})}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Sonum}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Matnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Arktx}\"/>\n\t\t\t\t\t\t\t\t\t<!--<Text text=\"{itemList>Lfimg} {itemList>Vrkme}\"/>-->\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'itemList>Lfimg'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\t\t\tunit=\"{itemList>Vrkme}\" state=\"{ parts: [ {path: 'itemList>Lfimg'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Charg}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"difference\" class =\"differenceButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleDifference\" icon=\"sap-icon://sys-minus\" tooltip=\"{i18n>diff}\"/>\n\t\t\t\t\t\t\t<Button id=\"save\" class =\"saveButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"{i18n>save}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/LoadInq_Delivery.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.LoadInq_Delivery\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>LoadInqDeltitle}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>LoadInqDeltitle}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<l:VerticalLayout>\n\t\t\t\t\t\t<ObjectStatus id=\"delvStatus\" class=\"sapUiTinyMarginBegin Text\" text=\"{itemList>/aItems/0/DelStat}\"/>\n\t\t\t\t\t\t<ObjectStatus id=\"delvText\" class=\"sapUiTinyMarginBegin Text\" text=\"Loaded {itemList>/aItems/0/LoadedHu} / {itemList>/aItems/0/TotalHu} Handling Units\"/>\n\t\t\t\t\t</l:VerticalLayout>\n\t\t\t\t\t<Table class=\"sapUiTinyMarginBegin\" id=\"huTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"true\" growing=\"true\"\n\t\t\t\t\t\tgrowingScrollToLoad=\"true\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>HandlingUnitTitle}\" level=\"H2\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column width=\"auto\"></Column>\n\t\t\t\t\t\t\t<Column width=\"auto\"></Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Exidv'},{path:'itemList>Exida'}],formatter: '.formatter.status'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>HuStatDesc}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/giHu.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.giHu\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>giByHu}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>giByHu}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm id=\"GIDForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>delHeadInfo}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\" visible=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>loadStatus}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" id=\"GIdelFieldLabel\" text=\"{i18n>delNo}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>vendor}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>name}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>shipPoint}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>shipDate}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>totWeigh}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>noOfPackage}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>huInd}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>toInd}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"GIloadIndicator\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/LoadStat'}],formatter: '.formatter.giIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"giDelField\" text=\"{delList>/aItems/0/Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/aItems/0/Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/aItems/0/LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{path: 'delList>/aItems/0/Lfdat',type: 'sap.ui.model.type.Date', formatOptions:{pattern: 'MM/dd/yyyy'}}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/aItems/0/Btgew} {delList>/aItems/0/Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${delList>/aItems/0/Anzpk}) }\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"GItoInd\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin button_Size LUnloadButton\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin button_Size moreButton\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin button_Size itemsButton\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin button_Size shipButton\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin button_Size GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\" visible=\"false\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin button_Size TOExButton\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" visible=\"false\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin postButton\" icon=\"sap-icon://paper-plane\" press=\"onPostGI\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/fragments/loadInquiry_shipment.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\">\n\t<l:VerticalLayout>\n\t\t<ObjectStatus id=\"shipmentText\" class=\"sapUiTinyMarginBegin Text\" text=\"{itemList>/shipDesc} - {itemList>/shipStat}\"/>\n\t\t<!--<ObjectStatus text=\"Loading end\"/>-->\n\t</l:VerticalLayout>\n\t<Table class=\"sapUiTinyMarginBegin\" id=\"shipmentTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"true\"  growing=\"true\" growingScrollToLoad=\"true\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Delivery\" level=\"H2\"/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column width=\"auto\"></Column>\n\t\t\t<Column width=\"auto\"></Column>\n\t\t\t<Column width=\"auto\"></Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{itemList>Tprfo}\"/>\n\t\t\t\t\t<Text text=\"{itemList>Vbeln}\"/>\n\t\t\t\t\t<Text text=\"{itemList>DelStat}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/loadInquiry_delivery.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\">\n\t<l:VerticalLayout>\n\t\t<ObjectStatus id=\"delvStatus\" class=\"sapUiTinyMarginBegin Text\" text=\"{itemList>/delStat}\"/>\n\t\t<ObjectStatus id=\"delvText\" class=\"sapUiTinyMarginBegin Text\" text=\"Loaded {itemList>/loadedHU} / {itemList>/totalHU} Handling Units\"/>\n\t</l:VerticalLayout>\n\t<Table class=\"sapUiTinyMarginBegin\" id=\"huTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"true\" growing=\"true\" growingScrollToLoad=\"true\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Handling units\" level=\"H2\"/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column width=\"auto\"></Column>\n\t\t\t<Column width=\"auto\"></Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Exidv'},{path:'itemList>Exida'}],formatter: '.formatter.status'}\"/>\n\t\t\t\t\t<Text text=\"{itemList>HuStatDesc}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/unpack_HU.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<Table id=\"unpackHUTable\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\titems=\"{HUModel>/delItems}\" mode=\"MultiSelect\" selectionChange=\"unpackItemSelect\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Lower Level HU List\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Handling Unit\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Description\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{HUModel>Unvel}\"/>\n\t\t\t\t\t<Text text=\"{HUModel>Maktx}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/confirmation.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"confirm\" title=\"{i18n>alertDialog}\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" icon=\"sap-icon://alert\" afterClose=\"onClose\">\n\t\t<content>\n\t\t\t<Text id=\"popup\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text = \"{i18n>yes}\" press=\"onConfirm\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text = \"{i18n>no}\" press=\"onCancel\"/>\n\t\t</endButton>\t\t\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/MessagePopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<MessagePopover initiallyExpanded=\"true\" items=\"{errorList>/aItems}\" placement=\"Vertical\" xmlns=\"sap.m\">\n\t\t<items>\n\t\t\t<MessagePopoverItem title=\"{errorList>Msgtext}\" />\n\t\t</items>\n\t</MessagePopover>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/GRDelItems.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"DelItemForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Delivery Info\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Items Total\"/>\n\t\t\t\t\t<!--<Label class=\"sapUiTinyMarginTop\" text=\"Confirmed Item\"/>-->\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${delItemList>/delItems/0/Anzpk})}\"/>\n\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delItemList>/Prtnr}\"/>-->\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n\t<Table id=\"tableitems\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\titems=\"{delItemList>/delItems}\" mode=\"MultiSelect\" selectionChange=\"onItemSelect\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Material Info\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Delivery Item\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"stock\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Stock No\" design=\"Bold\" />\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Material\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Description\" design=\"Bold\" />\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Quantity/Unit\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"Batch\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Right\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Batch\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{= parseFloat(${delItemList>Posnr})}\"/>\n\t\t\t\t\t<Text text=\"{delItemList>Sonum}\"/>\n\t\t\t\t\t<Text text=\"{delItemList>Matnr}\"/>\n\t\t\t\t\t<Text text=\"{delItemList>Arktx}\"/>\n\t\t\t\t\t<!--<Text text=\"{delItemList>Lfimg} {delItemList>Vrkme}\"/>-->\n\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'delItemList>Lfimg'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\tunit=\"{delItemList>Vrkme}\" state=\"{ parts: [ {path: 'delItemList>Lfimg'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t<Text text=\"{delItemList>Charg}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/loadShipment.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"shipForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Shipment Info\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<!--<Label text=\"Delivery\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/vbeln}\"/>-->\n\t\t\t<!--<Label text=\"Staging Area\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/Lgbzo}\"/>-->\n\t\t\t<!--<Label text=\"Door\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/Lgtor}\"/>-->\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Delivery\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Staging Area\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Door\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/vbeln}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Lgbzo}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Lgtor}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n\t<f:SimpleForm id=\"shiphuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Handling Units\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<Toolbar>\n\t\t\t\t<Input id=\"scanHUDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"onHandleChange\" placeholder=\"Enter/Scan Handling Unit\"\n\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t<Button id=\"shhu\" tooltip=\"Bar Code scanner\" icon=\"sap-icon://bar-code\" press=\"onHandleScanSHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t</Toolbar>\n\t\t\t<!--<Label text=\"Loaded HU\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/loadedHU}\"/>-->\n\t\t\t<!--<Label text=\"Total HU\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/totalHU}\"/>-->\n\t\t\t<!--<Label text=\"Wt\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/LoadedHuWt}\"/>-->\n\t\t\t<!--<Label text=\"TW\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/TotHuWt}\"/>-->\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label id=\"loadedLabel\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Loaded HU\"/>\n\t\t\t\t\t<Label id=\"unloadLabel\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Unloaded HU\" visible=\"false\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Total HU\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Loaded WT\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Total WT\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text id=\"loadedText\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/loadedHU}\"/>\n\t\t\t\t\t<Text id=\"unloadText\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/UnloadedHu}\" visible=\"false\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/totalHU}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/LoadedHuWt} {itemList>/Wt_unit}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/TotHuWt} {itemList>/Wt_unit}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/loadConfirmation.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"confirm\" title=\"Alert\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" icon=\"sap-icon://alert\">\n\t\t<content>\n\t\t\t<Text text=\"Are you sure you want to undo the process?\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text = \"Yes\" press=\"onUndoConfirm\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text = \"No\" press=\"onUndoCancel\"/>\n\t\t</endButton>\t\t\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/GRShipItems.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\"\n\t\tadjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\tsingleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Vendor\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Load/Unload Status\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Ship Point\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Total weight\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"No Packages\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"HU Ind\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"TO Ind\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Lifnr}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{parts:[{path:'itemList>/Vstel'}],formatter: '.formatter.grDelShip'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Btgew}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${itemList>/Anzpk})}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n\t<Table id=\"tableItem\" class=\"sapUiResponsiveMargin\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Material Information\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column id=\"MatNumber\">\n\t\t\t\t<Text id=\"MatTitle\" text=\"Material No.\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"MatName\">\n\t\t\t\t<Text id=\"MatDesc\" text=\"Material Description\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"MatQty\">\n\t\t\t\t<Text id=\"MatQU\" text=\"Quantity/Unit\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"MatBatch\">\n\t\t\t\t<Text id=\"Matbatch\" text=\"Batch\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"MAT-1\"/>\n\t\t\t\t\t<Text text=\"TEST-PTW\"/>\n\t\t\t\t\t<Text text=\"1\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"MAT-2\"/>\n\t\t\t\t\t<Text text=\"TEST-SFA\"/>\n\t\t\t\t\t<Text text=\"2\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/difference.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\">\n\t<Dialog id=\"difference\" title=\"{i18n>diffQuant}\" class=\"sapUiResponsiveMargin\"  icon=\"sap-icon://sys-minus\" afterClose=\"closeFrag\">\n\t\t<content>\n\t\t\t<Panel headerText=\"{handleDiff>/dBin}\" expanded=\"true\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t<content>\n\t\t\t\t\t<Label text=\"Original Quantity :\" width=\"50%\"/>\n\t\t\t\t\t<Text text=\"{path: 'handleDiff>/destTarget', type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 }}\" width=\"50%\"/>\n\t\t\t\t\t<!--<Text text=\"{matList1>/dBin}\"/>-->\n\t\t\t\t\t<Label text=\"Actual Quantity :\" width=\"50%\"/>\n\t\t\t\t\t<Input id=\"actual\"\n\t\t\t\t\t\tvalue=\"{ path: 'handleDiff>/destActa', type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits: 0, maxFractionDigits: 3 }}\"\n\t\t\t\t\t\twidth=\"25%\" liveChange=\"onHandleActual\"/>\n\t\t\t\t\t<!--formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 }-->\n\t\t\t\t\t<Label text=\"Difference Quantity :\" width=\"50%\"/>\n\t\t\t\t\t<Text id=\"diff\"\n\t\t\t\t\t\ttext=\"{path: 'handleDiff>/destDifa', type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 }}\"\n\t\t\t\t\t\twidth=\"50%\"/>\n\t\t\t\t</content>\n\t\t\t</Panel>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button id=\"onHandleDiff\" text=\"{i18n>ok}\" press=\"onDiffConfirm\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"{i18n>cancel}\" press=\"onDiffCancel\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/GRShipment.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\" xmlns:semantic=\"sap.m.semantic\">\n\t<Table id=\"table\" class=\"sapUiResponsiveMargin\" mode=\"SingleSelect\" selectionChange=\"onSingleSelect\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\" items=\"{itemList>/aItems}\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"Delivery\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"Delivery No.\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"Name\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem press=\"onPressTabNav\" type=\"Navigation\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{itemList>Vbeln}\"/>\n\t\t\t\t\t<Text text=\"{itemList>LifnrName}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/putAway.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:controllerName=\"com.sap.wmwmApp.controller.wmView\">\n\t<Table id=\"toTable\" items=\"{materialList>/aItems}\" busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\" mode=\"MultiSelect\" showSeparators=\"All\"\n\t\tselectionChange=\"onHandleSelection\" class=\"sapUiTinyMargin\" width=\"auto\"  growing=\"true\" growingScrollToLoad=\"true\">\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" id=\"item1\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Matnr}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Maktx}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Vltyp} {materialList>Vlber} {materialList>Vlpla}\"/>\n\t\t\t\t\t<ObjectNumber number=\"{ parts: [{path: 'materialList>Nltyp'}, {path: 'materialList>Nlber'}, {path: 'materialList>Nlpla'}], type: 'sap.ui.model.type.CompositeTypeModule' }\"/>\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!--formatter : '.formatter.newbinColorChange'-->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\tstate=\"{-->\n\t\t\t\t\t\t\t<!--parts: [-->\n\t\t\t\t\t\t\t<!--\t{path: 'materialList>Nlpla'}-->\n\t\t\t\t\t\t\t<!--]-->\n\t\t\t\t\t<!--<Text maxLines=\"0\" text=\"{materialList>Nltyp} {materialList>Nlber} {materialList>Nlpla}\"/>-->\n\t\t\t\t\t<Text text=\"{ parts: [{path: 'materialList>DestSu'}], formatter : '.formatter.removeColumn'}\"/>\n\t\t\t\t\t<!--{ parts: [ {path: 'materialList>DestSu'} ], formatter : '.formatter.su' }\"-->\n\t\t\t\t\t<!--class=\"myStyle sapMText sapMTextMaxWidth sapUiSelectable\"-->\n\t\t\t\t\t<!--<ObjectNumber number=\"{materialList>DestQuantity}\" unit=\"{materialList>AltUnit}\"/>-->\n\t\t\t\t\t<ObjectNumber number=\"{ parts: [ {path: 'materialList>DestQuantity'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\" unit=\"{materialList>AltUnit}\" state=\"{\n\t\t\t\t\t\t\tparts: [\n\t\t\t\t\t\t\t\t{path: 'materialList>DestDifa'}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tformatter : '.formatter.changeColor'\n\t\t\t\t\t\t}\" />\n\t\t\t\t\t<!--, {path: 'materialList>DestDifa'} --> \n\t\t\t\t\t\t<!--state=\"{ parts: [ {path: 'materialList>DestQuantity'}, {path: 'materialList>AltUnit'} ],-->\n\t\t\t\t\t\t<!--formatter: 'sap.m.sample.Table.Formatter.weightState' }\"/>-->\n\t\t\t\t\t<!--<Text id=\"quantity\" text=\"{ parts: [ {path: 'materialList>DestQuantity'}, {path: 'materialList>AltUnit'} ], formatter : '.formatter.changeColor' }\"/>-->\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column id=\"column\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label design=\"Bold\" id=\"label\" text=\"Material\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"column0\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label id=\"label0\" design=\"Bold\" text=\"Description\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"column1\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label id=\"label1\" text=\"Source Bin\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"column2\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label design=\"Bold\" id=\"label2\" text=\"Dest. Bin\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"column3\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" visible=\"false\" hAlign=\"Left\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label id=\"label3\"  design=\"Bold\" text=\"Storage Unit\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column id=\"column4\" hAlign=\"Right\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label id=\"label4\" text=\"Quantity\" design=\"Bold\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t</columns>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/Unpack.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"unpackForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\"\n\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\tsingleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<Toolbar>\n\t\t\t\t<Input id=\"huInput\" valueHelpRequest=\"onHandlePoHelp\" submit=\"getHUInput\" placeholder=\"Enter/Scan Handling Unit\"\n\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t<Button id=\"huScanBut\" tooltip=\"Bar Code scanner\" icon=\"sap-icon://bar-code\" press=\"onScanUnpack\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t</Toolbar>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Packaging Materials\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Description\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Plant\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Storage Location\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Warehouse No\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Storage Bin\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" \n\t\t\t\t\t\ttext=\"{parts:[{path:'unpackModel>/Vhilm'}],formatter: '.formatter.unpack'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" \n\t\t\t\t\t\ttext=\"{parts:[{path:'unpackModel>/Maktx'}],formatter: '.formatter.unpack'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{unpackModel>/Werks}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{unpackModel>/Lgort}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{unpackModel>/Lgnum}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{unpackModel>/Lgtyp} {unpackModel>/Lgpla}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/addMaterial.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"addMaterial\" title=\"{i18n>addMatTit}\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" icon=\"sap-icon://add\"\n\t\tcontentHeight=\"30%\" contentWidth=\"20%\">\n\t\t<content>\n\t\t\t<VBox>\n\t\t\t\t<HBox>\n\t\t\t\t\t<Input id=\"material\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" value=\"\" placeholder=\"{i18n>enterMaterial}\" width=\"90%\"/>\n\t\t\t\t\t<Button id=\"addMatScan\" class=\"sapUiTinyMarginTop\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"packMatScan\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\t\twidth=\"5%\" visible=\"true\"/>\n\t\t\t\t</HBox>\n\t\t\t\t<HBox>\n\t\t\t\t\t<Input id=\"quantity\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" value=\"\" placeholder=\"{i18n>enterQuant}\" width=\"90%\"/>\n\t\t\t\t\t<Button id=\"addQuaScan\" class=\"sapUiTinyMarginTop\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"packQuaScan\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\t\twidth=\"5%\" visible=\"true\"/>\n\t\t\t\t</HBox>\n\t\t\t\t<HBox>\n\t\t\t\t\t<Input id=\"unit\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" value=\"\" placeholder=\"{i18n>enterUnit}\" width=\"90%\"/>\n\t\t\t\t\t<Button id=\"addUnitScan\" class=\"sapUiTinyMarginTop\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"packUnitScan\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\t\twidth=\"5%\" visible=\"true\"/>\n\t\t\t\t</HBox>\n\t\t\t</VBox>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"{i18n>save}\" press=\"onMatSave\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"{i18n>cancel}\" press=\"onMatCancel\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/GRDelivery.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"GRDForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Delivery Header Information\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\" visible=\"false\">\n\t\t<f:content>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Load/Unload Status\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" id=\"delFieldLabel\" text=\"Delivery\" visible=\"false\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Vendor\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Name\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Receiving Point\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Receiving Date\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Total Weight\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"No of Packages\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"HU Indicator\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"TO Indicator\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"loadIndicator\"\n\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"grDelField\" text=\"{delList>/Vbeln}\" visible=\"false\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/Lifnr}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/LifnrName}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{parts:[{path:'delList>/Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\ttext=\"{path: 'delList>/Lfdat',type: 'sap.ui.model.type.Date', formatOptions:{pattern: 'MM/dd/yyyy'}}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/Btgew} {delList>/Gewei}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${delList>/Anzpk}) }\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{parts:[{path:'delList>/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"toInd\" text=\"{parts:[{path:'delList>/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/addHU.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"addHU\" title=\"{i18n>addHuTit}\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" \n\t\ticon=\"sap-icon://add\" contentHeight=\"15%\" contentWidth=\"15%\">\n\t\t<content>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Input id=\"HU\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" value=\"\" placeholder=\"{i18n>EnterHU}\" width=\"80%\"/>\n\t\t\t\t\t<Button id=\"addHuScan\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"packHuScan\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\twidth=\"5%\" visible=\"true\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button id=\"save\"  text=\"{i18n>save}\" press=\"huSave\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"{i18n>cancel}\" press=\"huCancel\"/>\n\t\t</endButton>\t\t\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/inProcess.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<!--<SelectDialog id=\"inProcess\" noDataText=\"No Products Found\" title=\"Inbound Process\" items=\"{matList>/inBound}\" contentHeight=\"100rem\">-->\n\t<!--\t<StandardListItem title=\"{matList>process}\" type=\"Active\" press=\"onHandlePress\"/>-->\n\t<!--</SelectDialog>-->\n\t<Dialog id=\"inProcess\" title=\"Inbound Process\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\">\n\t\t<List id=\"rfMenu2\" visible=\"true\" itemPress=\"onHandleInbound\" items=\"{ path: 'matList>/inBound' }\">\n\t\t\t<items>\n\t\t\t\t<StandardListItem title=\"{matList>process}\" type=\"Active\"/>\n\t\t\t</items>\n\t\t</List>\n\t\t<endButton>\n\t\t\t<Button text = \"Cancel\" press=\"onHandleInBoundCancel\"/>\n\t\t</endButton>\t\t\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/grDelShip.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\r\n\txmlns:f=\"sap.ui.layout.form\">\r\n\t<f:SimpleForm id=\"grShip\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Shipment Inforamtion\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\"\r\n\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\r\n\t\tsingleContainerFullSize=\"false\">\r\n\t\t<f:content>\r\n\t\t\t<HBox>\r\n\t\t\t\t<VBox>\r\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Shipment\"/>\r\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"External Identification No\"/>\r\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Container ID\"/>\r\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Shipment Type\"/>\r\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Shipment Route\"/>\r\n\t\t\t\t</VBox>\r\n\t\t\t\t<VBox>\r\n\t\t\t\t\t<Text id=\"shipment\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/Tknum}\"/>\r\n\t\t\t\t\t<Text id=\"eiNo\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" \r\n\t\t\t\t\ttext=\"{parts:[{path:'delList>/Exti1'}],formatter: '.formatter.shipInfo'}\"/>\r\n\t\t\t\t\t<Text id=\"contID\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" \r\n\t\t\t\t\ttext=\"{parts:[{path:'delList>/Signi'}],formatter: '.formatter.shipInfo'}\"/>\r\n\t\t\t\t\t<Text id=\"shipTyp\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{delList>/Shtyp}\"/>\r\n\t\t\t\t\t<Text id=\"shipRoute\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" \r\n\t\t\t\t\ttext=\"{parts:[{path:'delList>/Route'}],formatter: '.formatter.shipInfo'}\"/>\r\n\t\t\t\t</VBox>\r\n\t\t\t</HBox>\r\n\t\t</f:content>\r\n\t</f:SimpleForm>\r\n\t<f:SimpleForm id=\"grShipData\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Actual Data\" labelSpanXL=\"3\" labelSpanL=\"3\"\r\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\r\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\"></f:SimpleForm>\r\n\t<HBox>\r\n\t\t<VBox>\r\n\t\t\t<Label class=\"sapUiSmallMargin\" text=\"Current Load Start Date\"/>\r\n\t\t\t<Label class=\"sapUiSmallMargin\" text=\"Actual Load Start Time\"/>\r\n\t\t</VBox>\r\n\t\t<VBox>\r\n\t\t\t<DatePicker id=\"DP1\" change=\"valueChange\"\r\n\t\t\t\tvalue=\"{path:'delList>/Dalbg', type:'sap.ui.model.type.Date', formatOptions: {style: 'medium', UTC: true}}\"/>\r\n\t\t\t<TimePicker id=\"TP3\" displayFormat=\"HH:mm:ss a\" change=\"valueChange\" placeholder=\"\"/>\r\n\t\t</VBox>\r\n\t\t<VBox>\r\n\t\t\t<Label class=\"sapUiSmallMargin\" text=\"Actual Load End Date\"/>\r\n\t\t\t<Label class=\"sapUiSmallMargin\" text=\"Actual Load End Time\"/>\r\n\t\t</VBox>\r\n\t\t<VBox>\r\n\t\t\t<DatePicker id=\"DP2\" change=\"valueChange\"\r\n\t\t\t\tvalue=\"{path:'delList>/Dalen', type:'sap.ui.model.type.Date', formatOptions: {style: 'medium', UTC: true}}\"/>\r\n\t\t\t<TimePicker id=\"TP4\" displayFormat=\"HH:mm:ss a\" change=\"valueChange\" placeholder=\"\"/>\r\n\t\t</VBox>\r\n\t</HBox>\r\n\t<!--\t</f:content>-->\r\n\t<!--</f:SimpleForm>-->\r\n\t<!--<Label class=\"sapUiTinyMarginTop\" text=\"Current Load Start Date Time\"/>-->\r\n\t<!--<DateTimePicker id=\"DTP1\"-->\r\n\t<!--\tvalue=\"{path:'itemList>/Dalbg', type:'sap.ui.model.type.DateTime', formatOptions: { style: 'medium', strictParsing: true}}\"/>-->\r\n\t<!--<Label class=\"sapUiTinyMarginTop\" text=\"Actual Load End Date Time\"/>-->\r\n\t<!--<DateTimePicker id=\"DTP2\"-->\r\n\t<!--\tvalue=\"{path:'itemList>/Dalen', type:'sap.ui.model.type.DateTime', formatOptions: { style: 'medium', strictParsing: true}}\"/>-->\r\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/rfMenu.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog class=\"sapUiResponsiveMargin sapUiPopupWithPadding\">\n\t\t<List visible=\"true\" items=\"{ path: 'rfMenuModel>/aItems' }\"  growing=\"true\" growingScrollToLoad=\"true\">\n\t\t\t<items>\n\t\t\t\t<StandardListItem title=\"{rfMenuModel>Text}\" type=\"Active\" press=\"onHandleMenu\"/>\n\t\t\t</items>\n\t\t</List>\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/loadDelivery.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"delvForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Delivery Info\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<!--<Label text=\"Staging Area\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/Lgbzo}\"/>-->\n\t\t\t<!--<Label text=\"Door\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/Lgtor}\"/>-->\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Staging Area\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Door\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Lgbzo}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Lgtor}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n\t<f:SimpleForm id=\"delhuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Handling Units\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<Toolbar>\n\t\t\t\t<Input id=\"scanHUinDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"onHandleChange\" placeholder=\"Enter/Scan Handling Unit\"\n\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t<Button id=\"shu\" tooltip=\"Bar Code scanner\" icon=\"sap-icon://bar-code\" press=\"onHandleScanHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t</Toolbar>\n\t\t\t<!--<Label text=\"Loaded HU\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/loadedHU}\"/>-->\n\t\t\t<!--<Label text=\"Total HU\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/totalHU}\"/>-->\n\t\t\t<!--<Label text=\"Wt\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/LoadedHuWt}\"/>-->\n\t\t\t<!--<Label text=\"TW\"/>-->\n\t\t\t<!--<Text text=\"{itemList>/TotHuWt}\"/>-->\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label id=\"loadedLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Loaded HU\"/>\n\t\t\t\t\t<Label id=\"unloadLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Unloaded HU\" visible=\"false\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Total HU\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Weight\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Total Weight\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Text id=\"loadedTxt\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/loadedHU}\"/>\n\t\t\t\t\t<Text id=\"unloadTxt\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/UnloadedHu}\" visible=\"false\"/>\n\t\t\t\t\t<Text id=\"totalHU\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/totalHU}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/LoadedHuWt} {itemList>/Wt_unit}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/TotHuWt} {itemList>/Wt_unit}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/newBin.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\">\n\t<Dialog id=\"newBin\" title=\"{i18n>newBinTit}\" class=\"sapUiResponsiveMargin sapUiPopupWithPadding\" icon=\"sap-icon://shelf\">\n\t\t<content>\n\t\t\t<f:SimpleForm editable=\"true\" layout=\"ResponsiveGridLayout\" title=\"Dest. Bin {Bin>/Nlpla}\" labelSpanXL=\"4\" labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"0\" emptySpanL=\"0\" emptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"2\" columnsM=\"2\"\n\t\t\t\tsingleContainerFullSize=\"false\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"{i18n>newBin}\"/>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Input id=\"newBinValue\" liveChange=\"onNewBinChange\" value=\"{Bin>/newBin}\" valueState=\"None\" width=\"90%\"/>\n\t\t\t\t\t\t<Button id=\"newBinScan\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanNB\" ariaLabelledBy=\"actionButtonLabel\"\n\t\t\t\t\t\t\tvisible=\"true\" width=\"10%\"/>\n\t\t\t\t\t\t<Button text=\"{i18n>check}\" id=\"check\" press=\"onHandleCheck\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"{i18n>ok}\" press=\"onNewBinConfirm\" id=\"newBinConfirm\" enabled=\"true\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"{i18n>cancel}\" press=\"onNewBinCancel\" id=\"newBincancel\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/loadInquiry_HU.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<f:SimpleForm id=\"huForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\"\n\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\tsingleContainerFullSize=\"false\">\n\t\t<f:content>\n\t\t\t<HBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Shipping Point\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Status\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Total Weight\"/>\n\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"Total Volume\"/>\n\t\t\t\t</VBox>\n\t\t\t\t<VBox>\n\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"1990\"/>-->\n\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"Completed\"/>-->\n\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"43,333 KG\"/>-->\n\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"0,000\"/>-->\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/Vstel}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/DelStat}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/TotHuWt} {itemList>/WtUnit}\"/>\n\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/HuVolume}\"/>\n\t\t\t\t</VBox>\n\t\t\t</HBox>\n\t\t</f:content>\n\t</f:SimpleForm>\n\t<Table class=\"sapUiTinyMarginBegin\" id=\"huInqTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"false\" growing=\"true\" growingScrollToLoad=\"true\">\n\t\t<headerToolbar>\n\t\t\t<Toolbar>\n\t\t\t\t<Title text=\"\"/>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column width=\"auto\">\n\t\t\t\t<Text text=\"Associated HU\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"auto\">\n\t\t\t\t<Text text=\"Load Status\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"auto\">\n\t\t\t\t<Text text=\"Delivery Type\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"auto\">\n\t\t\t\t<Text text=\"Warehouse\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Exidv'},{path:'itemList>Exida'}],formatter: '.formatter.status'}\"/>\n\t\t\t\t\t<Text text=\"{itemList>HuStatDesc}\"/>\n\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>DelType'}],formatter: '.formatter.delType'}\"/>\n\t\t\t\t\t<Text text=\"{itemList>Lgnum}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/fragments/unpackMaterial.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:f=\"sap.ui.layout.form\">\n\t<Page>\n\t\t<content>\n\t\t\t<Table id=\"unpackTable\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\t\t\titems=\"{HUMatModel>/delItems}\" mode=\"MultiSelect\" selectionChange=\"unpackItemSelect\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Title text=\"Material List\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"addItem\" tooltip=\"Add Item\" icon=\"sap-icon://add\" press=\"onAddItem\" visible=\"false\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label text=\"Material\" design=\"Bold\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label text=\"Quantity/Unit\" design=\"Bold\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Text text=\"{HUMatModel>Matnr}\"/>\n\t\t\t\t\t\t\t<!--<Input value=\"{HUMatModel>Matnr}\" visible=\"{path: 'saveNew', formatter: '.enableControl'}\"/>-->\n\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'HUMatModel>Lfimg'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\tunit=\"{HUMatModel>Vrkme}\" state=\"{ parts: [ {path: 'HUMatModel>Lfimg'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t<!--<Input value=\"{fname}\" visible=\"{path: 'saveNew', formatter: '.enableControl'}\"/>-->\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t</content>\n\t\n\t</Page>\n</core:FragmentDefinition>",
		"gss/newWarehouseManage_R1/view/grStagingArea.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.grStagingArea\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>grBySa}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>grBySa}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"tableSA\" class=\"sapUiTinyMargin\" mode=\"MultiSelect\" selectionChange=\"onSingleSelectSA\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\twidth=\"auto\" rememberSelections=\"true\" items=\"{itemList>/aItems}\" visible=\"false\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>delHeadInfo}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>delNo}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>name}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>vendor}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>totWeigh}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>shipPoint}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>loadStatus}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>huInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>toInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text id=\"vbelnSA\" text=\"{itemList>Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Btgew} {itemList>Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadstat\" text=\"{parts:[{path:'itemList>LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin  LUnloadButton\" icon=\"sap-icon://supplier\"\n\t\t\t\t\t\t\t\tpress=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin  moreButton\" icon=\"sap-icon://detail-view\"\n\t\t\t\t\t\t\t\tpress=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin  itemsButton\" icon=\"sap-icon://activity-items\"\n\t\t\t\t\t\t\t\tpress=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin  shipButton\" icon=\"sap-icon://shipping-status\"\n\t\t\t\t\t\t\t\tpress=\"onHandleShip\" visible=\"false\" enabled=\"false\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin  GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\"\n\t\t\t\t\t\t\t\tvisible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin  TOExButton\" icon=\"sap-icon://bbyd-active-sales\"\n\t\t\t\t\t\t\t\tpress=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin  postButton\" icon=\"sap-icon://paper-plane\"\n\t\t\t\t\t\t\t\tpress=\"onPostGR\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/grHu.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.grHu\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>grByHu}\">\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm id=\"GRDForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>delHeadInfo}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\" visible=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>loadStatus}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" id=\"GRdelFieldLabel\" text=\"{i18n>delNo}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>vendor}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>name}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>receivePnt}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>receiveDate}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>totWeigh}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>noOfPackage}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>huInd}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>toInd}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"loadIndicator\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"grDelField\" text=\"{itemList>/aItems/0/Vbeln}\" />\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{parts:[{path:'itemList>/aItems/0/Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{path: 'itemList>/aItems/0/Lfdat',type: 'sap.ui.model.type.Date', formatOptions:{pattern: 'MM/dd/yyyy'}}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Btgew} {itemList>/aItems/0/Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${itemList>/aItems/0/Anzpk}) }\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{parts:[{path:'itemList>/aItems/0/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"toInd\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin  LUnloadButton\" icon=\"sap-icon://supplier\"\n\t\t\t\t\t\t\t\tpress=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin  moreButton\" icon=\"sap-icon://detail-view\"\n\t\t\t\t\t\t\t\tpress=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin  itemsButton\" icon=\"sap-icon://activity-items\"\n\t\t\t\t\t\t\t\tpress=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin  shipButton\" icon=\"sap-icon://shipping-status\"\n\t\t\t\t\t\t\t\tpress=\"onHandleShip\" visible=\"false\" enabled=\"false\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin  GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\"\n\t\t\t\t\t\t\t\tvisible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin  TOExButton\" icon=\"sap-icon://bbyd-active-sales\"\n\t\t\t\t\t\t\t\tpress=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin  postButton\" icon=\"sap-icon://paper-plane\"\n\t\t\t\t\t\t\t\tpress=\"onPostGR\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/grShipItems.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.grShipItems\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page id=\"title\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>Delform1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\"\n\t\t\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\t\t\t\t\tsingleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>delNo}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>itemsTot}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"delNo\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"itemTot\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${itemList>/aItems/0/Anzpk}) }\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<ScrollContainer height=\"100%\" width=\"100%\" horizontal=\"true\" vertical=\"true\" focusable=\"true\">\n\t\t\t\t\t\t<Table id=\"table\" class=\"sapUiTinyMargin\" growing=\"true\" growingScrollToLoad=\"true\" mode=\"MultiSelect\" selectionChange=\"onHandleSelection\"\n\t\t\t\t\t\t\twidth=\"auto\" items=\"{itemList>/aItems}\">\n\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t\t<Title text=\"{i18n>matInfo}\"/>\n\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>mat}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>desc}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>quantUnit}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"MatBatch\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>batch}\" design=\"Bold\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Matnr}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Arktx}\"/>\n\t\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'itemList>Lfimg'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\t\t\t\tunit=\"{itemList>Vrkme}\" state=\"{ parts: [ {path: 'itemList>Lfimg'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Charg}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</ScrollContainer>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"difference\" class=\"differenceButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleDifference\" icon=\"sap-icon://sys-minus\" tooltip=\"Difference\"/>\n\t\t\t\t\t\t\t<Button id=\"save\" class =\"saveButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"save\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/UnloadDelivery.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.UnloadDelivery\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>unlByDel}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>unDeltit}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" liveChange=\"onHandleBinding\"\n\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t<Button id=\"scanButton\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"delvForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>Delform1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>stgingAreaTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>doorTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgbzo}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgtor}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<f:SimpleForm id=\"delhuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>form2Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"scanHUinDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" placeholder=\"{i18n>placeholderTitle}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\ttextAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"shu\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label id=\"loadedLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>unloadedHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>loadedWTTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalWTTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"unloadTxt\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/UnloadedHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"totalHU\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotalHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"unload\" icon=\"sap-icon://accept\"/>\n\t\t\t\t\t\t\t<Button id=\"difference\" press=\"onHandleDifference\" visible=\"false\" icon=\"sap-icon://sys-minus\"/>\n\t\t\t\t\t\t\t<Button id=\"undoDel\" class=\"undoDel sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"unloadRevert\" icon=\"sap-icon://undo\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/picking.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.picking\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page id=\"title\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin formInput\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"toTable\" items=\"{materialList>/aItems}\" busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\" mode=\"MultiSelect\"\n\t\t\t\t\t\tshowSeparators=\"All\" selectionChange=\"onHandleSelection\" class=\"sapUiTinyMargin\" width=\"auto\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\tvisible=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"item1\">\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Matnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Maktx}\"/>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Vltyp} {materialList>Vlber} {materialList>Vlpla}\"/>\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [{path: 'materialList>Nltyp'}, {path: 'materialList>Nlber'}, {path: 'materialList>Nlpla'}], type: 'sap.ui.model.type.CompositeTypeModule' }\"/>\n\t\t\t\t\t\t\t\t\t<!--formatter : '.formatter.newbinColorChange'-->\n\t\t\t\t\t\t\t\t\t<!--\t\t\t\t\t\tstate=\"{-->\n\t\t\t\t\t\t\t\t\t<!--parts: [-->\n\t\t\t\t\t\t\t\t\t<!--\t{path: 'materialList>Nlpla'}-->\n\t\t\t\t\t\t\t\t\t<!--]-->\n\t\t\t\t\t\t\t\t\t<!--<Text maxLines=\"0\" text=\"{materialList>Nltyp} {materialList>Nlber} {materialList>Nlpla}\"/>-->\n\t\t\t\t\t\t\t\t\t<Text text=\"{ parts: [{path: 'materialList>DestSu'}], formatter : '.formatter.removeColumn'}\"/>\n\t\t\t\t\t\t\t\t\t<!--{ parts: [ {path: 'materialList>DestSu'} ], formatter : '.formatter.su' }\"-->\n\t\t\t\t\t\t\t\t\t<!--class=\"myStyle sapMText sapMTextMaxWidth sapUiSelectable\"-->\n\t\t\t\t\t\t\t\t\t<!--<ObjectNumber number=\"{materialList>DestQuantity}\" unit=\"{materialList>AltUnit}\"/>-->\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'materialList>DestQuantity'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\t\t\tunit=\"{materialList>AltUnit}\" state=\"{ parts: [ {path: 'materialList>DestDifa'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t\t\t<!--, {path: 'materialList>DestDifa'} -->\n\t\t\t\t\t\t\t\t\t<!--state=\"{ parts: [ {path: 'materialList>DestQuantity'}, {path: 'materialList>AltUnit'} ],-->\n\t\t\t\t\t\t\t\t\t<!--formatter: 'sap.m.sample.Table.Formatter.weightState' }\"/>-->\n\t\t\t\t\t\t\t\t\t<!--<Text id=\"quantity\" text=\"{ parts: [ {path: 'materialList>DestQuantity'}, {path: 'materialList>AltUnit'} ], formatter : '.formatter.changeColor' }\"/>-->\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column id=\"column\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"label\" text=\"{i18n>mat}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column0\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label0\" design=\"Bold\" text=\"{i18n>desc}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column1\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label1\" text=\"{i18n>srcBin}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column2\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"label2\" text=\"{i18n>destBin}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column3\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" visible=\"false\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label3\" design=\"Bold\" text=\"{i18n>storUnit}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column4\" hAlign=\"Right\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label4\" text=\"{i18n>quant}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<!--<Button id=\"LUnload\" class=\"sapThemeHighlight-asOutlineColor\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"Load/Unload\"-->\n\t\t\t\t\t\t\t<!--\tvisible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"more\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"More\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"items\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"Items\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"GTO\" icon=\"sap-icon://create\" press=\"onHandleGTO\" tooltip=\"G.TO\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"TOEx\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" tooltip=\"TOEx\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"pickingConfirm\"  tooltip=\"{i18n>accept}\" icon=\"sap-icon://accept\"  />\n\t\t\t\t\t\t\t<!--<Button id=\"difference\" press=\"onHandleDifference\" icon=\"sap-icon://sys-minus\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"newBin\" press=\"onHandleNewBin\" tooltip=\"New Bin\" icon=\"sap-icon://shelf\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"undoDel\" icon=\"sap-icon://undo\" press=\"unLoad\" ariaLabelledBy=\"actionButtonLabel\" tooltip=\"Undo\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"ship\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"Ship\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"post\" icon=\"sap-icon://paper-plane\" press=\"onHandlePost\" tooltip=\"GR Post\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"save\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"Save\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"print\" icon=\"sap-icon://print\" press=\"onHandlePrint\" tooltip=\"Print\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"byMat\" icon=\"sap-icon://product\" press=\"onHandleMat\" tooltip=\"By Material\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"byHU\" icon=\"sap-icon://suitcase\" press=\"onHandleHU\" tooltip=\"By HU\" visible=\"false\"/>-->\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/LoadShipment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.LoadShipment\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>pageTitle}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>pageTitle}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" liveChange=\"onHandleBinding\"\n\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"shipForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>form1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>deliveryTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>stgingAreaTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>doorTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgbzo}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgtor}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<f:SimpleForm id=\"shiphuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>form2Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"scanHUDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" placeholder=\"{i18n>placeholderTitle}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\ttextAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"shhu\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanSHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label id=\"loadedLabel\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>loadedHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>loadedWTTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalWTTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadedText\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotalHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"load\" icon=\"sap-icon://accept\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>accept}\"/>\n\t\t\t\t\t\t\t<Button id=\"difference\" press=\"onHandleDifference\" visible=\"false\" icon=\"sap-icon://sys-minus\"/>\n\t\t\t\t\t\t\t<Button id=\"undoDel\" class=\"undoDel sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"loadRevert\" icon=\"sap-icon://undo\"\n\t\t\t\t\t\t\t\ttooltip=\"{i18n>loadRev}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/giStagingArea.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.giStagingArea\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\" {i18n>giBySa}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>giBySa}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"tableGISA\" class=\"sapUiTinyMargin\" mode=\"MultiSelect\" selectionChange=\"onSingleSelectGISA\" growing=\"true\"\n\t\t\t\t\t\tgrowingScrollToLoad=\"true\" width=\"auto\" items=\"{delList>/aItems}\" visible=\"false\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>delHeadInfo}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>delNo}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>name}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>vendor}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>totWeigh}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>shipPoint}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>loadStatus}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>huInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>toInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text id=\"vbelnSAgi\" text=\"{delList>Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>Btgew} {delList>Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'delList>Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadstatgi\" text=\"{parts:[{path:'delList>LoadStat'}],formatter: '.formatter.giIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'delList>HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id =\"GItoInd\" text=\"{parts:[{path:'delList>ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t\t\n\t\t\t\t</content>\n\t\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin LUnloadButton\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin moreButton\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin itemsButton\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin shipButton\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\" visible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin TOExButton\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin postButton\" icon=\"sap-icon://paper-plane\" press=\"onPostGI\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/grShipment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.grShipment\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>grByShip}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>grByShip}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"table\" class=\"sapUiTinyMargin\" mode=\"MultiSelect\" selectionChange=\"onSingleSelect\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\twidth=\"auto\" items=\"{itemList>/aItems}\" visible=\"false\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>delHeadInfo}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>delNo}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>name}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>vendor}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>totWeigh}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>shipPoint}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>loadStatus}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>huInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>toInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text id=\"vbeln\" text=\"{itemList>Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Btgew} {itemList>Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadStat\" text=\"{parts:[{path:'itemList>LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin  LUnloadButton\" icon=\"sap-icon://supplier\"\n\t\t\t\t\t\t\t\tpress=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin  moreButton\" icon=\"sap-icon://detail-view\"\n\t\t\t\t\t\t\t\tpress=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin  itemsButton\" icon=\"sap-icon://activity-items\"\n\t\t\t\t\t\t\t\tpress=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin  shipButton\" icon=\"sap-icon://shipping-status\"\n\t\t\t\t\t\t\t\tpress=\"onHandleShip\" visible=\"false\" enabled=\"false\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin  GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\"\n\t\t\t\t\t\t\t\tvisible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin  TOExButton\" icon=\"sap-icon://bbyd-active-sales\"\n\t\t\t\t\t\t\t\tpress=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin  postButton\" icon=\"sap-icon://paper-plane\"\n\t\t\t\t\t\t\t\tpress=\"onPostGR\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/unpackMaterial.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.unpackMaterial\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>packByMat}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>packByMat}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Table id=\"unpackTable\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\t\t\t\t\titems=\"{HUMatModel>/aItems}\" mode=\"MultiSelect\" selectionChange=\"unpackItemSelect\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>matList}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t<Button id=\"addItem\" tooltip=\"{i18n>addItem}\" icon=\"sap-icon://add\" press=\"onAddItem\"/>\n\t\t\t\t\t\t\t\t<Button id=\"saveButton\" text=\"Save\" type=\"Transparent\" press=\"onSave\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t<Button id=\"cancelButton\" text=\"Cancel\" type=\"Transparent\" press=\"onCancel\" visible=\"false\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>mat}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>quantUnit}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{HUMatModel>Matnr}\"/>\n\t\t\t\t\t\t\t\t\t<!--<Input value=\"{HUMatModel>Matnr}\" visible=\"{path: 'saveNew', formatter: '.enableControl'}\"/>-->\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'HUMatModel>Lfimg'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\t\t\tunit=\"{HUMatModel>Vrkme}\" state=\"{ parts: [ {path: 'HUMatModel>Lfimg'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t\t\t<!--<Input value=\"{fname}\" visible=\"{path: 'saveNew', formatter: '.enableControl'}\"/>-->\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleAccept\" icon=\"sap-icon://accept\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/UnloadShipment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.UnloadShipment\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>unlByShip}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>unShiptit}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" liveChange=\"onHandleBinding\"\n\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t<Button id=\"scanButton\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"delvForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>Delform1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>stgingAreaTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>doorTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgbzo}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgtor}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<f:SimpleForm id=\"delhuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>form2Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"scanHUunDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" placeholder=\"{i18n>placeholderTitle}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\ttextAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"shu\" tooltip=\"Bar Code scanner\" icon=\"sap-icon://bar-code\" press=\"onHandleScanHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label id=\"unloadedLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>unloadedHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<!--<Label id=\"unloadLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"Unloaded HU\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label id=\"unloadedWT\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>unloadedWT}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalWTTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadedTxt\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/UnloadedHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"totalHU\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotalHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"Back\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"Status\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"unload\" icon=\"sap-icon://accept\"/>\n\t\t\t\t\t\t\t<Button id=\"difference\" press=\"onHandleDifference\" visible=\"false\" icon=\"sap-icon://sys-minus\"/>\n\t\t\t\t\t\t\t<Button id=\"undoDel\" class=\"undoDel sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"unloadRevert\" icon=\"sap-icon://undo\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/giShipment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.giShipment\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>giShip}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>giShip}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"tableGIS\" class=\"sapUiTinyMargin\" mode=\"MultiSelect\" selectionChange=\"onSingleSelectGI\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\twidth=\"auto\" items=\"{delList>/aItems}\" busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\" visible=\" false\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>delHeadInfo}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>delNo}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>name}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>vendor}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>totWeigh}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>shipPoint}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>loadStatus}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>huInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>toInd}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text id=\"vb\" text=\"{delList>Vbeln}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{delList>Btgew} {delList>Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'delList>Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"ldStat\" text=\"{parts:[{path:'delList>LoadStat'}],formatter: '.formatter.giIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'delList>HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id =\"GItoInd\" text=\"{parts:[{path:'delList>ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin LUnloadButton\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin moreButton\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin itemsButton\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin shipButton\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin GTOButton\" icon=\"sap-icon://create\" press=\"onGenerateTO\" visible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin TOExButton\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin postButton\" icon=\"sap-icon://paper-plane\" press=\"onPostGI\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/unpackHu.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.unpackHu\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>packByHu}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>packByHu}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Table id=\"unpackHUTable\" class=\"sapUiTinyMarginTop dataStyle\" growing=\"true\" growingScrollToLoad=\"true\" width=\"auto\"\n\t\t\t\t\t\titems=\"{HUModel>/aItems}\" mode=\"MultiSelect\" selectionChange=\"unpackItemSelect\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"{i18n>lowerHu}\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t<Button id=\"addItem\" tooltip=\"{i18n>addItem}\" icon=\"sap-icon://add\" press=\"onAddItem\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>hu}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>desc}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{HUModel>Unvel}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{HUModel>Maktx}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleAccept\" icon=\"sap-icon://accept\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/App.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.App\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" displayBlock=\"true\">\n\t<App id=\"app\">\n\t\t<pages>\n\t\t\t<Page title=\"Title\">\n\t\t\t\t<content></content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/grdeliery.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.grdelivery\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>grByDel}\" id=\"title\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>grByDel}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm id=\"GRDForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>delHeadInfo}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\" visible=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>loadStatus}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>vendor}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>name}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>recivePnt}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>receiveDate}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>totWeigh}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>noOfPackage}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>huInd}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>toInd}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"loadIndicator\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/LoadStat'}],formatter: '.formatter.grIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{path: 'itemList>/aItems/0/Lfdat',type: 'sap.ui.model.type.Date', formatOptions:{pattern: 'MM/dd/yyyy'}}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Btgew} {itemList>/aItems/0/Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{= parseFloat(${itemList>/aItems/0/Anzpk}) }\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" id=\"toInd\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'itemList>/aItems/0/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin  LUnloadButton button_Size\" icon=\"sap-icon://supplier\"\n\t\t\t\t\t\t\t\tpress=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin  moreButton button_Size\" icon=\"sap-icon://detail-view\"\n\t\t\t\t\t\t\t\tpress=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin  itemsButton button_Size\" icon=\"sap-icon://activity-items\"\n\t\t\t\t\t\t\t\tpress=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin  shipButton button_Size\" icon=\"sap-icon://shipping-status\"\n\t\t\t\t\t\t\t\tpress=\"onHandleShip\" visible=\"false\" enabled=\"false\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin  GTOButton button_Size\" icon=\"sap-icon://create\" press=\"onGenerateTO\"\n\t\t\t\t\t\t\t\tvisible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin  TOExButton button_Size\" icon=\"sap-icon://bbyd-active-sales\"\n\t\t\t\t\t\t\t\tpress=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin  postButton button_Size\" icon=\"sap-icon://paper-plane\"\n\t\t\t\t\t\t\t\tpress=\"onPostGR\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/gidelivery.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.gidelivery\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>giDel}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>giDel}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin breadCrumb\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin formInput\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm id=\"GIDForm\" class=\"sapUiFormTitleH4\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>delHeadInfo}\"\n\t\t\t\t\t\tlabelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\"\n\t\t\t\t\t\temptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\" visible=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>loadStatus}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" id=\"GIdelFieldLabel\" text=\"{i18n>delNo}\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>vendor}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>name}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>shipPoint}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>shipDate}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>totWeigh}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>noOfPackage}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>huInd}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop formFont\" text=\"{i18n>toInd}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" id=\"GIloadIndicator\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/LoadStat'}],formatter: '.formatter.giIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" id=\"giDelField\" text=\"{delList>/aItems/0/Vbeln}\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" text=\"{delList>/aItems/0/Lifnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" text=\"{delList>/aItems/0/LifnrName}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/Vstel'}],formatter: '.formatter.shipPoint'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{path: 'delList>/aItems/0/Lfdat',type: 'sap.ui.model.type.Date', formatOptions:{pattern: 'MM/dd/yyyy'}}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" text=\"{delList>/aItems/0/Btgew} {delList>/Gewei}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" text=\"{= parseFloat(${delList>/aItems/0/Anzpk}) }\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/HuInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle formFont\" id=\"GItoInd\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'delList>/aItems/0/ToInd'}],formatter: '.formatter.huIndicator'}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Button id=\"back\" class=\"sapUiTinyMargin\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"Lload\" class=\"sapUiTinyMargin LUnloadButton button_Size\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"{i18n>load}\"/>\n\t\t\t\t\t\t\t<Button id=\"more\" class=\"sapUiTinyMargin moreButton button_Size\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"{i18n>more}\"/>\n\t\t\t\t\t\t\t<Button id=\"items\" class=\"sapUiTinyMargin itemsButton button_Size\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"{i18n>items}\"/>\n\t\t\t\t\t\t\t<Button id=\"ship\" class=\"sapUiTinyMargin shipButton button_Size\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"{i18n>shipment}\"/>\n\t\t\t\t\t\t\t<Button id=\"GTO\" class=\"sapUiTinyMargin GTOButton button_Size\" icon=\"sap-icon://create\" press=\"onGenerateTO\" visible=\"false\" tooltip=\"{i18n>generateTO}\"/>\n\t\t\t\t\t\t\t<Button id=\"TOEx\" class=\"sapUiTinyMargin TOExButton button_Size\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" visible=\"false\" tooltip=\"{i18n>toExec}\"/>\n\t\t\t\t\t\t\t<Button id=\"post\" class=\"sapUiTinyMargin postButton button_Size\" icon=\"sap-icon://paper-plane\" press=\"onPostGI\" visible=\"false\" tooltip=\"{i18n>post}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/LoadDelivery.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.LoadDelivery\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>loadByDel}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>pageTit}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" liveChange=\"onHandleBinding\"\n\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"delvForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>Delform1Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>stgingAreaTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>doorTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgbzo}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Lgtor}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<f:SimpleForm id=\"delhuForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>form2Title}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"scanHUinDel\" type=\"Text\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" placeholder=\"{i18n>placeholderTitle}\"\n\t\t\t\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"shu\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanHU\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label id=\"loadedLab\" class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>loadedHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalHUTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>loadedWTTitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiTinyMarginEnd\" text=\"{i18n>totalWTTitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"loadedTxt\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"totalHU\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotalHu}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/LoadedHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"load\" icon=\"sap-icon://accept\" tooltip=\"{i18n>accept}\" />\n\t\t\t\t\t\t\t<Button id=\"difference\" press=\"onHandleDifference\" visible=\"false\" icon=\"sap-icon://sys-minus\"/>\n\t\t\t\t\t\t\t<Button id=\"undoDel\" class=\"undoDel sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"loadRevert\" icon=\"sap-icon://undo\" tooltip=\"{i18n>loadRev}\"/>\t\t\t\t\t\t</contentRight>\n\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/putAway.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.putAway\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page id=\"title\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\"  level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Table id=\"toTable\" items=\"{materialList>/aItems}\" busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\" mode=\"MultiSelect\"\n\t\t\t\t\t\tshowSeparators=\"All\" selectionChange=\"onHandleSelection\" class=\"sapUiTinyMargin\" width=\"auto\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\tvisible=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"item1\">\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Matnr}\"/>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Maktx}\"/>\n\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{materialList>Vltyp} {materialList>Vlber} {materialList>Vlpla}\"/>\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [{path: 'materialList>Nltyp'}, {path: 'materialList>Nlber'}, {path: 'materialList>Nlpla'}], type: 'sap.ui.model.type.CompositeTypeModule' }\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{ parts: [{path: 'materialList>DestSu'}], formatter : '.formatter.removeColumn'}\"/>\n\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\tnumber=\"{ parts: [ {path: 'materialList>DestQuantity'}], type: 'sap.ui.model.type.Float', formatOptions: { minFractionDigits : 3, maxFractionDigits: 3 } }\"\n\t\t\t\t\t\t\t\t\t\tunit=\"{materialList>AltUnit}\" state=\"{ parts: [ {path: 'materialList>DestDifa'} ], formatter : '.formatter.changeColor' }\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column id=\"column\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"label\" text=\"{i18n>mat}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column0\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label0\" design=\"Bold\" text=\"{i18n>desc}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column1\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label1\" text=\"{i18n>srcBin}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column2\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"label2\" text=\"{i18n>destBin}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column3\" demandPopin=\"true\" minScreenWidth=\"Desktop\" popinDisplay=\"Inline\" visible=\"false\" hAlign=\"Left\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label3\" design=\"Bold\" text=\"{i18n>storUnit}\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"column4\" hAlign=\"Right\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<Label id=\"label4\" text=\"{i18n>quant}\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter footerheight\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<!--<Button id=\"LUnload\" class=\"sapThemeHighlight-asOutlineColor\" icon=\"sap-icon://supplier\" press=\"onHandleUnload\" tooltip=\"Load/Unload\"-->\n\t\t\t\t\t\t\t<!--\tvisible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"more\" icon=\"sap-icon://detail-view\" press=\"handleMore\" tooltip=\"More\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"items\" icon=\"sap-icon://activity-items\" press=\"onHandleItems\" tooltip=\"Items\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"GTO\" icon=\"sap-icon://create\" press=\"onHandleGTO\" tooltip=\"G.TO\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"TOEx\" icon=\"sap-icon://bbyd-active-sales\" press=\"onHandleTOEx\" tooltip=\"TOEx\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<Button id=\"accept\" class=\"accept sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"putAwayConfirm\" icon=\"sap-icon://accept\" tooltip=\"{i18n>accept}\"/>\n\t\t\t\t\t\t\t<Button id=\"difference\" class=\"differenceButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleDifference\" icon=\"sap-icon://sys-minus\" tooltip=\"{i18n>diff}\"/>\n\t\t\t\t\t\t\t<Button id=\"newBin\" class=\"newBinButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" press=\"onHandleNewBin\" icon=\"sap-icon://shelf\" tooltip=\"{i18n>newBin}\"/>\n\t\t\t\t\t\t\t<!--<Button id=\"undoDel\" icon=\"sap-icon://undo\" press=\"unLoad\" ariaLabelledBy=\"actionButtonLabel\" tooltip=\"Undo\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"ship\" icon=\"sap-icon://shipping-status\" press=\"onHandleShip\" tooltip=\"Ship\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"post\" icon=\"sap-icon://paper-plane\" press=\"onHandlePost\" tooltip=\"GR Post\" visible=\"false\" enabled=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"save\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"Save\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"print\" icon=\"sap-icon://print\" press=\"onHandlePrint\" tooltip=\"Print\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"byMat\" icon=\"sap-icon://product\" press=\"onHandleMat\" tooltip=\"By Material\" visible=\"false\"/>-->\n\t\t\t\t\t\t\t<!--<Button id=\"byHU\" icon=\"sap-icon://suitcase\" press=\"onHandleHU\" tooltip=\"By HU\" visible=\"false\"/>-->\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/UnPack.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gss.newWarehouseManage_R1.controller.UnPack\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>packUnpack}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>packUnpack}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"unpackForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\"\n\t\t\t\t\t\tadjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\t\t\t\t\tsingleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Input id=\"huInput\" valueHelpRequest=\"onHandlePoHelp\" submit=\"getHUInput\" placeholder=\"{i18n>handlUnit}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\ttextAlign=\"Begin\" maxLength=\"20\"/>\n\t\t\t\t\t\t\t\t<Button id=\"huScanBut\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onScanUnpack\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>packMat}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>desc}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>plant}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>storLoc}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>warehseNo}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>storBin}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'packItems>/aItems/0/Vhilm'}],formatter: '.formatter.unpack'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'packItems>/aItems/0/Maktx'}],formatter: '.formatter.unpack'}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{packItems>/aItems/0/Werks}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{packItems>/aItems/0/Lgort}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{packItems>/aItems/0/Lgnum}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{packItems>/aItems/0/Lgtyp} {packItems>/aItems/0/Lgpla}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<!--<contentMiddle>-->\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<!--<Toolbar id=\"footerbar\" visible=\"false\">-->\n\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"byMat\" class=\"byMatButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://product\" press=\"onHandleMat\" enabled=\"false\" tooltip=\"{i18n>byMat}\"/>\n\t\t\t\t\t\t\t<Button id=\"byHU\" class=\"byHUButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://suitcase\" press=\"onHandleHU\" enabled=\"false\" tooltip=\"{i18n>byHu}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/controller/UnPack.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.UnPack\", {\r\n\t\tformatter: formatter,\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tutilities.setParentScreen(this.getGlobalModel().getProperty(\"/parentScreen\"), this);\r\n\t\t\t\t\tthis.getHUInput();\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getView().byId(\"huInput\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"huInput\").setMaxLength(10);\r\n\t\t\tvar pack = this.getGlobalModel().getProperty(\"/pack\");\r\n\t\t\tthis.getView().byId(\"unpackForm\").setTitle(pack);\r\n\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\t//Fragement Code for MessagePopover\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tgetHUInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"huInput\").getValue(),\r\n\t\t\t\t_delVal = this.getGlobalModel().getProperty(\"/currentDelNo\");\r\n\t\t\tthis.getGlobalModel().setProperty(\"/currentHuVal\", _inputValue);\r\n\t\t\tvar whenOdataCall = this.callOdataService().grPackKeyFields(this, _delVal, _inputValue);\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tvar data = this.getModelData(\"packItems\").aItems[0];\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\tif (data.MatInd === \"X\") {\r\n\t\t\t\t\tthis.getView().byId(\"byMat\").setEnabled(false);\r\n\t\t\t\t\tthis.getView().byId(\"byHU\").setEnabled(true);\r\n\t\t\t\t} else if (data.MatInd === \"Y\") {\r\n\t\t\t\t\tthis.getView().byId(\"byMat\").setEnabled(true);\r\n\t\t\t\t\tthis.getView().byId(\"byHU\").setEnabled(true);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getView().byId(\"byMat\").setEnabled(true);\r\n\t\t\t\t\tthis.getView().byId(\"byHU\").setEnabled(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"huInput\", \"\");\r\n\t\t\tthis.getHUInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\t\t// ============================================\r\n\t\t// method called when byMat button is pressed\r\n\t\t//navigates to unpackmaterial page\r\n\t\t// ============================================\r\n\t\tonHandleMat: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unpackMaterial\", this);\r\n\t\t},\r\n\t\t// ============================================\r\n\t\t// method called when byHu button is pressed\r\n\t\t//navigates to unpackhu page\r\n\t\t// ============================================\r\n\t\tonHandleHU: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unpackHu\", this);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/view/giShip.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.giShip\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page id=\"title\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>shipTitle}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\" liveChange=\"onHandleBinding\"\n\t\t\t\t\t\twidth=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"{i18n>barCode}\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t</Toolbar>\n\t\t\t\t<content>\n\t\t\t\t\t<f:SimpleForm id=\"grShip\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"Shipment Information\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>shipLbl}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>exIdNo}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>contId}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>shipType}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>shipRoute}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Text id=\"shipment\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{shipList>/aItems/0/Tknum}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"eiNo\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'shipList>/aItems/0/Exti1'}],formatter: '.formatter.shipInfo'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"contID\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'shipList>/aItems/0/Signi'}],formatter: '.formatter.shipInfo'}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"shipTyp\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{shipList>/aItems/0/Shtyp}\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"shipRoute\" class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\"\n\t\t\t\t\t\t\t\t\t\ttext=\"{parts:[{path:'shipList>/aItems/0/Route'}],formatter: '.formatter.shipInfo'}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<f:SimpleForm id=\"grShipData\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"{i18n>actData}\" labelSpanXL=\"3\" labelSpanL=\"3\"\n\t\t\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\"\n\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\"></f:SimpleForm>\n\t\t\t\t\t<HBox></HBox>\n\t\t\t\t\t<VBox>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label class=\"sapUiSmallMargin\" text=\"{i18n>currLdStrt}\"/>\n\t\t\t\t\t\t\t<DatePicker  class=\"sapUiTinyMargin\" id=\"DP1\" value=\"{path:'shipList>/aItems/0/Dalbg', type:'sap.ui.model.type.Date', formatOptions: {style: 'medium', UTC: true}}\"/>\n\t\t\t\t\t\t\t<VBox></VBox>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label class=\"sapUiSmallMargin\" text=\"{i18n>actLdStTime}\"/>\n\t\t\t\t\t\t\t<TimePicker class=\"sapUiTinyMargin\" id=\"TP3\" displayFormat=\"HH:mm:ss\" placeholder=\"\"/>\n\t\t\t\t\t\t\t<VBox></VBox>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label class=\"sapUiSmallMargin\" text=\"{i18n>actLdEnDt}\"/>\n\t\t\t\t\t\t\t<DatePicker class=\"sapUiTinyMargin\" id=\"DP2\" value=\"{path:'shipList>/aItems/0/Dalen', type:'sap.ui.model.type.Date', formatOptions: {style: 'medium', UTC: true}}\"/>\n\t\t\t\t\t\t\t<VBox></VBox>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label class=\"sapUiSmallMargin\" text=\"{i18n>actLdEndTime}\"/>\n\t\t\t\t\t\t\t<TimePicker class=\"sapUiTinyMargin\" id=\"TP4\" displayFormat=\"HH:mm:ss\" placeholder=\"\"/>\n\t\t\t\t\t\t\t<VBox></VBox>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</VBox>\n\t\t\t\t</content>\n\t\t\t\t<footer id=\"footer\"\n\t\t\t\t\tclass=\"sapContrast sapContrastPlus sapMBar sapMBar-CTX sapMContent-CTX sapMFooter-CTX sapMIBar sapMIBar-CTX sapMPageFooter\">\n\t\t\t\t\t<Bar id=\"footerbar\" class=\"page_footer\">\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t\t<Button id=\"back\" icon=\"sap-icon://nav-back\" press=\"onNavBack\" tooltip=\"{i18n>back}\" visible=\"false\"/>\n\t\t\t\t\t\t\t<Button id=\"message-popup\" icon=\"sap-icon://message-popup\" tooltip=\"{i18n>stat}\" type=\"Emphasized\" press=\"handleMessagePopoverPress\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button id=\"save\"  class =\"saveButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://save\" press=\"onHandleSave\" tooltip=\"{i18n>save}\"/>\n\t\t\t\t\t\t\t<Button id=\"print\" class =\"printButton sapUiTinyMargin sapUiResponsiveContentPadding button_Size\" icon=\"sap-icon://print\" press=\"onHandlePrint\" tooltip=\"{i18n>print}\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t<!--</contentMiddle>-->\n\t\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t\t</Bar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/view/LoadInq_HU.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"gss.newWarehouseManage_R1.controller.LoadInq_HU\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>LoadInqHUtitle}\">\n\t\t\t\t<customHeader>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Title id=\"rfScreen\" text=\"{i18n>LoadInqHUtitle}\" level=\"H2\" textAlign=\"Center\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button id=\"syuser\" icon=\"sap-icon://account\" type=\"Transparent\" press=\"handleUserNamePress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</customHeader>\n\t\t\t\t<content>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Breadcrumbs class=\"sapUiTinyMarginBegin\" id=\"breadCrumbs\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Toolbar id=\"toolbarheader\">\n\t\t\t\t\t\t<Input class=\"sapUiTinyMarginBegin\" id=\"inputValue\" value=\"{matList>/TO}\" valueHelpRequest=\"onHandlePoHelp\" submit=\"iGetInput\"\n\t\t\t\t\t\t\tliveChange=\"onHandleBinding\" width=\"100%\" textAlign=\"Begin\"/>\n\t\t\t\t\t\t<Button id=\"scanButton\" tooltip=\"Bar Code scanner\" icon=\"sap-icon://bar-code\" press=\"onHandleScanInput\" ariaLabelledBy=\"actionButtonLabel\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<f:SimpleForm id=\"huForm\" editable=\"false\" layout=\"ResponsiveGridLayout\" title=\"\" labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\"\n\t\t\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\n\t\t\t\t\t\tsingleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>ShippingPointtitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>Statustitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>TotalWeighttitle}\"/>\n\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop\" text=\"{i18n>TotalVolumetitle}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"1990\"/>-->\n\t\t\t\t\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"Completed\"/>-->\n\t\t\t\t\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"43,333 KG\"/>-->\n\t\t\t\t\t\t\t\t\t<!--<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"0,000\"/>-->\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/Vstel}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/DelStat}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/TotHuWt} {itemList>/aItems/0/WtUnit}\"/>\n\t\t\t\t\t\t\t\t\t<Text class=\"sapUiTinyMarginTop sapUiTinyMarginBegin dataStyle\" text=\"{itemList>/aItems/0/HuVolume}\"/>\n\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<Table class=\"sapUiTinyMarginBegin\" id=\"huInqTable\" inset=\"false\" items=\"{itemList>/aItems}\" visible=\"false\" growing=\"true\"\n\t\t\t\t\t\tgrowingScrollToLoad=\"true\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title text=\"\"/>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column width=\"auto\">\n\t\t\t\t\t\t\t\t<Text text=\"{i18n>AssociatedHU}\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column width=\"auto\">\n\t\t\t\t\t\t\t\t<Text text=\"{i18n>LoadStatus}\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column width=\"auto\">\n\t\t\t\t\t\t\t\t<Text text=\"{i18n>DeliveryType}\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column width=\"auto\">\n\t\t\t\t\t\t\t\t<Text text=\"{i18n>Warehouse}\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>Exidv'},{path:'itemList>Exida'}],formatter: '.formatter.status'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>HuStatDesc}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{parts:[{path:'itemList>DelType'}],formatter: '.formatter.delType'}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{itemList>Lgnum}\"/>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gss/newWarehouseManage_R1/controller/grStagingArea.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grStagingArea\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar _screen = this.getCurrentScrn();\r\n\t\t\tvar _screenModel = this.getScreenModel(_screen);\r\n\t\t\tvar _text = this.getView().getModel(\"i18n\").getResourceBundle().getText(_screenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"grBySa\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(_text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when an Item is selected in a table*/\r\n\t\t/*Checks the Indicators for the selected item */\r\n\t\t/* =========================================================== */\r\n\t\tonSingleSelectSA: function(oEvent) {\r\n\t\t\tvar len = this.getView().byId(\"tableSA\").getSelectedItems().length;\r\n\t\t\tif (len === 1) {\r\n\t\t\t\tvar vbeln = this.getView().byId(\"tableSA\").getSelectedItem().getBindingContext(\"itemList\").getObject().Vbeln;\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", vbeln);\r\n\t\t\t\tvar obj = this.getView().byId(\"tableSA\").getSelectedItem().getBindingContext(\"itemList\").getObject();\r\n\t\t\t\tthis.checkInd(obj, \"false\");\r\n\t\t\t} else if (len > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t} else if (len === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue().toUpperCase();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"tableSA\").setBusy(true);\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\t\t\tutilities.checkVisible(this);\r\n\t\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"\");\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Items button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grShipItems\", this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when UnLoad button pressed*/\r\n\t\t/*navigates to UnLoad page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unloadDelivery\", this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GI Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO();\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"tableSA\", \"itemList\", \"T\");\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Putaway page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"putaway\", this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGR: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\"));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"tableSA\", \"itemList\", \"C\");\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grStagingArea\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grStagingArea\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grStagingArea\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grStagingArea\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/UnloadDelivery.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.UnloadDelivery\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadDelivery\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n                    this.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) { // to get parent screen properties from Global model\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentDelNo\")); // to set input value to global model property\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput(); // odata function call to get backend response\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get input field value\r\n\t\t\tvar huNo = this.getView().byId(\"scanHUinDel\").getValue(); // To get input field value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getunloadDetails(_inputValue, huNo);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput:function(){\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\"); // function call to set barcode value to input field\r\n\t\t    this.iGetInput();\r\n\t\t},\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanHU:function(){\r\n\t\t\tutilities.barcodeReader(this, \"scanHUinDel\",\"\"); // function call to set barcode value to input field\r\n\t\t    this.iGetInput();\r\n\t\t},\r\n\r\n\t\t// ==========================================\r\n\t\t// method call to bind fragment to that view\r\n\t\t// ==========================================\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId(); // to get the id of the view\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId); // to set the view id to the corresponding global model property\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\"); // to load fragments\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\",loadFragment, this); // to set id to the fragment\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded); // to add the loaded fragment to the view\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t// =========================================================\r\n\t\t// method to get input field details and send to odata call\r\n\t\t// =========================================================\r\n\t\tgetunloadDetails: function(sInputValue, huNo) {\r\n\t\t\tvar shipNo = sInputValue; // To get input field value\r\n\t\t\t// var huNo = this.getView().byId(\"scanHUinDel\").getValue(); // To get input field value\r\n\t\t\tvar procInd = \"Y\"; // Indicator to get data in Unload process\r\n\t\t\tvar LoadInd = \"X\"; // Indicator for Unload process\r\n\t\t\tif (shipNo && huNo) { // To check if both fields has values\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValueState(sap.ui.core.ValueState.None); // To set value state for input field\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().UnloadDetails(this, shipNo, huNo, \"\", LoadInd);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\r\n\t\t\t\t}.bind(this));// To pass the input values to the function&nbsp;\r\n\t\t\t} else if (shipNo && !huNo) { // To check if one field is empty\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().UnloadDetails(this, shipNo, huNo, procInd, \"\"); // To pass input values with indicator when a field is empty\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t\t} else if (!shipNo && !huNo) { // To check if both fields are empty\r\n\t\t\t\tvar hdr = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterDel\");\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(hdr); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t\tvar hu = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterHU\");\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setPlaceholder(hu); // To set placeholder for input field&nbsp;\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setMaxLength(20);\r\n\t\t\t} else if (!shipNo && huNo) { // To check if one field is empty\r\n\t\t\t\tvar hdr1 = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterDel\");\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(hdr1); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ==================================\r\n\t\t// function call to unload materials\r\n\t\t// ==================================\r\n\t\tunload: function() {\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"X\",\r\n\t\t\t\tHuStatus = \"HU04\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, LoadInd);\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n                    utilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ===========================================\r\n\t\t// function call to revert the unload process\r\n\t\t// ===========================================\r\n\t\tunloadRevert: function() {\r\n\t\t\tthis.fragmentLoaded.open(); // to open the loaded fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"undoProc\")); // to set text for the loaded fragment\r\n\t\t},\r\n\r\n\t\t// ===================================\r\n\t\t// function call to confirm materials \r\n\t\t// ===================================\r\n\t\tonConfirm: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"X\",\r\n\t\t\t\tHuStatus = \"HU03\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, LoadInd);\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n                     utilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to close fragment opened in the view\r\n\t\t// ============================================\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t},\r\n\t\t\r\n\t\t// ===================================================\r\n\t\t// method to destroy the fragments loaded in the view\r\n\t\t// ===================================================\r\n\t\tonExit: function() {\r\n\t\t\tif (this.fragmentLoaded) {\r\n\t\t\t\tthis.fragmentLoaded.destroy(true); // to destroy the loaded fragments\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/grShipItems.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, ResourceModel, BaseController, formatter, JSONModel, MessageToast, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grShipItems\", {\r\n\t\tformatter: formatter,\r\n\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.titleSet();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) {\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.iGetInput();\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar callFragment = this.gssFragmentsFunction().loadFragment(this, \"difference\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"diff\", callFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getView().byId(\"title\").setTitle(this.getGlobalModel().getProperty(\"/title\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when diff button is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonHandleDifference: function() {\r\n\t\t\t// for the putaway diff process\r\n\t\t\t//OLD CODE var items = this.gssCallFunction().selectedItems(this, \"toTable\");\r\n\t\t\tvar items = utilities.selectedItems(this, \"table\");\r\n\r\n\t\t\tif (items.length === 1) {\r\n\t\t\t\t//fragment code is Moved to OnInit \r\n\t\t\t\tvar objects = utilities.getItems(this, \"table\", \"itemList\"),\r\n\t\t\t\t\toItem = objects.getProperty();\r\n\t\t\t\tif (oItem.Posnr !== this._item) {\r\n\t\t\t\t\tvar newItemSelected = \"X\";\r\n\t\t\t\t\tthis._item = oItem.Posnr;\r\n\t\t\t\t}\r\n\t\t\t\tvar oItemList = this.gssDifferenceFunction().setShipItemsDiffModel(oItem, this.fragmentLoaded);\r\n\t\t\t\tvar oModel = new JSONModel(oItemList);// Json Model creation and setting data\r\n\t\t\t\tthis.fragmentLoaded.setModel(oModel, \"handleDiff\");//setting model to fragment\r\n\t\t\t\tthis.fragmentLoaded.open();//open fragment\r\n\t\t\t} else if (items.length === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastItemSel\"));//warning toast\r\n\t\t\t} else if (items.length > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastSelMat\"));//warning toast\r\n\t\t\t}\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Handling Selection on table function\r\n\t\t * @param {object} [this]  oView\r\n\t\t * @param {string} [\"\"] control ID*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleSelection: function() {\r\n\t\t\tthis._selectedItem = utilities.selectedItems(this, \"table\");//To get selected items\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  liveChange handling function Actual value given  */\r\n\t\t/* =========================================================== */\r\n\t\tonHandleActual: function(oEvent) {\r\n\t\t\tvar actualVal = oEvent.getParameter(\"newValue\");\r\n\t\t\tvar objects = utilities.getItems(this, \"table\", \"itemList\");\r\n\t\t\tthis.modelObjects = objects.getProperty();\r\n\t\t\tthis.gssDifferenceFunction().diffShipCalculation(actualVal, this.modelObjects.TargQty, this.fragmentLoaded, this.getGlobalModel().getProperty(\r\n\t\t\t\t\"/viewId\") + \"diff\");\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when ok is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonDiffConfirm: function() {\r\n\t\t\tvar destTarget = this.fragmentLoaded.getModel(\"handleDiff\").getData().destTarget;//get Target Quantity from model\r\n\t\t\tvar destActa = sap.ui.core.Fragment.byId(this.getView().getId() + \"diff\", \"actual\").getValue();//get Actual Quantity entered from fragment\r\n\t\t\tvar differenceVal = destTarget - destActa;\r\n\t\t\tvar destDifa = differenceVal;\r\n\t\t\tthis.destDifa = \"X\";\r\n\t\t\tvar sValInd = \"Lfimg\";\r\n\t\t\tthis._updateTable(destActa, destDifa, destTarget, sValInd);//update the table\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when cancel is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonDiffCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes fragment \r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling updation of differenced quantity\r\n\t\t/* =========================================================== */\r\n\t\t_updateTable: function(destActa, destDifa, destTarget, sProperty, sValue) {\r\n\t\t\t// for the GR diff process\r\n\t\t\tvar aItems = this.getView().byId(\"table\").getModel(\"itemList\").getData().aItems;\r\n\t\t\taItems.forEach(function(oLineData) {\r\n\t\t\t\tvar selectItemVal = this.getView().byId(\"table\").getSelectedItem().getBindingContext(\"itemList\").getObject().Posnr;\r\n\t\t\t\tthis.selectVal = selectItemVal;\r\n\t\t\t\tif (oLineData.Posnr === selectItemVal) {\r\n\t\t\t\t\tif (sProperty === \"Lfimg\") {\r\n\t\t\t\t\t\toLineData.Lfimg = destActa;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(this));\r\n\t\t\tvar aData = this.getView().byId(\"table\").getModel(\"itemList\").getData();\r\n\t\t\taData.aItems = aItems;\r\n\t\t\tthis.getView().byId(\"table\").getModel(\"itemList\").setData(aData);\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling barcode scan\r\n\t\t/* =========================================================== */\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getGlobalModel().getProperty(\"/currentDelNo\");\r\n\t\t\tthis.getView().byId(\"inputValue\").setValue(_inputValue);\r\n\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t whenOdataCall.done(function() {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling save of updated items\r\n\t\t*Event handling function when save is pressed\r\n\t\t/* =========================================================== */\r\n\t\tonHandleSave: function() {\r\n\t\t\tvar whenOdataCall = this.callOdataService().onSaveItems(this, this._selectedItem, \"table\", \"I\");\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tMessageToast.show(this.geti18n(this.getUpdateToast()));\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/LoadInq_HU.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, formatter, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.LoadInq_HU\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadInq_HU\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\tvar dataModel = this.getView().getModel(\"itemList\");\r\n\t\t\t\t\tif (dataModel) {\r\n\t\t\t\t\t\tdataModel.setData(null);\r\n\t\t\t\t\t\tdataModel.updateBindings(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/currentView\", this);\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get HU input value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.callOdataService().getLoadInq(this, _inputValue, \"\", \"\"); // function call to get lower level HU's for the HU input\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/grDelItems.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, ResourceModel, BaseController, formatter, JSONModel, MessageToast, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grDelItems\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.titleSet();\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) {\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tthis.iGetInput();\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar callFragment = this.gssFragmentsFunction().loadFragment(this, \"difference\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"diff\", callFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn();\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen);\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel);\r\n\t\t\tthis.getView().byId(\"itemInput\").setPlaceholder(Text);\r\n\t\t\tthis.getView().byId(\"itemInput\").setMaxLength(10);\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when diff button is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonHandleDifference: function() {\r\n\t\t\t// for the putaway diff process\r\n\t\t\t//OLD CODE var items = this.gssCallFunction().selectedItems(this, \"toTable\");\r\n\t\t\tvar items = utilities.selectedItems(this, \"tableitems\");\r\n\r\n\t\t\tif (items.length === 1) { //check items length\r\n\t\t\t\t//fragment code is Moved to OnInit \r\n\t\t\t\tvar objects = utilities.getItems(this, \"tableitems\", \"itemList\"),\r\n\t\t\t\t\toItem = objects.getProperty();\r\n\t\t\t\tif (oItem.Posnr !== this._item) {\r\n\t\t\t\t\tvar newItemSelected = \"X\";\r\n\t\t\t\t\tthis._item = oItem.Posnr;\r\n\t\t\t\t}\r\n\t\t\t\tvar oItemList = this.gssDifferenceFunction().setDelItemsDiffModel(oItem, this.fragmentLoaded, this.getGlobalModel().getProperty(\r\n\t\t\t\t\t\"/viewId\") + \"diff\");\r\n\t\t\t\tvar oModel = new JSONModel(oItemList); // Json Model creation and setting data\r\n\r\n\t\t\t\tthis.fragmentLoaded.setModel(oModel, \"handleDiff\"); //setting model to fragment\r\n\t\t\t\tthis.fragmentLoaded.open(); //open fragment\r\n\t\t\t} else if (items.length === 0) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastItemSel\")); //warning toast\r\n\t\t\t} else if (items.length > 1) {\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastSelMat\")); //warning toast\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Selection on table function\r\n\t\t * @param {object} [this]  oView\r\n\t\t * @param {string} [\"\"] control ID*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleSelection: function() {\r\n\t\t\tthis._selectedItem = utilities.selectedItems(this, \"tableitems\"); //To get selected items\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  liveChange handling function Actual value given  */\r\n\t\t/* =========================================================== */\r\n\t\tonHandleActual: function(oEvent) {\r\n\t\t\tvar actualVal = oEvent.getParameter(\"newValue\");\r\n\t\t\tvar objects = utilities.getItems(this, \"tableitems\", \"itemList\");\r\n\t\t\tthis.modelObjects = objects.getProperty();\r\n\t\t\tthis.gssDifferenceFunction().diffShipCalculation(actualVal, this.modelObjects.TargQty, this.fragmentLoaded, this.getGlobalModel().getProperty(\r\n\t\t\t\t\"/viewId\") + \"diff\");\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when ok is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonDiffConfirm: function() {\r\n\t\t\tvar destTarget = this.fragmentLoaded.getModel(\"handleDiff\").getData().destTarget; //get Target Quantity from model\r\n\t\t\tvar destActa = sap.ui.core.Fragment.byId(this.getView().getId() + \"diff\", \"actual\").getValue(); //get Actual Quantity entered from fragment\r\n\t\t\tvar differenceVal = destTarget - destActa;\r\n\t\t\tvar destDifa = differenceVal;\r\n\t\t\tthis.destDifa = \"X\";\r\n\t\t\tvar sValInd = \"Lfimg\";\r\n\t\t\tthis._updateTable(destActa, destDifa, destTarget, sValInd); //update the table\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling Difference function\r\n\t\t  Event handling function when cancel is pressed  */\r\n\t\t/* =========================================================== */\r\n\t\tonDiffCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); //closes fragment \r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling updation of differenced quantity\r\n\t\t/* =========================================================== */\r\n\t\t_updateTable: function(destActa, destDifa, destTarget, sProperty, sValue) {\r\n\t\t\t// for the GR diff process\r\n\t\t\tvar aItems = this.getView().byId(\"tableitems\").getModel(\"itemList\").getData().aItems;\r\n\t\t\taItems.forEach(function(oLineData) {\r\n\t\t\t\tvar selectItemVal = this.getView().byId(\"tableitems\").getSelectedItem().getBindingContext(\"itemList\").getObject().Posnr;\r\n\t\t\t\tthis.selectVal = selectItemVal;\r\n\t\t\t\tif (oLineData.Posnr === selectItemVal) {\r\n\t\t\t\t\tif (sProperty === \"Lfimg\") {\r\n\t\t\t\t\t\toLineData.Lfimg = destActa;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(this));\r\n\t\t\tvar aData = this.getView().byId(\"tableitems\").getModel(\"itemList\").getData();\r\n\t\t\taData.aItems = aItems;\r\n\t\t\tthis.getView().byId(\"tableitems\").getModel(\"itemList\").setData(aData); //set updated data to view\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling barcode scan\r\n\t\t/* =========================================================== */\r\n\t\tonScanUnpack: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"itemInput\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getGlobalModel().getProperty(\"/currentDelNo\");\r\n\t\t\tthis.getView().byId(\"itemInput\").setValue(_inputValue);\r\n\t\t\tthis.getView().byId(\"itemInput\").setEnabled(false);\r\n\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t whenOdataCall.done(function() {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling save of updated items\r\n\t\t*Event handling function when save is pressed\r\n\t\t/* =========================================================== */\r\n\t\tonHandleSave: function() {\r\n\t\t\tvar whenOdataCall = this.callOdataService().onSaveItems(this, this._selectedItem, \"tableitems\", \"I\");\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tMessageToast.show(this.geti18n(this.getUpdateToast()));\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/UnloadShipment.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.UnloadShipment\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.UnloadShipment\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to get input details from the view\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) { // to get parent screen properties from Global model\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentShip\")); // to set input value to global model property\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUunDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput(); // odata function call to get backend response\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUunDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get input field value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getunloadDetails(_inputValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t// ==========================================\r\n\t\t// method call to bind fragment to that view\r\n\t\t// ==========================================\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanHU: function() {\r\n\t\t\tutilities.barcodeReader(this, \"scanHUinDel\", \"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t// =========================================================\r\n\t\t// method to get input field details and send to odata call\r\n\t\t// =========================================================\r\n\t\tgetunloadDetails: function(sInputValue) {\r\n\t\t\tvar shipNo = sInputValue; // To get input field value\r\n\t\t\tvar huNo = this.getView().byId(\"scanHUunDel\").getValue(); // To get input field value\r\n\t\t\tvar hu = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterHU\");\r\n\t\t\tvar ship = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterShip\");\r\n\t\t\tvar procInd = \"Y\"; // Indicator to get data in Unload process\r\n\t\t\tvar LoadInd = \"X\"; // Indicator for Unload process\r\n\t\t\tif (shipNo && huNo) { // To check if both fields has values\r\n\t\t\t\tthis.getView().byId(\"scanHUunDel\").setValueState(sap.ui.core.ValueState.None); // To set value state for input field\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().UnloadDetails(this, shipNo, huNo, \"\", LoadInd);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// this.gssCallFunction().UnloadDetails(this, shipNo, huNo, procInd, LoadInd); // To pass the input values to the function&nbsp;\r\n\t\t\t} else if (shipNo && !huNo) { // To check if one field is empty\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().UnloadDetails(this, shipNo, huNo, procInd, \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// this.gssCallFunction().UnloadDetails(this, shipNo, huNo, procInd); // To pass input values with indicator when a field is empty\r\n\t\t\t} else if (!shipNo && !huNo) { // To check if both fields are empty\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(ship); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t\tthis.getView().byId(\"scanHUunDel\").setPlaceholder(hu); // To set placeholder for input field&nbsp;\r\n\t\t\t\tthis.getView().byId(\"scanHUunDel\").setMaxLength(20);\r\n\t\t\t} else if (!shipNo && huNo) { // To check if one field is empty\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(ship); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ==================================\r\n\t\t// function call to unload materials\r\n\t\t// ==================================\r\n\t\tunload: function() {\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"X\",\r\n\t\t\t\tHuStatus = \"HU04\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, LoadInd);\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ===========================================\r\n\t\t// function call to revert the unload process\r\n\t\t// ===========================================\r\n\t\tunloadRevert: function() {\r\n\t\t\tthis.fragmentLoaded.open(); // to open the loaded fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"undoProc\")); // to set text for the loaded fragment\r\n\r\n\t\t},\r\n\r\n\t\t// ===================================\r\n\t\t// function call to confirm materials \r\n\t\t// ===================================\r\n\t\tonConfirm: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"X\",\r\n\t\t\t\tHuStatus = \"HU03\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, LoadInd);\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to close fragment opened in the view\r\n\t\t// ============================================\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t}\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/GRGIDelItems.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller,BaseController, formatter, JSONModel, MessageBox, MessageToast, utilities, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.GRGIDelItems\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.GRGIDelItems\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.GRGIDelItems\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.GRGIDelItems\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.GRGIDelItems\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/unpackHu.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.unpackHu\", {\r\n\t\tformatter: formatter,\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tthis.oDataCall();\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar callFragment = this.gssFragmentsFunction().loadFragment(this, \"addHU\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"addHU\", callFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tpackHuScan: function() {\r\n\t\t\tutilities.barcodeReader(this, \"HU\", \"addHU\");\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\t\t// ==================================================\r\n\t\t// method to get packed/unpacked HUs for the delivery\r\n\t\t// ================================================== \r\n\t\toDataCall: function() {\r\n\t\t\tvar _huVal = this.getGlobalModel().getProperty(\"/currentHuVal\"), //get HU for the delivery\r\n\t\t\t\t_shipInd = this.getGlobalModel().getProperty(\"/shipInd\"), //get ship indicator\r\n\t\t\t\t_delVal = this.getGlobalModel().getProperty(\"/currentDelVal\"); //get Delivery no\r\n\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _huVal, _shipInd, _delVal);\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\tonHandleAccept: function() {\r\n\t\t\tvar tableRowSelectedItems = utilities.selectedItems(this, \"unpackTable\");\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/shipInd\") === \"P\") {\r\n\t\t\t\tvar ind = \"H\";\r\n\t\t\t} else {\r\n\t\t\t\tind = \"I\";\r\n\t\t\t}\r\n\t\t\tthis.callOdataService().acceptItems(this, tableRowSelectedItems, \"unpackTable\", ind);\r\n\r\n\t\t},\r\n\t\tonAddItem: function() {\r\n\t\t\tthis.fragmentLoaded.open();\r\n\r\n\t\t},\r\n\t\thuSave: function() {\r\n\t\t\tvar hu = sap.ui.core.Fragment.byId(this.getView().getId() + \"addHU\", \"HU\").getValue();\r\n\t\t\tvar whenOdataCall = this.callOdataService().huSave(this, hu, \"unpackTable\", \"HUModel\");\r\n\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tthis.huCancel();\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\thuCancel: function() {\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"addHU\", \"HU\").setValue(\"\");\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/giShip.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\",\r\n\t\"sap/m/MessageBox\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.giShip\", {\r\n\t\tformatter: formatter,\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tthis.titleSet();\r\n\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentDelNo\"));\r\n\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\tthis.oDataCall();\r\n\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\t\t},\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\toDataCall: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().grKeyFields(this, _inputValue, \"X\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t\tvar data = oResult.getData().aItems[0];\r\n\t\t\t\t\tif (data.ShipInd === \"\") {\r\n\t\t\t\t\t\tvar currentTime = sap.ui.core.format.DateFormat.getTimeInstance({\r\n\t\t\t\t\t\t\tpattern: \"KK:mm:ss\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar ctimeConversion = new Date(0).getTimezoneOffset() * 60 * 1000;\r\n\t\t\t\t\t\tvar ctimeStr = currentTime.format(new Date(data.Ualbg.ms + ctimeConversion));\r\n\t\t\t\t\t\tthis.getView().byId(\"TP3\").setValue(ctimeStr);\r\n\t\t\t\t\t\tvar actualTime = sap.ui.core.format.DateFormat.getTimeInstance({\r\n\t\t\t\t\t\t\tpattern: \"KK:mm:ss\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar atimeConversion = new Date(0).getTimezoneOffset() * 60 * 1000;\r\n\t\t\t\t\t\tvar atimeStr = actualTime.format(new Date(data.Ualen.ms + atimeConversion));\r\n\t\t\t\t\t\tthis.getView().byId(\"TP4\").setValue(atimeStr);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHandleSave: function(oEvent) {\r\n\t\t\tvar startDate = this.getView().byId(\"DP1\").getValue(),\r\n\t\t\t\tendDate = this.getView().byId(\"DP2\").getValue(),\r\n\t\t\t\tstartTime = this.getView().byId(\"TP3\").getValue(),\r\n\t\t\t\tendTime = this.getView().byId(\"TP4\").getValue(),\r\n\t\t\t\ttkNum = this.getView().byId(\"shipment\").getText();\r\n\r\n\t\t\tvar dateFormat = sap.ui.core.format.DateFormat.getDateInstance({\r\n\t\t\t\tpattern: \"YYYYMMdd\"\r\n\t\t\t});\r\n\t\t\tvar startDateFormatted = dateFormat.format(new Date(startDate)),\r\n\t\t\t\tendDateFormatted = dateFormat.format(new Date(endDate));\r\n\r\n\t\t\t// this.FormatDate = new Date(startDate);\r\n\t\t\t// this.StartYear = this.FormatDate.getFullYear();\r\n\t\t\t// this.StartMonth = this.FormatDate.getMonth() + 1;\r\n\t\t\t// this.StartDate = this.FormatDate.getDate();\r\n\t\t\t// startDateFormatted = \"\".concat(this.StartYear, this.StartMonth, this.StartDate);\r\n\r\n\t\t\t// this.FormatDate = new Date(endDate);\r\n\t\t\t// this.StartYear = this.FormatDate.getFullYear();\r\n\t\t\t// this.StartMonth = this.FormatDate.getMonth() + 1;\r\n\t\t\t// this.StartDate = this.FormatDate.getDate();\r\n\t\t\t// endDateFormatted = \"\".concat(this.StartYear, this.StartMonth, this.StartDate);\r\n\r\n\t\t\tif (startDate > endDate) {\r\n\t\t\t\tMessageBox.error(this.geti18n(\"dateError\"));\r\n\t\t\t} else if (startDate < endDate) {\r\n\t\t\t\tthis.callOdataService().giShipUpdate(this, startDateFormatted, endDateFormatted, startTime, endTime, tkNum);\r\n\t\t\t} else if (startDate === endDate && startTime > endTime) {\r\n\t\t\t\tMessageBox.error(this.geti18n(\"timeError\"));\r\n\t\t\t} else if (startDate === endDate && startTime < endTime) {\r\n\t\t\t\tthis.callOdataService().giShipUpdate(this, startDateFormatted, endDateFormatted, startTime, endTime, tkNum);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/App.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"gss.newWarehouseManage_R1.controller.App\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.App\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.App\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.App\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.App\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/grdelivery.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grdelivery\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar _screen = this.getCurrentScrn();\r\n\t\t\tvar _screenModel = this.getScreenModel(_screen);\r\n\t\t\tvar _text = this.getView().getModel(\"i18n\").getResourceBundle().getText(_screenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"grByDel\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(_text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getView().byId(\"GRDForm\").setBusy(true);\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", _inputValue);\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().grKeyFields(this, _inputValue);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"true\");\r\n\t\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tthis.callOdataService().barcodeReader(this, \"inputValue\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());//opens fragment\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when unload button pressed*/\r\n\t\t/*navigates to unload page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unloadDelivery\", this);// navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this);//createElements: function in BaseController to access CreateElements.js\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when items button pressed*/\r\n\t\t/*navigates to Items page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\r\n\t\t\tutilities.navigateChild(\"grDelItems\", this);// navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GR Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO();//Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost();//Performs GR Post\r\n\t\t\t}\r\n\t\t},\r\n       /* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel();//closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n       /* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));// To set text to confirmaton fragment\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tthis.getView().byId(\"title\").setBusy(true);\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleDelTO(this, \"GRDForm\", \"itemList\", \"T\");//function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() {//Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"toInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t\tthis.getView().byId(\"title\").setBusy(false);\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Putaway page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"putaway\", this);// navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGR: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId()+ \"conf\", \"popup\").setText(this.geti18n(\"postGrPop\"));// To set text to confirmaton fragment\r\n\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tthis.callOdataService().handleDelTO(this, \"GRDForm\", \"itemList\", \"C\");//function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/LoadDelivery.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.LoadDelivery\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadDelivery\r\n\t\t */\r\n\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) { // to get parent screen properties from Global model\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentDelNo\")); // to set input value to global model property\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\t// ==========================================\r\n\t\t// method call to bind fragment to that view\r\n\t\t// ==========================================\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get input field value\r\n\t\t\tvar huNo = this.getView().byId(\"scanHUinDel\").getValue(); // To get input field value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getLoadDetails(_inputValue, huNo);\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function() {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanHU: function() {\r\n\t\t\tutilities.barcodeReader(this, \"scanHUinDel\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t// =========================================================\r\n\t\t// method to get input field details and send to odata call\r\n\t\t// =========================================================\r\n\t\tgetLoadDetails: function(sInputValue, huNo) {\r\n\t\t\tvar shipNo = sInputValue; // To get input field value\r\n\t\t\tvar huNo = this.getView().byId(\"scanHUinDel\").getValue(); // To get input field value\r\n\t\t\tvar procInd = \"X\"; // Indicator for Load process\r\n\t\t\tif (shipNo && huNo) { // To check if both fields has values\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setValueState(sap.ui.core.ValueState.None); // To set value state for input field\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().LoadDetails(this, shipNo, huNo, \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\r\n\t\t\t\t}.bind(this)); // To pass the input values to the function&nbsp;\r\n\t\t\t} else if (shipNo && !huNo) { // To check if one field is empty\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().LoadDetails(this, shipNo, huNo, procInd); // To pass input values with indicator when a field is empty\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t} else if (!shipNo && !huNo) { // To check if both fields are empty\r\n\t\t\t\tvar hdr = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterDel\");\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(hdr); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t\tvar hu = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterHU\");\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setPlaceholder(hu); // To set placeholder for input field&nbsp;\r\n\t\t\t\tthis.getView().byId(\"scanHUinDel\").setMaxLength(20);\r\n\t\t\t} else if (!shipNo && huNo) { // To check if one field is empty\r\n\t\t\t\tvar hdr1 = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterDel\");\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(hdr1); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ================================\r\n\t\t// function call to load materials\r\n\t\t// ================================\r\n\t\tload: function() {\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"\",\r\n\t\t\t\tHuStatus = \"HU03\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, \"\");\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// =========================================\r\n\t\t// function call to revert the load process\r\n\t\t// =========================================\r\n\t\tloadRevert: function() {\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"undoProc\"));\r\n\t\t},\r\n\r\n\t\t// ===================================\r\n\t\t// function call to confirm materials \r\n\t\t// ===================================\r\n\t\tonConfirm: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"\",\r\n\t\t\t\tHuStatus = \"HU04\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, \"\");\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to close fragment opened in the view\r\n\t\t// ============================================\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t},\r\n\r\n\t\t// ===================================================\r\n\t\t// method to destroy the fragments loaded in the view\r\n\t\t// ===================================================\r\n\t\tonExit: function() {\r\n\t\t\tif (this.fragmentLoaded) {\r\n\t\t\t\tthis.fragmentLoaded.destroy(true); // to destroy the loaded fragments\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/LoadInq_Shipment.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, formatter, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.LoadInq_Shipment\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadInq_Shipment\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\tvar dataModel = this.getView().getModel(\"itemList\");\r\n\t\t\t\t\tif (dataModel) {\r\n\t\t\t\t\t\tdataModel.setData(null);\r\n\t\t\t\t\t\tdataModel.updateBindings(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/currentView\", this);\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get Shipment input value \r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.callOdataService().getLoadInq(this, _inputValue, \"\", \"\"); // function call to get deliveries associated to the shipemnt input\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\t\t\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/MainView.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(Controller, BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.MainView\", {\n\n\t\tonInit: function() {\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeShow: function(evt) {\n\t\t\t\t\tthis.component = this.getComponent();\n\t\t\t\t\tthis.model = this.component.getModel();\n\t\t\t\t\tthis.model.metadataLoaded().then(this._menuLoadFunction.bind(this));\n\t\t\t\t\tthis.oGlobalModel = this.getGlobalModel();\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t},\n\n\t\t_menuLoadFunction: function() {\n\t\t\t//Fetch Menu Configuration Data\n\t\t\tthis.afilters = [];\n\t\t\t// this._oApplication = this.getApplication();\n\t\t\t// var oWhenCallReadIsDone = this._oApplication._oGlobalWarehouseManage.menuConfigurationLoad(this, this.afilters);\n\t\t\t// this.getGlobalModel().setProperty(\"/currentScreen\", \"LM999\");\n\t\t\t//OLD ODATA CALL COMMENTED BY SELVAN NEXT IS REPLACEMENT FOR THIS \n\t\t\t//var oWhenCallReadIsDone = this.gssCallFunction().populateModelBuild(this);\n\t\t\t\n\t\t\tvar oWhenCallReadIsDone = this.callOdataService().loadMenuConfiguration(this);                          \n\t\t\t//Load Menu Fragment in view\n\t\t\toWhenCallReadIsDone.done(function() {\n\t\t\t\tthis._menuBinding(this.getGlobalModel().getProperty(\"/MenuData\"), \"\");\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_menuBinding: function(oSelectedItem, createBC) {\n\t\t\tthis._rfMenu = [];\n\t\t\tif (!this._oDialog) {\n\t\t\t\tvar MenuModel = this.getFragmentControllerModel();\n\t\t\t\tvar Menu = MenuModel.getProperty(\"/mainMenu\");\n\t\t\t\tthis._oDialog = sap.ui.xmlfragment(Menu, this);\n\t\t\t}\n\t\t\tvar oSubMenu = this.getModel(\"mainJsonModel\").getData().aItems;\n\t\t\t//To Get the menuBindings\n\t\t\t// this._rfMenu = this._oApplication._omenuBinding.oMenu(this, oSubMenu, oSelectedItem, createBC, this._oApplication);\n\t\t\tthis._rfMenu = this.gssCallMenu().oMenu(this, oSubMenu, oSelectedItem, createBC);\n\t\t\tthis.bindFilteredMenu(this._rfMenu);\n\t\t},\n\n\t\tbindFilteredMenu: function(_rfMenu) {\n\t\t\tvar rfModel = this.gssCallMenu().bindMenuModel(_rfMenu);\n\t\t\tthis._oDialog.setModel(rfModel, \"rfMenuModel\");\n\t\t\tvar oView = this.getView();\n\t\t\toView.addDependent(this._oDialog);\n\t\t\tthis._oDialog.setEndButton(new sap.m.Button({\n\t\t\t\ttext: this.geti18n(\"cancel\"),\n\t\t\t\tpress: function() {\n\t\t\t\t\tthis._prevMenu();\n\t\t\t\t}.bind(this)\n\t\t\t}));\n\t\t\tthis._oDialog.open();\n\t\t\t//*********************************Code by Sabari To Hide the Value on Main Menu Popup Open******************************//\n\t\t/*\tthis.getView().byId(\"rfScreen\").setText(\"WareHouse Management\"); //To Set the Title of the Page//*/\n\t\t\tthis.getView().byId(\"toolbarheader\").setVisible(false); //To hide the Header Bar//\n\t\t\tthis.getView().byId(\"inputValue\").setVisible(false); //To Hide the Input Field //\n\t\t\tthis.getView().byId(\"footerbar\").setVisible(false); //To Hide the Footer Bar //\n\t\t\tthis.getView().byId(\"message-popup\").setVisible(false); //To Hide the Popup message //\n\t\t\t//\tthis._fragmentFalse();\n\t\t},\n\n\t\t// Description: Handle cancel button in Menu dialog\n\t\t// ***********************************\t\t\t\t\n\t\t_prevMenu: function() {\n\t\t\tvar aLink = this.getView().byId(\"breadCrumbs\").getLinks(); //Get the number of links\n\t\t\tvar plinkIndex = aLink.length - 2; //length -2 gives the index of the previous breadcrumb index\n\t\t\tif (plinkIndex === -1) {\n\t\t\t\tthis.Exit(); //Call the exit function\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pMmenu = aLink[plinkIndex].getTarget(); //Get the target of the previous link using index\n\t\t\tvar pText = aLink[plinkIndex].getText(); //Get the text of the previous link using index\n\t\t\tif (pText === this.geti18n(\"mainMenu\")) { //If the text is Main menu, insert the link\n\t\t\t\tthis.getView().byId(\"breadCrumbs\").insertLink(aLink[plinkIndex], plinkIndex);\n\t\t\t}\n\t\t\t//Remove the link from the breadcrumb, once the user click on the cancel button in the menu \n\t\t\tvar removeLinkId = aLink.length - 1; //Get the last breadcrumb link\n\t\t\tthis.getView().byId(\"breadCrumbs\").removeLink(removeLinkId); //Remove the link\n\t\t\tvar mData = {\n\t\t\t\tMenTrans: pMmenu,\n\t\t\t\tProTyp: \"1\",\n\t\t\t\tText: pText\n\t\t\t};\n\t\t\tvar createBC = \"\";\n\t\t\t//Filter the dialog menu with selected item and don't create the breadcrumbs \n\t\t\tthis._menuBinding(mData, createBC);\n\t\t},\n\t\tonHandleMenu: function(oEvent) {\n\t\t\tvar oSelectedData = oEvent.getSource().getBindingContext(\"rfMenuModel\").getObject();\n\t\t\tif (oSelectedData.ProTyp === \"1\") {\n\t\t\t\tthis._oDialog.close();\n\t\t\t\tvar createBC = \"X\";\n\t\t\t\tthis._menuBinding(oSelectedData, createBC); //Call function menu binding\n\t\t\t} else if (oSelectedData.ProTyp === \"2\") {\n\t\t\t\tvar ScreenModel = this.getScreenModel(oSelectedData.MenTrans);\n\t\t\t\tthis.getRouter().navTo(ScreenModel.view);\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentScreen\", oSelectedData.MenTrans);\n\t\t\t\tthis._oDialog.close();\n\t\t\t}\n\t\t\t//COMMENT BY SELVAN FOR ABOVE NEW CODE FOR THIS\n\t\t\t// // ************** Srini code to display Putaway by TO begins **********************\n\t\t\t//var oGlobalModel = this.getView().getModel(\"globalProperties\");\n\t\t\t//\tvar loadView = this.getRouter();\n\n\t\t\t// else if (oSelectedData.ProTyp === \"2\" && oSelectedData.MenTrans === \"LM03\") {\n\t\t\t// \tthis._oDialog.close();\n\n\t\t\t// \toGlobalModel.setProperty(\"/currentScreen\", \"LM03\");\n\t\t\t// \tthis._oDialog.close();\n\t\t\t// \t//loadView = this.getRouter();\n\t\t\t// \tloadView.navTo(\"putaway\");\n\t\t\t// }else if (oSelectedData.ProTyp === \"2\" && oSelectedData.MenTrans === \"LM05\") {\n\t\t\t// \tthis._oDialog.close();\n\t\t\t// \toGlobalModel.setProperty(\"/currentScreen\", \"LM05\");\n\t\t\t// \tthis._oDialog.close();\n\t\t\t// \t//loadView = this.getRouter();\n\t\t\t// \tloadView.navTo(\"picking\");\n\t\t\t// }\n\t\t\t// // ************** Srini code to display Putaway by TO begins **********************\n\t\t}\n\t});\n});",
		"gss/newWarehouseManage_R1/controller/LoadShipment.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.LoadShipment\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadShipment\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel(this);\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tif (this.getGlobalModel().getProperty(\"/parentScreen\")) {\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(this.getGlobalModel().getProperty(\"/currentShip\"));\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(false);\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(true);\r\n\t\t\t\t\t\tthis.iGetInput();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getView().byId(\"scanHUDel\").setValue(\"\");\r\n\t\t\t\t\t\tthis.getView().byId(\"inputValue\").setEnabled(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"back\").setVisible(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t},\r\n\t\t\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\t\t\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get shipment input value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.getLoadDetails(_inputValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ==========================================\r\n\t\t// method call to bind fragment to that view\r\n\t\t// ==========================================\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId(); // to get the id of the view\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId); // to set the view id to the corresponding global model property\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\"); // to load fragments\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this); // to set id to the fragment\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded); // to add the loaded fragment to the view\r\n\t\t},\r\n\r\n\t\t// =========================================================\r\n\t\t// method to get input field details and send to odata call\r\n\t\t// =========================================================\r\n\t\tgetLoadDetails: function(sInputValue) {\r\n\t\t\tvar shipNo = sInputValue; // To get input field value\r\n\t\t\tvar hu = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterHU\");\r\n\t\t\tvar ship = this.getView().getModel(\"i18n\").getResourceBundle().getText(\"EnterShip\");\r\n\t\t\tvar huNo = this.getView().byId(\"scanHUDel\").getValue(); // To get input field value\r\n\t\t\tvar procInd = \"X\"; // Indicator for Load process\r\n\t\t\tvar filterFields = this.getFilterFields();\r\n\t\t\tif (shipNo && huNo) { // To check if both fields has values\r\n\t\t\t\tthis.getView().byId(\"scanHUDel\").setValueState(sap.ui.core.ValueState.None); // To set value state for input field\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().LoadDetails(this, shipNo, huNo, \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// this.gssCallFunction().populateModelBuild(this); // To pass the input values to the function&nbsp;\r\n\t\t\t} else if (shipNo && !huNo) { // To check if one field is empty\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().LoadDetails(this, shipNo, huNo, procInd);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// this.gssCallFunction().populateModelBuild(this); // To pass input values with indicator when a field is empty\r\n\t\t\t} else if (!shipNo && !huNo) { // To check if both fields are empty\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(ship); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t\tthis.getView().byId(\"scanHUDel\").setPlaceholder(hu); // To set placeholder for input field&nbsp;\r\n\t\t\t\tthis.getView().byId(\"scanHUDel\").setMaxLength(20);\r\n\t\t\t} else if (!shipNo && huNo) { // To check if one field is empty\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(ship); // To set placeholder for input field\r\n\t\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ================================\r\n\t\t// function call to load materials\r\n\t\t// ================================\r\n\t\tload: function() {\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"),\r\n\t\t\t\tLoadInd = \"\",\r\n\t\t\t\tHuStatus = \"HU03\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n                    utilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// =========================================\r\n\t\t// function call to revert the load process\r\n\t\t// =========================================\r\n\t\tloadRevert: function() {\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"undoProc\"));\r\n\t\t},\r\n\r\n\t\t// ===================================\r\n\t\t// function call to confirm materials \r\n\t\t// ===================================\r\n\t\tonConfirm: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t\tvar inputVal = this.getView().byId(\"inputValue\").getValue(); // To get value from the input field\r\n\t\t\tvar modelData = this.getModelData(\"itemList\"), // to get data from the model bound to the view\r\n\t\t\t\tLoadInd = \"\",\r\n\t\t\t\tHuStatus = \"HU04\";\r\n\t\t\tvar whenOdataCall = this.callOdataService().LoadUnloadKeyFields(this, modelData, HuStatus, \"\");\r\n\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\tutilities.loadIndUpdate(oResult.getData().aItems[0], this);\r\n                    utilities.bindMessagePop(this, \"\");\r\n\t\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to close fragment opened in the view\r\n\t\t// ============================================\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded); // to close the loaded fragment\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/unpackMaterial.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.unpackMaterial\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t\tthis.oDataCall();\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar callFragment = this.gssFragmentsFunction().loadFragment(this, \"addMaterial\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"addMaterial\", callFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\tpackMatScan: function() {\r\n\t\t\tutilities.barcodeReader(this, \"material\",\"addMaterial\");\r\n\t\t},\r\n\t\tpackQuaScan: function() {\r\n\t\t\tutilities.barcodeReader(this, \"quantity\",\"addMaterial\");\r\n\t\t},\r\n\t\tpackUnitScan: function() {\r\n\t\t\tutilities.barcodeReader(this, \"quantity\",\"addMaterial\");\r\n\t\t},\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\toDataCall: function() {\r\n\t\t\tvar _huVal = this.getGlobalModel().getProperty(\"/currentHuVal\");\r\n\t\t\tthis._shipInd = this.getGlobalModel().getProperty(\"/shipInd\");\r\n\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _huVal, this._shipInd, \"\");\r\n\t\t\t\twhenOdataCall.done(function() {\r\n\t\t\t\tutilities.bindMessagePop(this, \"\");\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\tonHandleAccept: function() {\r\n\t\t\tvar tableRowSelectedItems = utilities.selectedItems(this, \"unpackTable\");\r\n\t\t\tthis.callOdataService().acceptItems(this, tableRowSelectedItems, \"unpackTable\", this._shipInd);\r\n\r\n\t\t},\r\n\t\tonAddItem: function() {\r\n\t\t\tthis.fragmentLoaded.open();\r\n\r\n\t\t},\r\n\t\tonMatSave: function() {\r\n\t\t\tvar material = sap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"material\").getValue(),\r\n\t\t\t\tquantity = sap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"quantity\").getValue(),\r\n\t\t\t\tunit = sap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"unit\").getValue();\r\n\t\t\t var whenOdataCall = this.callOdataService().materialSave(this, material, quantity, unit,\"unpackTable\",\"HUMatModel\");\r\n\t\t\t \twhenOdataCall.done(function() {\r\n\t\t\t\tthis.onMatCancel();\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\tonMatCancel: function() {\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"material\").setValue(\"\");\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"quantity\").setValue(\"\");\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"addMaterial\", \"unit\").setValue(\"\");\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/grHu.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grHu\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar _screen = this.getCurrentScrn();\r\n\t\t\tvar _screenModel = this.getScreenModel(_screen);\r\n\t\t\tvar _text = this.getView().getModel(\"i18n\").getResourceBundle().getText(_screenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"grByHu\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(_text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\t\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.byId(\"inputValue\").getValue();\r\n\t\t\tvar whenOdataCall;\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\twhenOdataCall = this.callOdataService().grKeyFields(this, _inputValue);\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\t    this.checkInd(oResult.getData().aItems[0],\"true\");\r\n\t\t\t\t\t\tvar _delVal = this.byId(\"grDelField\").getText();\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", _delVal);\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentHuVal\", _inputValue);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());//opens fragment\r\n\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this);//createElements: function in BaseController to access CreateElements.js\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Called when items button pressed*/\r\n\t\t/*navigates to Items page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grDelItems\", this);// navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when unload button pressed*/\r\n\t\t/*navigates to unload page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unloadDelivery\", this);// navigateChild: function in utilities for navigating to child views\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GR Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO();//Generates TO for the Delivery\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost();//Performs GR Post\r\n\t\t\t}\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel();//closes the confirmation fragment\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//gssFragmentsFunction:function in BaseController to access Fragments.js\r\n\t\t},\r\n         /* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));// To set text to confirmaton fragment\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tvar whenOdataCall = this.callOdataService().handleDelTO(this, \"GRDForm\", \"itemList\", \"T\");//function in BaseController to access GssWarehouseManage.js\r\n\t\t\twhenOdataCall.done(function() {//Synchronous oData Call\r\n\t\t\t\tthis.getView().byId(\"toInd\").setText(this.geti18n(\"available\"));\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Putaway page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"putaway\", this);// navigateChild: function in utilities for navigating to child views\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGR: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();//To initialize and add fragment to the view\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();//opens the fragment\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGrPop\"));// To set text to confirmaton fragment\r\n\r\n\t\t},\r\n        /* =========================================================== */\r\n\t\t/*Function to Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);//closes the fragment\r\n\t\t\tthis.callOdataService().handleDelTO(this, \"GRDForm\", \"itemList\", \"C\");//function in BaseController to access GssWarehouseManage.js\r\n\r\n\t\t}\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/grShipment.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\",\r\n\t\"gss/newWarehouseManage_R1/model/utilities\"\r\n], function(Controller, BaseController, formatter, ResourceModel, utilities) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.grShipment\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.putAway\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter();\r\n\t\t\t\t\tthis.seti18nModel();\r\n\t\t\t\t\tthis.inputDetails();\r\n\t\t\t\t\tthis.loadCheck();\r\n\t\t\t\t\tthis.getBackModelData();\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel();\r\n\t\t\tthis.inputDetails();\r\n\r\n\t\t\tthis.setFragment();\r\n\t\t},\r\n\t\tseti18nModel: function() {\r\n\t\t\t// set i18n model on view\r\n\t\t\tvar i18nModel = new ResourceModel({\r\n\t\t\t\tbundleName: \"gss.newWarehouseManage_R1.i18n.i18n\"\r\n\t\t\t});\r\n\t\t\tthis.getView().setModel(i18nModel, \"i18n\");\r\n\t\t},\r\n\t\tinputDetails: function() {\r\n\t\t\tvar _screen = this.getCurrentScrn();\r\n\t\t\tvar _screenModel = this.getScreenModel(_screen);\r\n\t\t\tvar _text = this.getView().getModel(\"i18n\").getResourceBundle().getText(_screenModel.placeHolderLabel);\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewCid\", this.getView().getId());\r\n\t\t\tthis.getGlobalModel().setProperty(\"/title\", this.geti18n(\"grByShip\"));\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(_text);\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10);\r\n\t\t},\r\n\t\tsetFragment: function() {\r\n\t\t\tvar viewId = this.getView().getId();\r\n\t\t\tthis.getGlobalModel().setProperty(\"/viewId\", viewId);\r\n\t\t\tvar loadFragment = this.gssFragmentsFunction().loadFragment(this, \"confirmation\");\r\n\t\t\tthis.fragmentLoaded = sap.ui.xmlfragment(viewId + \"conf\", loadFragment, this);\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\r\n\t\t\tvar loadMsgPopFragment = this.gssFragmentsFunction().loadFragment(this, \"msgPopOver\");\r\n\t\t\tthis.msgFragmentLoaded = sap.ui.xmlfragment(viewId + \"msgPop\", loadMsgPopFragment, this);\r\n\t\t\tthis.getView().addDependent(this.msgFragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when an Item is selected in a table*/\r\n\t\t/*Checks the Indicators for the selected item */\r\n\t\t/* =========================================================== */\r\n\t\tonSingleSelect: function(oEvent) {\r\n\t\t\tvar len = this.getView().byId(\"table\").getSelectedItems().length; //length of the selected items\r\n\t\t\tif (len === 1) { //checks if only one item is selected\r\n\t\t\t\tvar vbeln = this.getView().byId(\"table\").getSelectedItem().getBindingContext(\"itemList\").getObject().Vbeln; //get Delivery no of the selected item\r\n\t\t\t\tthis.getGlobalModel().setProperty(\"/currentDelNo\", vbeln);\r\n\t\t\t\tvar obj = this.getView().byId(\"table\").getSelectedItem().getBindingContext(\"itemList\").getObject();\r\n\t\t\t\tthis.checkInd(obj, \"false\"); //function in BaseController to check Indicators\r\n\t\t\t} else if (len > 1) { //checks if more than one item is selected\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t} else if (len === 0) { //checks if no item is selected\r\n\t\t\t\tMessageToast.show(this.geti18n(\"toastOneDel\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue();\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tvar whenOdataCall = this.callOdataService().getLoadInq(this, _inputValue, \"\", \"\");\r\n\t\t\t\twhenOdataCall.done(function(oResult) {\r\n\t\t\t\t\t\tthis.checkInd(oResult.getData().aItems[0], \"\");\r\n\t\t\t\t\t\tutilities.checkVisible(this);\r\n\t\t\t\t\t\tthis.getGlobalModel().setProperty(\"/currentShip\", _inputValue);\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\", \"\");\r\n\t\t\tthis.iGetInput();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Handling message popover function*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMessagePopoverPress: function(oEvent) {\r\n\t\t\tif (!this.msgFragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.msgFragmentLoaded.openBy(oEvent.getSource());\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when more button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\thandleMore: function(oEvent) {\r\n\t\t\tthis.createElements().handleMoreButtons(oEvent, this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Items button pressed*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleItems: function(event) {\r\n\t\t\tutilities.navigateChild(\"grShipItems\", this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when Unload button pressed*/\r\n\t\t/*navigates to Unload page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleUnload: function(oEvent) {\r\n\t\t\tutilities.navigateChild(\"unloadDelivery\", this);\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when ok button pressed on the confirmation fragment*/\r\n\t\t/*Generate TO and Post GR Functionality*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirm: function() {\r\n\t\t\tif (this.getGlobalModel().getProperty(\"/indiTO\") === \"\") {\r\n\t\t\t\tthis.onHandleGTO();\r\n\t\t\t} else {\r\n\t\t\t\tthis.onHandlePost();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when cancel button pressed on the confirmation fragment*/\r\n\t\t/* =========================================================== */\r\n\t\tonConfirmCancel: function() {\r\n\t\t\tthis.onCancel();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To close the opened fragement*/\r\n\t\t/* =========================================================== */\r\n\t\tonCancel: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonGenerateTO: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"genToPop\"));\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Generate TO*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleGTO: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"table\", \"itemList\", \"T\");\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Called when TOEx button pressed */\r\n\t\t/*TO Execution Functionality*/\r\n\t\t/*navigates to Putaway page*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandleTOEx: function() {\r\n\t\t\tutilities.navigateChild(\"putaway\", this);\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*To open the Confirmation fragement for Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonPostGR: function() {\r\n\t\t\tif (!this.fragmentLoaded) {\r\n\t\t\t\tthis.setFragment();\r\n\t\t\t}\r\n\t\t\tthis.getView().addDependent(this.fragmentLoaded);\r\n\t\t\tthis.fragmentLoaded.open();\r\n\t\t\tsap.ui.core.Fragment.byId(this.getView().getId() + \"conf\", \"popup\").setText(this.geti18n(\"postGIPop\"));\r\n\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/*Function to Post GR*/\r\n\t\t/* =========================================================== */\r\n\t\tonHandlePost: function() {\r\n\t\t\tthis.gssFragmentsFunction().closeFragment(this.fragmentLoaded);\r\n\t\t\tthis.callOdataService().handleShipTO(this, \"table\", \"itemList\", \"C\");\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grShipment\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grShipment\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grShipment\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.grShipment\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gss/newWarehouseManage_R1/controller/LoadInq_Delivery.controller.js": "/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"gss/newWarehouseManage_R1/controller/BaseController\",\r\n\t\"gss/newWarehouseManage_R1/model/formatter\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(Controller, BaseController, formatter, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gss.newWarehouseManage_R1.controller.LoadInq_Delivery\", {\r\n\t\tformatter: formatter,\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gss.newWarehouseManage_R1.view.LoadInq_Delivery\r\n\t\t */\r\n\t\t// ================================================================================\r\n\t\t// This method is called first and is executed first in the controller's lifecycle\r\n\t\t// ================================================================================\r\n\t\tonInit: function() {\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeShow: function(evt) {\r\n\t\t\t\t\tthis._router = this.getRouter(); // calling the router initialization function\r\n\t\t\t\t\tthis.seti18nModel(this); // to set the resource bundle properties for the view\r\n\t\t\t\t\tthis.inputDetails(); // to get input details from the view\r\n\t\t\t\t\tthis.gssCallBreadcrumbs().getMainBreadCrumb(this); // to call the breadcrumbs for the view\r\n\t\t\t\t\tthis.getView().byId(\"inputValue\").setValue(\"\");\r\n\t\t\t\t\tvar dataModel = this.getView().getModel(\"itemList\");\r\n\t\t\t\t\tif (dataModel) {\r\n\t\t\t\t\t\tdataModel.setData(null);\r\n\t\t\t\t\t\tdataModel.updateBindings(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis._router = this.getRouter();\r\n\t\t\tthis.seti18nModel(this);\r\n\t\t\tthis.inputDetails();\r\n\t\t},\r\n\r\n\t\t// ================================================================\r\n\t\t// method to get current screen model & resource bundle properties\r\n\t\t// ================================================================\r\n\t\tinputDetails: function() {\r\n\t\t\tvar Screen = this.getCurrentScrn(); // function call to get current screen value\r\n\t\t\tvar ScreenModel = this.getScreenModel(Screen); // function call to get model set to current screen\r\n\t\t\tvar Text = this.getView().getModel(\"i18n\").getResourceBundle().getText(ScreenModel.placeHolderLabel); // to set resource bundle properties\r\n\t\t\tthis.getView().byId(\"inputValue\").setPlaceholder(Text); // to set placeholder to input field\r\n\t\t\tthis.getView().byId(\"inputValue\").setMaxLength(10); // to set length for input field\r\n\t\t},\r\n\r\n\t\t// =======================================================\r\n\t\t// method to get input field value and perform odata call\r\n\t\t// =======================================================\r\n\t\tiGetInput: function(oEvent) {\r\n\t\t\tvar _inputValue = this.getView().byId(\"inputValue\").getValue(); // To get delivery input value\r\n\t\t\tif (_inputValue) {\r\n\t\t\t\tthis.callOdataService().getLoadInq(this, _inputValue, \"\", \"\"); // function call to get HU's for the delivery input\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ============================================\r\n\t\t// method to pass barocde value to input field\r\n\t\t// ============================================\r\n\t\tonHandleScanInput: function(oEvent) {\r\n\t\t\tutilities.barcodeReader(this, \"inputValue\",\"\"); // function call to set barcode value to input field\r\n\t\t\tthis.iGetInput();\r\n\t\t}\r\n\t});\r\n\r\n});"
	}
});